<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:editors="clr-namespace:ActiproSoftware.Windows.Controls.Editors;assembly=ActiproSoftware.Editors.Wpf"
					xmlns:editorsPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Editors.Primitives;assembly=ActiproSoftware.Editors.Wpf"
					xmlns:productsEditors="clr-namespace:ActiproSoftware.Products.Editors;assembly=ActiproSoftware.Editors.Wpf"
					xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
					xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
					>
	
	<!-- Resources -->
	<SolidColorBrush x:Key="ErrorThemeBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="FocusVisualBlackStrokeThemeBrush" Color="#FF000000" />
	<SolidColorBrush x:Key="FocusVisualWhiteStrokeThemeBrush" Color="#FFFFFFFF" />
	<Thickness x:Key="HorizontalListBoxItemPadding">5</Thickness>
	
	
	<!-- Value converters -->
	<shared:BooleanNotConverter x:Key="BooleanNotConverter" />
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
	<editorsPrimitives:ColorComponentToPercentConverter x:Key="ColorComponentToPercentConverter" />
	<shared:ColorToBrushConverter x:Key="ColorToBrushConverter" />
	<editorsPrimitives:DateToDecadeStringConverter x:Key="DateToDecadeStringConverter" />
	<editorsPrimitives:DefaultValueConverter x:Key="DefaultValueConverter" />
	<editorsPrimitives:InputScopeConverter x:Key="InputScopeConverter" />
	<shared:PercentageConverter x:Key="PercentageConverter" />
	<shared:StringFormatConverter x:Key="StringFormatConverter" />
	<shared:ThicknessConverter x:Key="ThicknessConverter" />
	
	
	<!-- Geometries -->
	<Geometry x:Key="UpArrowGeometry">M 3,4 L 6.5,0 L 10,4 Z  M 13,0</Geometry>
	<Geometry x:Key="DownArrowGeometry">M 3,0 L 6.5,4 L 10,0 Z  M 13,0</Geometry>
	<Geometry x:Key="LeftArrowGeometry">M 4,3 L 0,6.5 L 4,10 Z  M 0,13</Geometry>
	<Geometry x:Key="RightArrowGeometry">M 0,3 L 4,6.5 L 0,10 Z  M 0,13</Geometry>
	<Geometry x:Key="SmallUpArrowGeometry">M 4,3 L 6.5,0 L 9,3 Z  M 13,0</Geometry>
	<Geometry x:Key="SmallDownArrowGeometry">M 4,0 L 6.5,3 L 9,0 Z  M 13,0</Geometry>
	<Geometry x:Key="SmallLeftArrowGeometry">M 0,6.5 L 3,4 L 3,9 Z  M 0,13</Geometry>
	<Geometry x:Key="SmallRightArrowGeometry">M 0,4 L 3,6.5 L 0,9 Z  M 0,13</Geometry>

	<!-- Chevron icons -->
	<DataTemplate x:Key="ChevronLeftIconTemplate">
		<Path Data="M 6.5,0.5 L 0.5,6.5 L 5.6,12.5" StrokeThickness="0.7"
			  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	<DataTemplate x:Key="ChevronRightIconTemplate">
		<Path Data="M 0.5,0.5 L 6.5,6.5 L 0.5,12.5" StrokeThickness="0.7"
			  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	
	<!-- Bounds icons -->
	<DataTemplate x:Key="LeftIconTemplate">
		<Path Data="M 0,0 L 1,0 L 1,11 L 0,11 Z  M 2,5.5 L 6,2 L 6,5 L 16,5 L 16,6 L 6,6 L 6,9 Z" 
			  Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	<DataTemplate x:Key="TopIconTemplate">
		<Path Data="M 0,0 L 0,1 L 11,1 L 11,0 Z  M 5.5,2 L 2,6 L 5,6 L 5,16 L 6,16 L 6,6 L 9,6 Z" 
			  Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	<DataTemplate x:Key="RightIconTemplate">
		<Path Data="M 14,5.5 L 10,2 L 10,5 L 0,5 L 0,6 L 10,6 L 10,9 Z  M 15,0 L 16,0 L 16,11 L 15,11 Z" 
			  Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	<DataTemplate x:Key="BottomIconTemplate">
		<Path Data="M 5.5,14 L 2,10 L 5,10 L 5,0 L 6,0 L 6,10 L 9,10 Z  M 0,15 L 0,16 L 11,16 L 11,15 Z" 
			  Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	
	<!-- CornerRadius icons -->
	<DataTemplate x:Key="TopLeftIconTemplate">
		<Path Data="M 0.5,12 L 0.5,2 A 1.5,1.5 90 0 1 2,0.5 L 12,0.5" 
			  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	<DataTemplate x:Key="TopRightIconTemplate">
		<Path Data="M 4,0.5 L 14,0.5 A 1.5,1.5 90 0 1 15.5,2 L 15.5,12" 
			  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	<DataTemplate x:Key="BottomRightIconTemplate">
		<Path Data="M 15.5,4 L 15.5,14 A 1.5,1.5 90 0 1 14,15.5 L 4,15.5" 
			  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	<DataTemplate x:Key="BottomLeftIconTemplate">
		<Path Data="M 12,15.5 L 2,15.5 A 1.5,1.5 90 0 1 0.5,14 L 0.5,4" 
			  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	
	<!-- Date/time icons -->
	<DataTemplate x:Key="DateIconTemplate">
		<Path Data="M 0.5,2.5 L 20.5,2.5 L 20.5,20.5 L 0.5,20.5 L 0.5,3.5 L 3.5,3.5 L 3.5,0.5 L 5.5,0.5 L 5.5,1.5 L 4.5,1.5 L 4.5,3.5 L 15.5,3.5 L 15.5,0.5 L 17.5,0.5 L 17.5,1.5 L 16.5,1.5 L 16.5,3.5 L 20.5,3.5 L 20.5,4.5 L 0.5,4.5 Z  M 0.5,8.5 L 20.5,8.5  M 0.5,12.5 L 20.5,12.5  M 0.5,16.5 L 20.5,16.5  M 4.5,5.5 L 4.5,19.5  M 8.5,5.5 L 8.5,19.5  M 12.5,5.5 L 12.5,19.5  M 16.5,5.5 L 16.5,19.5" 
			  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" StrokeStartLineCap="Square" StrokeEndLineCap="Square"  />
	</DataTemplate>
	<DataTemplate x:Key="TimeIconTemplate">
		<Grid Width="21" Height="21">
			<Ellipse Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" StrokeThickness="1" />
			<Path Data="M 0,10.5 L 3,10.5  M 10.5,0 L 10.5,3  M 22,10.5 L 18,10.5  M 10.5,22 L 10.5,18" 
				  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" StrokeThickness="1" />
			<Path Data="M 14,3.5 L 10.5,10.5 L 5.5,10.5" 
				  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" StrokeThickness="1" />
		</Grid>
	</DataTemplate>
	
	<!-- Gradient stop slider icons -->
	<DataTemplate x:Key="AddIconTemplate">
		<Path Data="M 5.5,0 L 5.5 11  M 0,5.5 L 11,5.5" 
			  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	<DataTemplate x:Key="RemoveIconTemplate">
		<Path Data="M 0,0.5 L 11,0.5" 
			  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	<DataTemplate x:Key="ReverseIconTemplate">
		<Grid Width="15" Height="15">
			<Path Data="M 3.5,4 L 0,8 L 7,8 Z  M 11.5,11 L 8,7 L 15,7 Z" 
				  Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
			<Path Data="M 10,13.5 8.5,13.5 A 5,5 90 0 1 3.5,8.5 L 3.5,8  M 5,1.5 6.5,1.5 A 5,5 90 0 1 11.5,6.5 L 11.5,7" 
				  Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
		</Grid>
	</DataTemplate>
	
	<!-- Size icons -->
	<DataTemplate x:Key="HeightIconTemplate">
		<Path Data="M 0,0 L 0,1 L 11,1 L 11,0 Z  M 0,15 L 0,16 L 11,16 L 11,15 Z  M 5.5,2 L 2,6 L 5,6 L 5,10 L 2,10 L 5.5,14 L 9,10 L 6,10 L 6,6 L 9,6 Z" 
			  Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	<DataTemplate x:Key="WidthIconTemplate">
		<Path Data="M 0,0 L 1,0 L 1,11 L 0,11 Z  M 15,0 L 16,0 L 16,11 L 15,11 Z  M 2,5.5 L 6,2 L 6,5 L 10,5 L 10,2 L 14,5.5 L 10,9 L 10,6 L 6,6 L 6,9 Z" 
			  Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(TextElement.Foreground)}" />
	</DataTemplate>
	

	<!-- products:EditorsLogo -->
	<Style x:Key="{x:Type productsEditors:EditorsLogo}" TargetType="productsEditors:EditorsLogo">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="productsEditors:EditorsLogo">
                    <Canvas Width="512" Height="512" Canvas.Left="0" Canvas.Top="0">
	                    <Path x:Name="Outer_border" Width="464.5" Height="170.5" Canvas.Left="23.83" Canvas.Top="24.5597" Stretch="Fill" Data="F1 M 43.83,34.5597L 468.33,34.5597C 473.853,34.5597 478.33,39.0368 478.33,44.5597L 478.33,175.06C 478.33,180.583 473.853,185.06 468.33,185.06L 43.83,185.06C 38.3072,185.06 33.83,180.583 33.83,175.06L 33.83,44.5597C 33.83,39.0368 38.3072,34.5597 43.83,34.5597 Z " StrokeThickness="20" StrokeMiterLimit="2.75">
		                    <Path.Stroke>
			                    <LinearGradientBrush StartPoint="0.46394,0.0576186" EndPoint="0.46394,0.947754">
				                    <LinearGradientBrush.GradientStops>
					                    <GradientStop Color="#FF3D7BAD" Offset="0"/>
					                    <GradientStop Color="#FFB7D9ED" Offset="1"/>
				                    </LinearGradientBrush.GradientStops>
			                    </LinearGradientBrush>
		                    </Path.Stroke>
		                    <Path.Fill>
			                    <LinearGradientBrush StartPoint="0.462317,-0.0011696" EndPoint="0.462317,1.00726">
				                    <LinearGradientBrush.GradientStops>
					                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
					                    <GradientStop Color="#FFF4F4F4" Offset="1"/>
				                    </LinearGradientBrush.GradientStops>
			                    </LinearGradientBrush>
		                    </Path.Fill>
	                    </Path>
	                    <Path x:Name="Dropdown" Width="143.5" Height="170.5" Canvas.Left="344.83" Canvas.Top="24.56" Stretch="Fill" Data="F1 M 468.33,34.56C 473.853,34.56 478.33,38.3455 478.33,43.015L 478.33,176.605C 478.33,181.274 473.853,185.06 468.33,185.06L 354.841,185.007L 354.83,34.5775C 357.903,34.5775 359.307,34.56 468.33,34.56 Z " StrokeThickness="20" StrokeMiterLimit="2.75">
		                    <Path.Stroke>
			                    <LinearGradientBrush StartPoint="0.51568,0.112166" EndPoint="0.51568,0.888246">
				                    <LinearGradientBrush.GradientStops>
					                    <GradientStop Color="#FF2C628B" Offset="0"/>
					                    <GradientStop Color="#FF2C628B" Offset="1"/>
				                    </LinearGradientBrush.GradientStops>
			                    </LinearGradientBrush>
		                    </Path.Stroke>
		                    <Path.Fill>
			                    <LinearGradientBrush StartPoint="0.51822,0.060626" EndPoint="0.51822,0.93984">
				                    <LinearGradientBrush.GradientStops>
					                    <GradientStop Color="#FFDEEDF6" Offset="0"/>
					                    <GradientStop Color="#FFC4E5F6" Offset="0.504237"/>
					                    <GradientStop Color="#FF98D1EF" Offset="0.512712"/>
					                    <GradientStop Color="#FF68B1D8" Offset="1"/>
				                    </LinearGradientBrush.GradientStops>
			                    </LinearGradientBrush>
		                    </Path.Fill>
	                    </Path>
	                    <Path x:Name="Dropdown_arrow" Width="64.7828" Height="32.5833" Canvas.Left="384.047" Canvas.Top="96.56" Stretch="Fill" StrokeMiterLimit="2.75" Stroke="#FF000000" Fill="#FF000000" Data="F1 M 416.622,128.643L 384.547,97.06L 448.33,97.06L 416.622,128.643 Z "/>
	                    <Rectangle x:Name="Dropdown_0" Width="464.5" Height="293" Canvas.Left="23.83" Canvas.Top="195.06" Stretch="Fill" StrokeThickness="20" StrokeMiterLimit="2.75" Stroke="#FFC6C7D2">
		                    <Rectangle.Fill>
			                    <LinearGradientBrush StartPoint="0.462317,-0.00116928" EndPoint="0.462317,1.00726">
				                    <LinearGradientBrush.GradientStops>
					                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
					                    <GradientStop Color="#FFFCFCFC" Offset="1"/>
				                    </LinearGradientBrush.GradientStops>
			                    </LinearGradientBrush>
		                    </Rectangle.Fill>
	                    </Rectangle>
	                    <Path x:Name="Dropdown_highlight" Width="424.5" Height="106.5" Canvas.Left="43.8301" Canvas.Top="288.56" Stretch="Fill" StrokeThickness="20" StrokeMiterLimit="2.75" Stroke="#FF99DEFD" Data="F1 M 58.8301,298.56L 453.33,298.56C 456.091,298.56 458.33,300.799 458.33,303.56L 458.33,380.06C 458.33,382.822 456.091,385.06 453.33,385.06L 58.8301,385.06C 56.0687,385.06 53.8301,382.822 53.8301,380.06L 53.8301,303.56C 53.8301,300.799 56.0687,298.56 58.8301,298.56 Z ">
		                    <Path.Fill>
			                    <LinearGradientBrush StartPoint="0.462317,-0.00116919" EndPoint="0.462317,1.00726">
				                    <LinearGradientBrush.GradientStops>
					                    <GradientStop Color="#FFF6FBFD" Offset="0"/>
					                    <GradientStop Color="#FFF1F8FD" Offset="0.0550847"/>
					                    <GradientStop Color="#FFD5EFFC" Offset="0.940678"/>
					                    <GradientStop Color="#FFE7F5FD" Offset="1"/>
				                    </LinearGradientBrush.GradientStops>
			                    </LinearGradientBrush>
		                    </Path.Fill>
	                    </Path>
	                    <Rectangle x:Name="Top_item" Width="253.333" Height="20" Canvas.Left="86.4134" Canvas.Top="242.31" Stretch="Fill" Fill="#FF000000"/>
	                    <Rectangle x:Name="Middle_item" Width="276.333" Height="20" Canvas.Left="85.7467" Canvas.Top="331.643" Stretch="Fill" Fill="#FF000000"/>
	                    <Rectangle x:Name="Bottom_item" Width="239.167" Height="20" Canvas.Left="84.9134" Canvas.Top="422.31" Stretch="Fill" Fill="#FF000000"/>
                    </Canvas>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- DropDownButtonBaseStyle -->
	<Style x:Key="DropDownButtonBaseStyle" TargetType="editorsPrimitives:DropDownButton">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBorderNormalThicknessKey}}" />
		<Setter Property="Margin" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownMarginNormalThicknessKey}}" />

		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBorderNormalCornerRadiusKey}}" />
		<Setter Property="themes:ThemeProperties.IsAnimationEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonIsAnimationEnabledBooleanKey}}" />

		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="ClickMode" Value="Press" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editorsPrimitives:DropDownButton">
					<Grid Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<Decorator Grid.Column="1" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
							<shared:ScrollChrome x:Name="chrome" Background="{TemplateBinding Background}"
									BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBackgroundDisabledBrushKey}}"
									BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBackgroundHoverBrushKey}}"
									BackgroundPressed="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBackgroundPressedBrushKey}}" BorderBrush="{TemplateBinding BorderBrush}"
									BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBorderDisabledBrushKey}}"
									BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBorderHoverBrushKey}}"
									BorderBrushPressed="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBorderPressedBrushKey}}" BorderThickness="{TemplateBinding BorderThickness}"
									GlyphBackground="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphBackgroundNormalBrushKey}}"
									GlyphBackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphBackgroundDisabledBrushKey}}"
									GlyphBackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphBackgroundHoverBrushKey}}"
									GlyphBackgroundPressed="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphBackgroundPressedBrushKey}}"
									InnerBorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownInnerBorderNormalBrushKey}}"
									InnerBorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownInnerBorderDisabledBrushKey}}"
									InnerBorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownInnerBorderHoverBrushKey}}"
									InnerBorderBrushPressed="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownInnerBorderPressedBrushKey}}" InnerBorderThickness="1"
									IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
									BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownElementChromeBorderStyleKey}}"
									CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
									UseAlternateGeometry="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphUseAlternateGeometryBooleanKey}}" Glyph="DropDownArrow"
									Margin="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownChromeMarginNormalThicknessKey}}" SnapsToDevicePixels="true" />
						</Decorator>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsPointerOverParent" Value="True">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="chrome" Property="State" Value="Pressed" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="chrome" Property="State" Value="Pressed" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editorsPrimitives:DropDownButton -->
	<Style x:Key="{x:Type editorsPrimitives:DropDownButton}" TargetType="editorsPrimitives:DropDownButton" BasedOn="{StaticResource DropDownButtonBaseStyle}">
	</Style>
	
	<!-- ToolBarEmbeddedDropDownButtonStyle -->
	<Style x:Key="ToolBarEmbeddedDropDownButtonStyle" TargetType="editorsPrimitives:DropDownButton" BasedOn="{StaticResource DropDownButtonBaseStyle}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editorsPrimitives:DropDownButton">
					<Grid Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<Decorator Grid.Column="1" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
							<Border x:Name="outerBorder" Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
								<Border x:Name="innerBorder" BorderThickness="1">
									<Path x:Name="arrowPath" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}"
										  Data="{StaticResource SmallDownArrowGeometry}" SnapsToDevicePixels="True" />
								</Border>
							</Border>
						</Decorator>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsPointerOverParent" Value="True">
							<Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundHoverBrushKey}}" />
							<Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditDropDownButtonBorderHoverBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderHoverBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundHoverBrushKey}}" />
							<Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditDropDownButtonBorderHoverBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderHoverBrushKey}}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundOpenedBrushKey}}" />
							<Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditDropDownButtonBorderPressedBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderOpenedBrushKey}}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundOpenedBrushKey}}" />
							<Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditDropDownButtonBorderPressedBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderOpenedBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- SpinnerBaseStyle -->
	<Style x:Key="SpinnerBaseStyle" TargetType="editorsPrimitives:Spinner">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphBackgroundNormalBrushKey}}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editorsPrimitives:Spinner">
					<editorsPrimitives:SpinnerButtonPanel Orientation="{TemplateBinding Orientation}">
						<RepeatButton x:Name="UpLeftButton" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
									  Command="{TemplateBinding IncrementCommand}" CommandParameter="{TemplateBinding CommandParameter}"
									  ToolTip="{TemplateBinding IncrementToolTip}" Style="{DynamicResource {x:Static themes:SharedResourceKeys.EmbeddedButtonBaseOverrideStyleKey}}">
							<Path x:Name="UpLeftPath" Data="{StaticResource UpArrowGeometry}" Fill="{Binding ElementName=UpLeftButton, Path=Foreground}" Stretch="None" />
						</RepeatButton>
						<RepeatButton x:Name="DownRightButton" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
									  Command="{TemplateBinding DecrementCommand}" CommandParameter="{TemplateBinding CommandParameter}"
									  ToolTip="{TemplateBinding DecrementToolTip}" Style="{DynamicResource {x:Static themes:SharedResourceKeys.EmbeddedButtonBaseOverrideStyleKey}}">
							<Path x:Name="DownRightPath" Data="{StaticResource DownArrowGeometry}" Fill="{Binding ElementName=DownRightButton, Path=Foreground}" Stretch="None" />
						</RepeatButton>
					</editorsPrimitives:SpinnerButtonPanel>
					
					<ControlTemplate.Triggers>
						<Trigger Property="Orientation" Value="Horizontal">
							<Setter TargetName="UpLeftPath" Property="Data" Value="{StaticResource LeftArrowGeometry}" />
							<Setter TargetName="DownRightPath" Property="Data" Value="{StaticResource RightArrowGeometry}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editorsPrimitives:Spinner -->
	<Style x:Key="{x:Type editorsPrimitives:Spinner}" TargetType="editorsPrimitives:Spinner" BasedOn="{StaticResource SpinnerBaseStyle}">
	</Style>
	
	<!-- ToolBarEmbeddedSpinnerStyle -->
	<Style x:Key="ToolBarEmbeddedSpinnerStyle" TargetType="editorsPrimitives:Spinner" BasedOn="{StaticResource SpinnerBaseStyle}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editorsPrimitives:Spinner">
					<editorsPrimitives:SpinnerButtonPanel Orientation="{TemplateBinding Orientation}">
						<RepeatButton x:Name="UpLeftButton" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
									  Command="{TemplateBinding IncrementCommand}" CommandParameter="{TemplateBinding CommandParameter}"
									  ToolTip="{TemplateBinding IncrementToolTip}" Style="{DynamicResource {x:Static themes:SharedResourceKeys.EmbeddedButtonBaseOverrideStyleKey}}">
							<Path x:Name="UpLeftPath" Data="{StaticResource SmallUpArrowGeometry}" Fill="{Binding ElementName=UpLeftButton, Path=Foreground}" Stretch="None" />
						</RepeatButton>
						<RepeatButton x:Name="DownRightButton" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
									  Command="{TemplateBinding DecrementCommand}" CommandParameter="{TemplateBinding CommandParameter}"
									  ToolTip="{TemplateBinding DecrementToolTip}" Style="{DynamicResource {x:Static themes:SharedResourceKeys.EmbeddedButtonBaseOverrideStyleKey}}">
							<Path x:Name="DownRightPath" Data="{StaticResource SmallDownArrowGeometry}" Fill="{Binding ElementName=DownRightButton, Path=Foreground}" Stretch="None" />
						</RepeatButton>
					</editorsPrimitives:SpinnerButtonPanel>
					
					<ControlTemplate.Triggers>
						<Trigger Property="Orientation" Value="Horizontal">
							<Setter TargetName="UpLeftPath" Property="Data" Value="{StaticResource SmallLeftArrowGeometry}" />
							<Setter TargetName="DownRightPath" Property="Data" Value="{StaticResource SmallRightArrowGeometry}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- EditBoxEmbeddedButtonStyle -->
	<Style x:Key="EditBoxEmbeddedButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource {x:Static themes:SharedResourceKeys.EmbeddedButtonBaseStyleKey}}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="MinWidth" Value="17" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
	</Style>
	
	<!-- EditBoxEmbeddedAddButtonStyle -->
	<Style x:Key="EditBoxEmbeddedAddButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource EditBoxEmbeddedButtonStyle}">
		<Setter Property="ContentTemplate" Value="{StaticResource AddIconTemplate}" />
	</Style>
	
	<!-- PartEditBoxBaseStyle -->
	<Style x:Key="PartEditBoxBaseStyle" TargetType="Control">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Padding" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditPaddingNormalThicknessKey}}" />
		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalCornerRadiusKey}}" />
		<Setter Property="themes:ThemeProperties.IsAnimationEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditIsAnimationEnabledBooleanKey}}" />
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Margin="2" StrokeThickness="1"
										Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" StrokeDashArray="1 2"
										SnapsToDevicePixels="true" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- PartEditBoxWithPopupFocusVisualStyle -->
	<Style x:Key="PartEditBoxWithPopupFocusVisualStyle">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Decorator Margin="{Binding Source={x:Static SystemParameters.VerticalScrollBarWidth}, Converter={StaticResource ThicknessConverter}, ConverterParameter='Right'}">
						<Rectangle Margin="2,2,1,2" StrokeThickness="1"
								Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" StrokeDashArray="1 2"
								SnapsToDevicePixels="true" />
					</Decorator>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:AutoCompleteBox -->
	<Style x:Key="{x:Type editors:AutoCompleteBox}" TargetType="editors:AutoCompleteBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:AutoCompleteBox">
					
					<Grid x:Name="rootGrid" SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />
						
						<shared:EmbeddedTextBox x:Name="PART_TextBox" CharacterCasing="{TemplateBinding CharacterCasing}"
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   IsReadOnly="{TemplateBinding IsReadOnly}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" />

						<StackPanel Grid.Column="1" Orientation="Horizontal"
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:DropDownButton x:Name="popupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</StackPanel>
						
						<Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True" Placement="Bottom"
							   IsOpen="{Binding Path=IsPopupOpen, RelativeSource={RelativeSource TemplatedParent}}">
							<shared:DropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ElementName=rootGrid, Path=ActualWidth}">
								<Border x:Name="dropDownBorder" MaxHeight="{TemplateBinding MaxPopupHeight}"
										Background="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}"
										BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}"
										BorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalThicknessKey}}">
									<Grid RenderOptions.ClearTypeHint="Enabled">
										<editorsPrimitives:EmbeddedListBox x:Name="PART_Selector" BorderThickness="0" DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
																		   ItemContainerStyle="{TemplateBinding ItemContainerStyle}" ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
																		   ItemTemplate="{TemplateBinding ItemTemplate}" ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
																		   ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilteredItemsSource}"
																		   SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem, Mode=TwoWay}" />
										<ContentPresenter x:Name="noItemsPresenter" Content="{TemplateBinding NoItemsContent}" ContentTemplate="{TemplateBinding NoItemsContentTemplate}" Visibility="Collapsed" />
									</Grid>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="PART_Selector" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="noItemsPresenter" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
							<Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="shadow" Property="Color" Value="#71000000" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:BrushEditBox -->
	<Style x:Key="{x:Type editors:BrushEditBox}" TargetType="editors:BrushEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="IsArrowKeyPartNavigationEnabled" Value="False" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Collapsed" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:BrushEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="3" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<Grid Margin="{TemplateBinding SwatchMargin}" Height="15" Width="15" Background="#ffffff" VerticalAlignment="Center"
							  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasSwatch, Converter={StaticResource BooleanToVisibilityConverter}}">
							<Path Margin="1" Fill="#cccccc" Data="M4,0 L9,0 L9,4 L4,4 Z  M0,4 L4,4 L4,9 L0,9 Z  M9,4 L13,4 L13,9 L9,9 Z  M4,9 L9,9 L9,13 L4,13 Z" />

							<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}" 
									Background="{TemplateBinding SwatchBrush}" SnapsToDevicePixels="True" />
						</Grid>

						<shared:EmbeddedTextBox x:Name="PART_TextBox" Grid.Column="1"
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}" 
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />

						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="2" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />

							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>

						<Popup x:Name="PART_Popup" Grid.ColumnSpan="3" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:BrushPicker IsAlphaEnabled="{TemplateBinding IsAlphaEnabled}" 
															 IsGradientAllowed="{TemplateBinding IsGradientAllowed}" IsNullAllowed="{TemplateBinding IsNullAllowed}" 
															 CanReuseBrush="{TemplateBinding CanReuseBrush}"
															 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															 IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly, Converter={StaticResource BooleanNotConverter}}"
															 Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:BrushPicker -->
	<Style x:Key="{x:Type editors:BrushPicker}" TargetType="editors:BrushPicker">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="10" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:BrushPicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<shared:HorizontalListBox x:Name="PART_BrushKindSelector" BorderThickness="0,0,0,1" SelectedValuePath="Content">
								<ListBoxItem x:Name="NoBrushItem" Padding="{StaticResource HorizontalListBoxItemPadding}"
											 Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsNullAllowed, Converter={StaticResource BooleanToVisibilityConverter}}">
									<ListBoxItem.Content>
										<editors:BrushKind>None</editors:BrushKind>
									</ListBoxItem.Content>
									<ListBoxItem.ContentTemplate>
										<DataTemplate>
											<Border Width="18" Height="18" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}">
												<Border.Background>
													<LinearGradientBrush EndPoint="1,1">
														<GradientStop Offset="0.48" Color="#efefef" />
														<GradientStop Offset="0.481" Color="#ff0000" />
														<GradientStop Offset="0.52" Color="#ff0000" />
														<GradientStop Offset="0.521" Color="#efefef" />
													</LinearGradientBrush>
												</Border.Background>
											</Border>
										</DataTemplate>
									</ListBoxItem.ContentTemplate>
								</ListBoxItem>
								<ListBoxItem x:Name="SolidBrushItem" Padding="{StaticResource HorizontalListBoxItemPadding}">
									<ListBoxItem.Content>
										<editors:BrushKind>SolidColor</editors:BrushKind>
									</ListBoxItem.Content>
									<ListBoxItem.ContentTemplate>
										<DataTemplate>
											<Border Width="18" Height="18" Background="#efefef" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}" />
										</DataTemplate>
									</ListBoxItem.ContentTemplate>
								</ListBoxItem>
								<ListBoxItem x:Name="HorizontalLinearGradientBrushItem" Padding="{StaticResource HorizontalListBoxItemPadding}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsGradientAllowed, Converter={StaticResource BooleanToVisibilityConverter}}">
									<ListBoxItem.Content>
										<editors:BrushKind>HorizontalLinearGradient</editors:BrushKind>
									</ListBoxItem.Content>
									<ListBoxItem.ContentTemplate>
										<DataTemplate>
											<Border Width="18" Height="18" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}">
												<Border.Background>
													<LinearGradientBrush EndPoint="1,0">
														<GradientStop Offset="0.03" Color="#ffffff" />
														<GradientStop Offset="0.97" Color="#000000" />
													</LinearGradientBrush>
												</Border.Background>
											</Border>
										</DataTemplate>
									</ListBoxItem.ContentTemplate>
								</ListBoxItem>
								<ListBoxItem x:Name="VerticalLinearGradientBrushItem" Padding="{StaticResource HorizontalListBoxItemPadding}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsGradientAllowed, Converter={StaticResource BooleanToVisibilityConverter}}">
									<ListBoxItem.Content>
										<editors:BrushKind>VerticalLinearGradient</editors:BrushKind>
									</ListBoxItem.Content>
									<ListBoxItem.ContentTemplate>
										<DataTemplate>
											<Border Width="18" Height="18" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}">
												<Border.Background>
													<LinearGradientBrush EndPoint="0,1">
														<GradientStop Offset="0.03" Color="#ffffff" />
														<GradientStop Offset="0.97" Color="#000000" />
													</LinearGradientBrush>
												</Border.Background>
											</Border>
										</DataTemplate>
									</ListBoxItem.ContentTemplate>
								</ListBoxItem>
								<ListBoxItem x:Name="DiagonalDownwardGradientBrushItem" Padding="{StaticResource HorizontalListBoxItemPadding}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsGradientAllowed, Converter={StaticResource BooleanToVisibilityConverter}}">
									<ListBoxItem.Content>
										<editors:BrushKind>DiagonalDownwardLinearGradient</editors:BrushKind>
									</ListBoxItem.Content>
									<ListBoxItem.ContentTemplate>
										<DataTemplate>
											<Border Width="18" Height="18" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}">
												<Border.Background>
													<LinearGradientBrush EndPoint="1,1">
														<GradientStop Offset="0.03" Color="#ffffff" />
														<GradientStop Offset="0.97" Color="#000000" />
													</LinearGradientBrush>
												</Border.Background>
											</Border>
										</DataTemplate>
									</ListBoxItem.ContentTemplate>
								</ListBoxItem>
								<ListBoxItem x:Name="DiagonalUpwardGradientBrushItem" Padding="{StaticResource HorizontalListBoxItemPadding}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsGradientAllowed, Converter={StaticResource BooleanToVisibilityConverter}}">
									<ListBoxItem.Content>
										<editors:BrushKind>DiagonalUpwardLinearGradient</editors:BrushKind>
									</ListBoxItem.Content>
									<ListBoxItem.ContentTemplate>
										<DataTemplate>
											<Border Width="18" Height="18" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}">
												<Border.Background>
													<LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
														<GradientStop Offset="0.03" Color="#ffffff" />
														<GradientStop Offset="0.97" Color="#000000" />
													</LinearGradientBrush>
												</Border.Background>
											</Border>
										</DataTemplate>
									</ListBoxItem.ContentTemplate>
								</ListBoxItem>
								<ListBoxItem x:Name="RadialGradientBrushItem" Padding="{StaticResource HorizontalListBoxItemPadding}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsGradientAllowed, Converter={StaticResource BooleanToVisibilityConverter}}">
									<ListBoxItem.Content>
										<editors:BrushKind>RadialGradient</editors:BrushKind>
									</ListBoxItem.Content>
									<ListBoxItem.ContentTemplate>
										<DataTemplate>
											<Border Width="18" Height="18" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}">
												<Border.Background>
													<RadialGradientBrush>
														<GradientStop Offset="0.15" Color="#ffffff" />
														<GradientStop Offset="1" Color="#000000" />
													</RadialGradientBrush>
												</Border.Background>
											</Border>
										</DataTemplate>
									</ListBoxItem.ContentTemplate>
								</ListBoxItem>
							</shared:HorizontalListBox>
							
							<editors:ColorPicker Grid.Row="1" Padding="{TemplateBinding Padding}" IsAlphaEnabled="{TemplateBinding IsAlphaEnabled}" 
												 IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsNull, Converter={StaticResource BooleanNotConverter}}"
												 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedColor, Mode=TwoWay}" />
							
							<Grid Grid.Row="2" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Padding, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Right,Bottom'}"
								  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsGradient, Converter={StaticResource BooleanToVisibilityConverter}}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="202" />
									<ColumnDefinition Width="10" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>

								<editors:GradientStopSlider x:Name="PART_GradientStopSlider" Grid.Row="2" Margin="5,0" CanReuseBrush="{TemplateBinding CanReuseBrush}"
															ActiveBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" 
															SelectedColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedColor, Mode=TwoWay}" />
								
								<Button Grid.Column="2" Width="21" Height="21" ContentTemplate="{StaticResource AddIconTemplate}" ToolTip="{TemplateBinding AddGradientStopButtonToolTip}"
										Command="{Binding ElementName=PART_GradientStopSlider, Path=AddStopCommand}"
										Style="{StaticResource {x:Static themes:SharedResourceKeys.ToolBarEmbeddedButtonBaseStyleKey}}" VerticalAlignment="Top"
										Visibility="{Binding ElementName=PART_GradientStopSlider, Path=CanAddStops, Converter={StaticResource BooleanToVisibilityConverter}}" />
								<Button Grid.Column="3" Width="21" Height="21" ContentTemplate="{StaticResource RemoveIconTemplate}" ToolTip="{TemplateBinding RemoveGradientStopButtonToolTip}"
										Command="{Binding ElementName=PART_GradientStopSlider, Path=RemoveSelectedStopCommand}"
										Style="{StaticResource {x:Static themes:SharedResourceKeys.ToolBarEmbeddedButtonBaseStyleKey}}" VerticalAlignment="Top"
										Visibility="{Binding ElementName=PART_GradientStopSlider, Path=CanRemoveStops, Converter={StaticResource BooleanToVisibilityConverter}}" />
								<Button Grid.Column="4" Width="21" Height="21" ContentTemplate="{StaticResource ReverseIconTemplate}" ToolTip="{TemplateBinding ReverseGradientStopsButtonToolTip}"
										Command="{Binding ElementName=PART_GradientStopSlider, Path=ReverseStopsCommand}"
										Style="{StaticResource {x:Static themes:SharedResourceKeys.ToolBarEmbeddedButtonBaseStyleKey}}" VerticalAlignment="Top" />
							</Grid>
								  
						</Grid>
					</Border>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNullAllowed" Value="False" />
								<Condition Property="IsGradientAllowed" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_BrushKindSelector" Property="Visibility" Value="Collapsed" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:ByteEditBox -->
	<Style x:Key="{x:Type editors:ByteEditBox}" TargetType="editors:ByteEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="CalculatorPopupPickerStyle">
			<Setter.Value>
				<Style TargetType="editors:BytePicker">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="editors:BytePicker">

								<editors:Calculator BorderThickness="0" AcceptsEscape="False" 
													Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Minimum}" 
													Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Maximum}" 
													Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" />
					
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="IsArrowKeyPartNavigationEnabled" Value="False" />
		<Setter Property="PickerKind" Value="Calculator" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:ByteEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:BytePicker x:Name="picker" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
															Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="PickerKind" Value="Calculator" />
								<Condition Property="PopupPickerStyle" Value="{x:Null}" />
							</MultiTrigger.Conditions>
							<Setter TargetName="picker" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CalculatorPopupPickerStyle}" />
						</MultiTrigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:BytePicker -->
	<Style x:Key="{x:Type editors:BytePicker}" TargetType="editors:BytePicker">
		<Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:BytePicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<editorsPrimitives:EmbeddedRadialSlider Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeMinimum}"
																Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeMaximum}"
																Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeValue, Mode=TwoWay}"
																SmallChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeSmallChange}"
																LargeChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeLargeChange}"
																/>
					</Border>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- CalculatorButtonBaseStyle -->
	<Style x:Key="CalculatorButtonBaseStyle" TargetType="ButtonBase">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="Margin" Value="2" />
		<Setter Property="MinHeight" Value="25" />
		<Setter Property="MinWidth" Value="35" />
		<Setter Property="Padding" Value="6,3" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />

		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderNormalCornerRadiusKey}}" />
		<Setter Property="themes:ThemeProperties.IsAnimationEnabled" Value="False" />

		<Setter Property="Focusable" Value="False" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ButtonBase">
					<shared:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundDefaulted="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBackgroundDefaultedBrushKey}}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBackgroundDisabledBrushKey}}"
							BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBackgroundHoverBrushKey}}"
							BackgroundPressed="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBackgroundPressedBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDefaulted="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderDefaultedBrushKey}}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderDisabledBrushKey}}"
							BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderHoverBrushKey}}"
							BorderBrushPressed="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderPressedBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Highlight="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonHighlightNormalBrushKey}}"
							HighlightDefaulted="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonHighlightDefaultedBrushKey}}"
							HighlightDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonHighlightDisabledBrushKey}}"
							HighlightHover="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonHighlightHoverBrushKey}}"
							HighlightPressed="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonHighlightPressedBrushKey}}"
							InnerBorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonInnerBorderNormalBrushKey}}"
							InnerBorderBrushDefaulted="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonInnerBorderDefaultedBrushKey}}"
							InnerBorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonInnerBorderDisabledBrushKey}}"
							InnerBorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonInnerBorderHoverBrushKey}}"
							InnerBorderBrushPressed="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonInnerBorderPressedBrushKey}}"
							InnerBorderThickness="1"
							IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
							BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonElementChromeBorderStyleKey}}" 
							CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
							SnapsToDevicePixels="true">
						<ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</shared:ElementChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonForegroundDefaultedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Defaulted" />
						</Trigger>
						<Trigger Property="Button.IsDefaulted" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonForegroundDefaultedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Defaulted" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonForegroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonForegroundPressedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Pressed" />
						</Trigger>
						<Trigger Property="ToggleButton.IsChecked" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonForegroundPressedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Pressed" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:Calculator -->
	<Style x:Key="{x:Type editors:Calculator}" TargetType="editors:Calculator">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerDarkBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="Padding" Value="3" />

		<Setter Property="DigitButtonStyle">
			<Setter.Value>
				<Style TargetType="Button" BasedOn="{StaticResource CalculatorButtonBaseStyle}">
					<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonLightBackgroundNormalBrushKey}}" />
				</Style>
			</Setter.Value>
		</Setter>

		<Setter Property="MemoryButtonStyle">
			<Setter.Value>
				<Style TargetType="Button" BasedOn="{StaticResource CalculatorButtonBaseStyle}">
					<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonDarkBackgroundNormalBrushKey}}" />
				</Style>
			</Setter.Value>
		</Setter>

		<Setter Property="OperationButtonStyle">
			<Setter.Value>
				<Style TargetType="Button" BasedOn="{StaticResource CalculatorButtonBaseStyle}" />
			</Setter.Value>
		</Setter>

		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Margin="2" StrokeThickness="1"
										Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" StrokeDashArray="1 2"
										SnapsToDevicePixels="true" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:Calculator">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition />
								<RowDefinition />
								<RowDefinition />
								<RowDefinition />
								<RowDefinition />
								<RowDefinition />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>

							<!-- Row 0 (Display) -->
							<Border x:Name="displayBorder" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5" Margin="2"
									BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderNormalBrushKey}}" BorderThickness="1" Padding="8,4"
									Background="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerLightBackgroundNormalBrushKey}}" 
									CornerRadius="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalCornerRadiusKey}}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasDisplay, Converter={StaticResource BooleanToVisibilityConverter}}">
								<TextBlock Text="{TemplateBinding DisplayText}" FontSize="{TemplateBinding DisplayFontSize}" HorizontalAlignment="Right" />
							</Border>

							<!-- Row 1 -->
							<Button Grid.Row="1" Grid.Column="0" Content="{productsEditors:SRExtension UICalculatorButtonClearMemoryText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ClearMemoryCommand}" Style="{TemplateBinding MemoryButtonStyle}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasMemoryButtons, Converter={StaticResource BooleanToVisibilityConverter}}" />
							<Button Grid.Row="1" Grid.Column="1" Content="{productsEditors:SRExtension UICalculatorButtonRecallMemoryText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RecallMemoryCommand}" Style="{TemplateBinding MemoryButtonStyle}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasMemoryButtons, Converter={StaticResource BooleanToVisibilityConverter}}" />
							<Button Grid.Row="1" Grid.Column="2" Content="{productsEditors:SRExtension UICalculatorButtonSetMemoryText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SetMemoryCommand}" Style="{TemplateBinding MemoryButtonStyle}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasMemoryButtons, Converter={StaticResource BooleanToVisibilityConverter}}" />
							<Button Grid.Row="1" Grid.Column="3" Content="{productsEditors:SRExtension UICalculatorButtonAddToMemoryText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AddToMemoryCommand}" Style="{TemplateBinding MemoryButtonStyle}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasMemoryButtons, Converter={StaticResource BooleanToVisibilityConverter}}" />
							<Button Grid.Row="1" Grid.Column="4" Content="{productsEditors:SRExtension UICalculatorButtonSubtractFromMemoryText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SubtractFromMemoryCommand}" Style="{TemplateBinding MemoryButtonStyle}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasMemoryButtons, Converter={StaticResource BooleanToVisibilityConverter}}" />

							<!-- Row 2 -->
							<Button Grid.Row="2" Grid.Column="0" Content="{productsEditors:SRExtension UICalculatorButtonBackspaceText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackspaceCommand}" Style="{TemplateBinding OperationButtonStyle}" />
							<Button Grid.Row="2" Grid.Column="1" Content="{productsEditors:SRExtension UICalculatorButtonClearEntryText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ClearEntryCommand}" Style="{TemplateBinding OperationButtonStyle}" />
							<Button Grid.Row="2" Grid.Column="2" Content="{productsEditors:SRExtension UICalculatorButtonClearText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ClearCommand}" Style="{TemplateBinding OperationButtonStyle}" />
							<Button Grid.Row="2" Grid.Column="3" Content="{productsEditors:SRExtension UICalculatorButtonToggleSignText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OperationCommand}" Style="{TemplateBinding OperationButtonStyle}">
								<Button.CommandParameter>
									<editors:CalculatorOperationKind>ToggleSign</editors:CalculatorOperationKind>
								</Button.CommandParameter>
							</Button>
							<Button Grid.Row="2" Grid.Column="4" Content="{productsEditors:SRExtension UICalculatorButtonSquareRootText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OperationCommand}" Style="{TemplateBinding OperationButtonStyle}">
								<Button.CommandParameter>
									<editors:CalculatorOperationKind>SquareRoot</editors:CalculatorOperationKind>
								</Button.CommandParameter>
							</Button>

							<!-- Row 3 -->
							<Button Grid.Row="3" Grid.Column="0" Content="{productsEditors:SRExtension UICalculatorButtonDigit7Text}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InsertDigitCommand}" CommandParameter="7" Style="{TemplateBinding DigitButtonStyle}" />
							<Button Grid.Row="3" Grid.Column="1" Content="{productsEditors:SRExtension UICalculatorButtonDigit8Text}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InsertDigitCommand}" CommandParameter="8" Style="{TemplateBinding DigitButtonStyle}" />
							<Button Grid.Row="3" Grid.Column="2" Content="{productsEditors:SRExtension UICalculatorButtonDigit9Text}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InsertDigitCommand}" CommandParameter="9" Style="{TemplateBinding DigitButtonStyle}" />
							<Button Grid.Row="3" Grid.Column="3" Content="{productsEditors:SRExtension UICalculatorButtonDivideText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OperationCommand}" Style="{TemplateBinding OperationButtonStyle}">
								<Button.CommandParameter>
									<editors:CalculatorOperationKind>Divide</editors:CalculatorOperationKind>
								</Button.CommandParameter>
							</Button>
							<Button Grid.Row="3" Grid.Column="4" Content="{productsEditors:SRExtension UICalculatorButtonPercentText}"
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OperationCommand}" Style="{TemplateBinding OperationButtonStyle}">
								<Button.CommandParameter>
									<editors:CalculatorOperationKind>Percent</editors:CalculatorOperationKind>
								</Button.CommandParameter>
							</Button>

							<!-- Row 4 -->
							<Button Grid.Row="4" Grid.Column="0" Content="{productsEditors:SRExtension UICalculatorButtonDigit4Text}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InsertDigitCommand}" CommandParameter="4" Style="{TemplateBinding DigitButtonStyle}" />
							<Button Grid.Row="4" Grid.Column="1" Content="{productsEditors:SRExtension UICalculatorButtonDigit5Text}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InsertDigitCommand}" CommandParameter="5" Style="{TemplateBinding DigitButtonStyle}" />
							<Button Grid.Row="4" Grid.Column="2" Content="{productsEditors:SRExtension UICalculatorButtonDigit6Text}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InsertDigitCommand}" CommandParameter="6" Style="{TemplateBinding DigitButtonStyle}" />
							<Button Grid.Row="4" Grid.Column="3" Content="{productsEditors:SRExtension UICalculatorButtonMultiplyText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OperationCommand}" Style="{TemplateBinding OperationButtonStyle}">
								<Button.CommandParameter>
									<editors:CalculatorOperationKind>Multiply</editors:CalculatorOperationKind>
								</Button.CommandParameter>
							</Button>
							<Button Grid.Row="4" Grid.Column="4" Content="{productsEditors:SRExtension UICalculatorButtonReciprocalText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OperationCommand}" Style="{TemplateBinding OperationButtonStyle}">
								<Button.CommandParameter>
									<editors:CalculatorOperationKind>Reciprocal</editors:CalculatorOperationKind>
								</Button.CommandParameter>
							</Button>

							<!-- Row 5 -->
							<Button Grid.Row="5" Grid.Column="0" Content="{productsEditors:SRExtension UICalculatorButtonDigit1Text}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InsertDigitCommand}" CommandParameter="1" Style="{TemplateBinding DigitButtonStyle}" />
							<Button Grid.Row="5" Grid.Column="1" Content="{productsEditors:SRExtension UICalculatorButtonDigit2Text}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InsertDigitCommand}" CommandParameter="2" Style="{TemplateBinding DigitButtonStyle}" />
							<Button Grid.Row="5" Grid.Column="2" Content="{productsEditors:SRExtension UICalculatorButtonDigit3Text}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InsertDigitCommand}" CommandParameter="3" Style="{TemplateBinding DigitButtonStyle}" />
							<Button Grid.Row="5" Grid.Column="3" Content="{productsEditors:SRExtension UICalculatorButtonSubtractText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OperationCommand}" Style="{TemplateBinding OperationButtonStyle}">
								<Button.CommandParameter>
									<editors:CalculatorOperationKind>Subtract</editors:CalculatorOperationKind>
								</Button.CommandParameter>
							</Button>

							<!-- Row 5/6 -->
							<Button Grid.Row="5" Grid.Column="4" Grid.RowSpan="2" Content="{productsEditors:SRExtension UICalculatorButtonCalculateText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CalculateCommand}" Style="{TemplateBinding OperationButtonStyle}" />

							<!-- Row 6 -->
							<Button Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Content="{productsEditors:SRExtension UICalculatorButtonDigit0Text}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InsertDigitCommand}" CommandParameter="0" Style="{TemplateBinding DigitButtonStyle}" />
							<Button Grid.Row="6" Grid.Column="2" Content="{productsEditors:SRExtension UICalculatorButtonDecimalSeparatorText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InsertDecimalSeparatorCommand}" Style="{TemplateBinding DigitButtonStyle}" />
							<Button Grid.Row="6" Grid.Column="3" Content="{productsEditors:SRExtension UICalculatorButtonAddText}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OperationCommand}" Style="{TemplateBinding OperationButtonStyle}">
								<Button.CommandParameter>
									<editors:CalculatorOperationKind>Add</editors:CalculatorOperationKind>
								</Button.CommandParameter>
							</Button>
						</Grid>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsOutOfRange" Value="True">
							<Setter TargetName="displayBorder" Property="BorderBrush" Value="{StaticResource ErrorThemeBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:ColorEditBox -->
	<Style x:Key="{x:Type editors:ColorEditBox}" TargetType="editors:ColorEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="IsArrowKeyPartNavigationEnabled" Value="False" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:ColorEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="3" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<Grid Margin="{TemplateBinding SwatchMargin}" Height="15" Width="15" Background="#ffffff" VerticalAlignment="Center"
							  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasSwatch, Converter={StaticResource BooleanToVisibilityConverter}}">
							<Path Margin="1" Fill="#cccccc" Data="M4,0 L9,0 L9,4 L4,4 Z  M0,4 L4,4 L4,9 L0,9 Z  M9,4 L13,4 L13,9 L9,9 Z  M4,9 L9,9 L9,13 L4,13 Z" />
							
							<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}" 
									Background="{TemplateBinding SwatchBrush}" SnapsToDevicePixels="True" />
						</Grid>
						
						<shared:EmbeddedTextBox x:Name="PART_TextBox" Grid.Column="1"
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}" 
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="2" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="3" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:ColorPicker IsAlphaEnabled="{TemplateBinding IsAlphaEnabled}"
															 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															 IsEditable="{TemplateBinding IsEditable}" HasColorEditBox="False"
															 IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly, Converter={StaticResource BooleanNotConverter}}"
															 Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:ColorPicker -->
	<Style x:Key="{x:Type editors:ColorPicker}" TargetType="editors:ColorPicker">
		<Setter Property="DegreeInlineTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock Margin="2,0,2,0" Text="&#176;" VerticalAlignment="Center" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="10" />
		<Setter Property="PercentInlineTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock Margin="2,0,2,0" Text="%" VerticalAlignment="Center" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:ColorPicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<StackPanel x:Name="RootPanel" Orientation="Horizontal">
							<editors:HsbColorPicker A="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=A, Mode=OneWay}"
													Hue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Hue, Mode=TwoWay}"
													Saturation="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Saturation, Mode=TwoWay}"
													Brightness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Brightness, Mode=TwoWay}"
													/>
						
							<Grid x:Name="ComponentsPanel" Margin="20,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" MinWidth="57" />
								</Grid.ColumnDefinitions>

								<editors:ColorEditBox Grid.Row="0" Grid.ColumnSpan="2" Margin="0,0,0,5"  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" 
													  HasSwatch="False" HasPopup="False" SpinnerVisibility="Collapsed" IsAlphaEnabled="{TemplateBinding IsAlphaEnabled}" 
													  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasColorEditBox, Converter={StaticResource BooleanToVisibilityConverter}}" />

								<editors:EnumEditBox Grid.Row="1" Grid.ColumnSpan="2" UseDisplayAttributes="True"
													 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextInputMode, Mode=TwoWay}" />

								<Border Grid.Row="2" Grid.Column="0" Margin="0,5,5,0" Width="18" Height="18" Background="{TemplateBinding Component1SwatchBrush}" 
										BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}" VerticalAlignment="Center" />
								<editors:Int32EditBox x:Name="PART_Component1EditBox" Grid.Row="2" Grid.Column="1" Margin="0,5,0,0" VerticalAlignment="Center" IsEditable="{TemplateBinding IsEditable}"
													 SpinnerVisibility="Collapsed" HasPopup="True" PickerKind="Default"
													 Minimum="0" Maximum="255" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=R, Mode=TwoWay}" />
								
								<Border Grid.Row="3" Grid.Column="0" Margin="0,5,5,0" Width="18" Height="18" Background="{TemplateBinding Component2SwatchBrush}" 
										BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}" VerticalAlignment="Center" />
								<editors:Int32EditBox x:Name="PART_Component2EditBox" Grid.Row="3" Grid.Column="1" Margin="0,5,0,0" VerticalAlignment="Center" IsEditable="{TemplateBinding IsEditable}"
													 SpinnerVisibility="Collapsed" HasPopup="True" PickerKind="Default"
													 Minimum="0" Maximum="255" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=G, Mode=TwoWay}" />
								
								<Border Grid.Row="4" Grid.Column="0" Margin="0,5,5,0" Width="18" Height="18" Background="{TemplateBinding Component3SwatchBrush}" 
										BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}" VerticalAlignment="Center" />
								<editors:Int32EditBox x:Name="PART_Component3EditBox" Grid.Row="4" Grid.Column="1" Margin="0,5,0,0" VerticalAlignment="Center" IsEditable="{TemplateBinding IsEditable}"
													 SpinnerVisibility="Collapsed" HasPopup="True" PickerKind="Default"
													 Minimum="0" Maximum="255" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=B, Mode=TwoWay}" />

								<Border Grid.Row="5" Grid.Column="0" Margin="0,5,5,0" Width="18" Height="18" Background="#ffffff"
										BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}" VerticalAlignment="Center"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsAlphaEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
									<Path Fill="#cccccc" Data="M5,0 L11,0 L11,5 L5,5 Z  M0,5 L5,5 L5,11 L0,11 Z  M11,5 L16,5 L16,11 L11,11 Z  M5,11 L11,11 L11,16 L5,16 Z" />
								</Border>
								<editors:DoubleEditBox x:Name="AlphaEditBox" Grid.Row="5" Grid.Column="1" Margin="0,5,0,0" VerticalAlignment="Center" IsEditable="{TemplateBinding IsEditable}"
													 SpinnerVisibility="Collapsed" HasPopup="True" PickerKind="Default" Minimum="0" Maximum="100" Format="0'%'"
													 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=A, Mode=TwoWay, Converter={StaticResource ColorComponentToPercentConverter}}"
													 Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsAlphaEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" />
							</Grid>
						</StackPanel>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:CornerRadiusEditBox -->
	<Style x:Key="{x:Type editors:CornerRadiusEditBox}" TargetType="editors:CornerRadiusEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:CornerRadiusEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:CornerRadiusPicker Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
																	Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
																	Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:CornerRadiusPicker -->
	<Style x:Key="{x:Type editors:CornerRadiusPicker}" TargetType="editors:CornerRadiusPicker">
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:CornerRadiusPicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<shared:HorizontalListBox x:Name="PART_PartSelector" BorderThickness="0,0,0,1">
								<ListBoxItem x:Name="TopLeftPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource TopLeftIconTemplate}" />
								<ListBoxItem x:Name="TopRightPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource TopRightIconTemplate}" />
								<ListBoxItem x:Name="BottomRightPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource BottomRightIconTemplate}" />
								<ListBoxItem x:Name="BottomLeftPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource BottomLeftIconTemplate}" />
							</shared:HorizontalListBox>
							
							<editors:DoublePicker Grid.Row="1" x:Name="PART_ValuePicker" />
						</Grid>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:CountryComboBox -->
	<Style x:Key="{x:Type editors:CountryComboBox}" TargetType="editors:CountryComboBox" BasedOn="{StaticResource {x:Static themes:SharedResourceKeys.ComboBoxStyleKey}}">
	</Style>
	
	<!-- editors:CurrencyComboBox -->
	<Style x:Key="{x:Type editors:CurrencyComboBox}" TargetType="editors:CurrencyComboBox" BasedOn="{StaticResource {x:Static themes:SharedResourceKeys.ComboBoxStyleKey}}">
	</Style>
	
	<!-- editors:DateEditBox -->
	<Style x:Key="{x:Type editors:DateEditBox}" TargetType="editors:DateEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="Format" Value="d" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinWrapping" Value="Wrap" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:DateEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:DatePicker x:Name="PART_Picker" CanRetainTime="{TemplateBinding CanRetainTime}" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}"
															Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly, Converter={StaticResource BooleanNotConverter}}"
															Style="{TemplateBinding PopupPickerStyle}" BorderThickness="0" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:DatePicker -->
	<Style x:Key="{x:Type editors:DatePicker}" TargetType="editors:DatePicker">
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalThicknessKey}}" />
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:DatePicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<editors:MonthCalendar x:Name="PART_MonthCalendar" BorderThickness="0" CanRetainTime="{TemplateBinding CanRetainTime}" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}"
											   SelectedDate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" />
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:DateTimeEditBox -->
	<Style x:Key="{x:Type editors:DateTimeEditBox}" TargetType="editors:DateTimeEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinWrapping" Value="Wrap" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:DateTimeEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:DateTimePicker Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}"
																Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
																IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly, Converter={StaticResource BooleanNotConverter}}"
																Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:DateTimePicker -->
	<Style x:Key="{x:Type editors:DateTimePicker}" TargetType="editors:DateTimePicker">
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalBrushKey}}" />
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="MinHeight" Value="368" />
		<Setter Property="MinWidth" Value="324" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:DateTimePicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<shared:HorizontalListBox x:Name="PART_PartSelector" BorderThickness="0,0,0,1">
								<ListBoxItem x:Name="DatePartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource DateIconTemplate}" />
								<ListBoxItem x:Name="TimePartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource TimeIconTemplate}" />
							</shared:HorizontalListBox>

							<editors:DatePicker x:Name="PART_DateValuePicker" Grid.Row="1" BorderThickness="0"
												CanRetainTime="True" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}"
												Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" />
							
							<editors:TimePicker x:Name="PART_TimeValuePicker" Grid.Row="1" Padding="5" VerticalAlignment="Center" Visibility="Collapsed" 
												Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}"
												Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" />
						</Grid>
						
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ComponentVisibilityStates">
								<VisualState x:Name="TimeVisible">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_DateValuePicker" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_TimeValuePicker" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DateVisible" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:DoubleEditBox -->
	<Style x:Key="{x:Type editors:DoubleEditBox}" TargetType="editors:DoubleEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="CalculatorPopupPickerStyle">
			<Setter.Value>
				<Style TargetType="editors:DoublePicker">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="editors:DoublePicker">

								<editors:Calculator BorderThickness="0" AcceptsEscape="False" 
													Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Minimum}" 
													Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Maximum}" 
													Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" />
					
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="IsArrowKeyPartNavigationEnabled" Value="False" />
		<Setter Property="PickerKind" Value="Calculator" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:DoubleEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:DoublePicker x:Name="picker" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
															  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															  Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="PickerKind" Value="Calculator" />
								<Condition Property="PopupPickerStyle" Value="{x:Null}" />
							</MultiTrigger.Conditions>
							<Setter TargetName="picker" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CalculatorPopupPickerStyle}" />
						</MultiTrigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:DoublePicker -->
	<Style x:Key="{x:Type editors:DoublePicker}" TargetType="editors:DoublePicker">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:DoublePicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<editorsPrimitives:EmbeddedRadialSlider Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeMinimum}" 
																Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeMaximum}"
																Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeValue, Mode=TwoWay}"
																SmallChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeSmallChange}"
																LargeChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeLargeChange}"
																/>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- SemiCircleDecrementButtonStyle -->
	<Style x:Key="SemiCircleDecrementButtonStyle" TargetType="RepeatButton">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerDarkEndBackgroundNormalBrushKey}}" />
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Grid>
									<Path x:Name="FocusVisualWhite" Data="M 76,0 A 37,38 90 1 1 0,0 Z" IsHitTestVisible="False" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
										  StrokeEndLineCap="Square" StrokeDashArray="1,1" StrokeDashOffset="1.5"/>
									<Path x:Name="FocusVisualBlack" Data="M 76,0 A 37,38 90 1 1 0,0 Z" IsHitTestVisible="False" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
										  StrokeEndLineCap="Square" StrokeDashArray="1,1" StrokeDashOffset="0.5"/>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundHoverBrushKey}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Foreground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundPressedBrushKey}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Foreground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Path x:Name="Background" Data="M 76,0 A 37,38 90 1 1 0,0 Z" Fill="{TemplateBinding Background}" />
						<Path x:Name="Foreground" Width="17" Height="17" Margin="0,0,0,3" Data="M 0,8 L 17,8 L 17,9 L 0,9 Z"
							  Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- SemiCircleIncrementButtonStyle -->
	<Style x:Key="SemiCircleIncrementButtonStyle" TargetType="RepeatButton">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerDarkEndBackgroundNormalBrushKey}}" />
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Grid>
									<Path x:Name="FocusVisualWhite" Data="M 0,37 A 37,38 90 1 1 76,37 Z" IsHitTestVisible="False" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
										  StrokeEndLineCap="Square" StrokeDashArray="1,1" StrokeDashOffset="1.5"/>
									<Path x:Name="FocusVisualBlack" Data="M 0,37 A 37,38 90 1 1 76,37 Z" IsHitTestVisible="False" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
										  StrokeEndLineCap="Square" StrokeDashArray="1,1" StrokeDashOffset="0.5"/>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundHoverBrushKey}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Foreground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundPressedBrushKey}}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Foreground" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Path x:Name="Background" Data="M 0,37 A 37,38 90 1 1 76,37 Z" Fill="{TemplateBinding Background}" />
						<Path x:Name="Foreground" Width="17" Height="17" Margin="0,3,0,0" Data="M 0,8 L 8,8 L 8,0 L 9,0 L 9,8 L 17,8 L 17,9 L 9,9 L 9,17 L 8,17 L 8,9 L 0,9 Z"
							  Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editorsPrimitives:EmbeddedRadialSlider -->
	<Style x:Key="{x:Type editorsPrimitives:EmbeddedRadialSlider}" TargetType="editorsPrimitives:EmbeddedRadialSlider">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="LargeChange" Value="6" />
		<Setter Property="Minimum" Value="0" />
		<Setter Property="Maximum" Value="360" />
		<Setter Property="Radius" Value="70" />
		<Setter Property="SmallChange" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editorsPrimitives:EmbeddedRadialSlider">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ValueStates">
								<VisualState x:Name="Positive"/>
								<VisualState x:Name="Negative">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="positiveSlice" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
										<DoubleAnimation Storyboard.TargetName="negativeSlice" Storyboard.TargetProperty="Opacity" Duration="0" To="0.75" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="TotalStates">
								<VisualState x:Name="TotalCollapsed"/>
								<VisualState x:Name="TotalVisible">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="totalSlice" Storyboard.TargetProperty="Opacity" Duration="0" To="0.65" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<shared:RingSlice Radius="50" StrokeThickness="10" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerDarkEndBackgroundNormalBrushKey}}" />
						<shared:RingSlice x:Name="positiveSlice" Radius="50" StrokeThickness="10" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.AccentBackgroundActiveNormalBrushKey}}"
											EndAngle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IntermediateValue, Mode=TwoWay}" />
						<shared:RingSlice x:Name="negativeSlice" Radius="50" StrokeThickness="10" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.AccentBackgroundInactiveNormalBrushKey}}" Opacity="0"
											StartAngle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IntermediateValue, Mode=TwoWay}" EndAngle="0" />

						<shared:RingSlice x:Name="totalSlice" Radius="42" StrokeThickness="2" Stroke="{TemplateBinding Foreground}" Opacity="0"
											StartAngle="{TemplateBinding TotalStartAngle}" EndAngle="{TemplateBinding TotalEndAngle}" />

						<Ellipse Fill="{TemplateBinding Background}" />

						<shared:CircularThumb x:Name="PART_Thumb" Style="{TemplateBinding ThumbStyle}" ArrowAngle="{TemplateBinding ThumbArrowAngle}"
														  Background="{TemplateBinding ThumbBackground}" PressedBackground="{TemplateBinding ThumbPressedBackground}"
														  HorizontalAlignment="Center" VerticalAlignment="Top" />

						<Grid Width="76" Height="76" HorizontalAlignment="Center" VerticalAlignment="Center">
							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="2" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<RepeatButton x:Name="PART_IncrementButton" Style="{StaticResource SemiCircleIncrementButtonStyle}" />
							<RepeatButton x:Name="PART_DecrementButton" Grid.Row="2" Style="{StaticResource SemiCircleDecrementButtonStyle}" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editorsPrimitives:EmbeddedListBox -->
	<Style x:Key="{x:Type editorsPrimitives:EmbeddedListBox}" TargetType="editorsPrimitives:EmbeddedListBox" BasedOn="{StaticResource {x:Static themes:SharedResourceKeys.ListBoxStyleKey}}">
		<Setter Property="IsTabStop" Value="False" />
	</Style>
	
	<!-- editorsPrimitives:EmbeddedListBoxItem -->
	<Style x:Key="{x:Type editorsPrimitives:EmbeddedListBoxItem}" TargetType="editorsPrimitives:EmbeddedListBoxItem" BasedOn="{StaticResource {x:Static themes:SharedResourceKeys.ListBoxItemStyleKey}}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<shared:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundHoverBrushKey}}"
							BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedFocusedBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderDisabledBrushKey}}"
							BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderHoverBrushKey}}"
							BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedFocusedBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}"
							InnerBorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalBrushKey}}"
							InnerBorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderDisabledBrushKey}}"
							InnerBorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderHoverBrushKey}}"
							InnerBorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedFocusedBrushKey}}"
							InnerBorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalThicknessKey}}"
							CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
							SnapsToDevicePixels="true">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="11" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<Rectangle x:Name="highlight"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(themes:ThemeProperties.IsGlassEnabled), Converter={StaticResource BooleanToVisibilityConverter}}" />
							<ContentPresenter Grid.RowSpan="2" Margin="{TemplateBinding Padding}"
											  shared:StringFilterCapture.Captures="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shared:StringFilterCapture.Captures)}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Grid>
					</shared:ElementChrome>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="InnerBorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="false" />
								<Condition Property="IsSelected" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedFocusedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Focused" />
							<Setter TargetName="highlight" Property="Fill" Value="#40FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsEnabled" Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
							<Setter TargetName="highlight" Property="Fill" Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:EnumEditBox -->
	<Style x:Key="{x:Type editors:EnumEditBox}" TargetType="editors:EnumEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="IsArrowKeyPartNavigationEnabled" Value="False" />
		<Setter Property="IsEditable" Value="False" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinWrapping" Value="SimpleWrap" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:EnumEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent" MinWidth="{TemplateBinding ActualWidth}">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<editors:EnumPicker MinWidth="150" BorderThickness="0" IsOnPopup="True" EnumType="{TemplateBinding EnumType}" EnumSortComparer="{TemplateBinding EnumSortComparer}"
														UseDisplayAttributes="{TemplateBinding UseDisplayAttributes}"
														Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
														IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly, Converter={StaticResource BooleanNotConverter}}"
														Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:EnumListBox -->
	<Style TargetType="editors:EnumListBox" BasedOn="{StaticResource {x:Static themes:SharedResourceKeys.ListBoxStyleKey}}">
	</Style>
	
	<!-- editors:EnumListBoxItem -->
	<Style TargetType="editors:EnumListBoxItem" BasedOn="{StaticResource {x:Static themes:SharedResourceKeys.ListBoxItemStyleKey}}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:EnumListBoxItem">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						
						<Rectangle x:Name="separator" Margin="0,2" Height="1" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalBrushKey}}" Opacity="0.5" 
								   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsGroupStart, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
						<shared:ElementChrome x:Name="chrome" Grid.Row="1" Background="{TemplateBinding Background}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundHoverBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedFocusedBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderDisabledBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderHoverBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedFocusedBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								InnerBorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalBrushKey}}"
								InnerBorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderDisabledBrushKey}}"
								InnerBorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderHoverBrushKey}}"
								InnerBorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedFocusedBrushKey}}"
								InnerBorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalThicknessKey}}"
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition MaxHeight="11" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								
								<Rectangle x:Name="highlight"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(themes:ThemeProperties.IsGlassEnabled), Converter={StaticResource BooleanToVisibilityConverter}}" />
								
								<CheckBox x:Name="checkBox" Grid.RowSpan="2" Margin="2,0,3,0"
										  IsTabStop="False" Focusable="False" IsHitTestVisible="False" IsThreeState="True" VerticalAlignment="Center"
										  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsFlagsEnum, Converter={StaticResource BooleanToVisibilityConverter}}" />
								
								<ContentPresenter Grid.RowSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</shared:ElementChrome>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="checkBox" Property="IsChecked" Value="True" />
						</Trigger>
						<Trigger Property="IsPartiallySelected" Value="True">
							<Setter TargetName="checkBox" Property="IsChecked" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="InnerBorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="false" />
								<Condition Property="IsSelected" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedFocusedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Focused" />
							<Setter TargetName="highlight" Property="Fill" Value="#40FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="false" />
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="Selector.IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedNormalBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedNormalBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedNormalBrushKey}}" />
							<Setter TargetName="chrome" Property="InnerBorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedNormalBrushKey}}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsEnabled" Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
							<Setter TargetName="highlight" Property="Fill" Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:EnumPicker -->
	<Style x:Key="{x:Type editors:EnumPicker}" TargetType="editors:EnumPicker">
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalThicknessKey}}" />
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:EnumPicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<editors:EnumListBox BorderThickness="0" IsOnPopup="{TemplateBinding IsOnPopup}" EnumType="{TemplateBinding EnumType}" EnumSortComparer="{TemplateBinding EnumSortComparer}"
											 UseDisplayAttributes="{TemplateBinding UseDisplayAttributes}"
											 EnumValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}"
											 FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" />
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:GradientStopSlider -->
	<Style x:Key="{x:Type editors:GradientStopSlider}" TargetType="editors:GradientStopSlider">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="0,0,0,11" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:GradientStopSlider">

					<Grid>
						<Border Margin="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" VerticalAlignment="Top">
							<Grid>
								<Path x:Name="PART_Checkerboard" Height="{TemplateBinding TrackHeight}" Fill="#cccccc" />
								<Rectangle Height="{TemplateBinding TrackHeight}" Fill="{TemplateBinding TrackGradientBrush}" />
								<Border BorderThickness="0,1" BorderBrush="#40ffffff" />
							</Grid>
						</Border>
						
						<editorsPrimitives:GradientStopSliderPanel x:Name="PART_Panel" 
																   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Right'}" />
					</Grid>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editorsPrimitives:GradientStopThumb -->
	<Style x:Key="{x:Type editorsPrimitives:GradientStopThumb}" TargetType="editorsPrimitives:GradientStopThumb">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderNormalBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#ffffff" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editorsPrimitives:GradientStopThumb">

					<Grid Background="Transparent">
						<Grid VerticalAlignment="Bottom">
							<Path Data="M 0.5,15.5 L 0.5,6 L 5.5,1 L 10.5,6 L 10.5,15.5 Z" Stroke="#80ffffff" StrokeThickness="1" />
							<Path Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" Fill="{TemplateBinding Foreground}" 
								  Data="M 1.5,14.5 L 1.5,6.5 L 5.5,2.5 L 9.5,6.5 L 9.5,14.5 Z  M 1.5,6.5 L 9.5,6.5" />
							<Path Fill="#ffffff" Data="M 2,14 L 2,7 L 9,7 L 9,14 Z" />
							<Path Fill="{TemplateBinding Background}" Data="M 2,14 L 2,7 L 9,7 L 9,14 Z" />
						</Grid>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderNormalBrushKey}}" />
							<Setter Property="Canvas.ZIndex" Value="1" />
						</Trigger>
						<Trigger Property="IsDraggingToRemove" Value="True">
							<Setter Property="Opacity" Value="0.2" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ToolTip">
			<Setter.Value>
				<ToolTip>
					<StackPanel Orientation="Horizontal">
						<Border Width="24" Height="24" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}" 
								Background="{Binding Color, Converter={StaticResource ColorToBrushConverter}}" VerticalAlignment="Center" />
						<TextBlock Margin="5,0,0,0" Text="{Binding Color}" VerticalAlignment="Center" />
						<TextBlock Margin="5,0,0,0" Text="-" VerticalAlignment="Center" />
						<TextBlock Margin="5,0,0,0" Text="{Binding Path=Offset, Converter={StaticResource PercentageConverter}}" VerticalAlignment="Center" />
						<TextBlock Text="%" VerticalAlignment="Center" />
					</StackPanel>
				</ToolTip>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:GuidEditBox -->
	<Style x:Key="{x:Type editors:GuidEditBox}" TargetType="editors:GuidEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="IsArrowKeyPartNavigationEnabled" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:GuidEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<Button x:Name="AddButton" ToolTip="{TemplateBinding NewGuidButtonToolTip}" Style="{StaticResource EditBoxEmbeddedAddButtonStyle}" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NewGuidCommand}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="IsReadOnly" Value="True">
							<Setter TargetName="AddButton" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:HsbColorPicker -->
	<Style x:Key="{x:Type editors:HsbColorPicker}" TargetType="editors:HsbColorPicker">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:HsbColorPicker">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						
						<Ellipse Grid.Column="1" Margin="10" Fill="#ffffff" Stretch="Uniform" />
						<Path x:Name="PART_Checkerboard" Grid.Column="1" Fill="#cccccc" HorizontalAlignment="Center" VerticalAlignment="Center" />
						<Ellipse Grid.Column="1" Margin="10" Fill="{TemplateBinding Background}" Stretch="Uniform" />
						
						<editors:RadialHuePicker x:Name="PART_RadialHuePicker" Grid.Column="1" Hue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Hue, Mode=TwoWay}" BorderThickness="1">
							<editors:SaturationBrightnessPicker Hue="{Binding ElementName=PART_RadialHuePicker, Path=Hue, Mode=OneWay}"
																Saturation="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Saturation, Mode=TwoWay}"
																Brightness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Brightness, Mode=TwoWay}"
																/>
						</editors:RadialHuePicker>						
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editorsPrimitives:HueRing -->
	<Style x:Key="{x:Type editorsPrimitives:HueRing}" TargetType="editorsPrimitives:HueRing">
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="MinHeight" Value="40" />
		<Setter Property="MinWidth" Value="40" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editorsPrimitives:HueRing">
					<Grid>
						<Ellipse Margin="2" Fill="{TemplateBinding Background}" Stretch="Uniform" />
						<Canvas x:Name="PART_Presenter" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:Int16EditBox -->
	<Style x:Key="{x:Type editors:Int16EditBox}" TargetType="editors:Int16EditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="CalculatorPopupPickerStyle">
			<Setter.Value>
				<Style TargetType="editors:Int16Picker">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="editors:Int16Picker">

								<editors:Calculator BorderThickness="0" AcceptsEscape="False" 
													Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Minimum}" 
													Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Maximum}" 
													Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" />
					
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="IsArrowKeyPartNavigationEnabled" Value="False" />
		<Setter Property="PickerKind" Value="Calculator" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:Int16EditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:Int16Picker x:Name="picker" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
															 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															 Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="PickerKind" Value="Calculator" />
								<Condition Property="PopupPickerStyle" Value="{x:Null}" />
							</MultiTrigger.Conditions>
							<Setter TargetName="picker" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CalculatorPopupPickerStyle}" />
						</MultiTrigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:Int16Picker -->
	<Style x:Key="{x:Type editors:Int16Picker}" TargetType="editors:Int16Picker">
		<Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:Int16Picker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<editorsPrimitives:EmbeddedRadialSlider Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeMinimum}"
																Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeMaximum}"
																Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeValue, Mode=TwoWay}"
																SmallChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeSmallChange}"
																LargeChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeLargeChange}"
																/>
					</Border>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:Int32EditBox -->
	<Style x:Key="{x:Type editors:Int32EditBox}" TargetType="editors:Int32EditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="CalculatorPopupPickerStyle">
			<Setter.Value>
				<Style TargetType="editors:Int32Picker">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="editors:Int32Picker">

								<editors:Calculator BorderThickness="0" AcceptsEscape="False" 
													Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Minimum}" 
													Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Maximum}" 
													Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" />
					
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="IsArrowKeyPartNavigationEnabled" Value="False" />
		<Setter Property="PickerKind" Value="Calculator" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:Int32EditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:Int32Picker x:Name="picker" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
															 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															 Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="PickerKind" Value="Calculator" />
								<Condition Property="PopupPickerStyle" Value="{x:Null}" />
							</MultiTrigger.Conditions>
							<Setter TargetName="picker" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CalculatorPopupPickerStyle}" />
						</MultiTrigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:Int32Picker -->
	<Style x:Key="{x:Type editors:Int32Picker}" TargetType="editors:Int32Picker">
		<Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:Int32Picker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<editorsPrimitives:EmbeddedRadialSlider Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeMinimum}"
																Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeMaximum}"
																Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeValue, Mode=TwoWay}"
																SmallChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeSmallChange}"
																LargeChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeLargeChange}"
																/>
					</Border>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:Int32RectEditBox -->
	<Style x:Key="{x:Type editors:Int32RectEditBox}" TargetType="editors:Int32RectEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:Int32RectEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:Int32RectPicker Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
																 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
																 Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:Int32RectPicker -->
	<Style x:Key="{x:Type editors:Int32RectPicker}" TargetType="editors:Int32RectPicker">
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:Int32RectPicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<shared:HorizontalListBox x:Name="PART_PartSelector" BorderThickness="0,0,0,1">
								<ListBoxItem x:Name="XPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="X" />
								<ListBoxItem x:Name="YPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="Y" />
								<ListBoxItem x:Name="WidthPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource WidthIconTemplate}" />
								<ListBoxItem x:Name="HeightPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource HeightIconTemplate}" />
							</shared:HorizontalListBox>
							
							<editors:Int32Picker Grid.Row="1" x:Name="PART_ValuePicker" />
						</Grid>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:Int64EditBox -->
	<Style x:Key="{x:Type editors:Int64EditBox}" TargetType="editors:Int64EditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="CalculatorPopupPickerStyle">
			<Setter.Value>
				<Style TargetType="editors:Int64Picker">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="editors:Int64Picker">

								<editors:Calculator BorderThickness="0" AcceptsEscape="False" 
													Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Minimum}" 
													Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Maximum}" 
													Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" />
					
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="IsArrowKeyPartNavigationEnabled" Value="False" />
		<Setter Property="PickerKind" Value="Calculator" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:Int64EditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:Int64Picker x:Name="picker" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
															 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															 Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="PickerKind" Value="Calculator" />
								<Condition Property="PopupPickerStyle" Value="{x:Null}" />
							</MultiTrigger.Conditions>
							<Setter TargetName="picker" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CalculatorPopupPickerStyle}" />
						</MultiTrigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:Int64Picker -->
	<Style x:Key="{x:Type editors:Int64Picker}" TargetType="editors:Int64Picker">
		<Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:Int64Picker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<editorsPrimitives:EmbeddedRadialSlider Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeMinimum}"
																Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeMaximum}"
																Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeValue, Mode=TwoWay}"
																SmallChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeSmallChange}"
																LargeChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeLargeChange}"
																/>
					</Border>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:MaskedTextBox -->
	<Style x:Key="{x:Type editors:MaskedTextBox}" TargetType="editors:MaskedTextBox" BasedOn="{StaticResource {x:Static themes:SharedResourceKeys.TextBoxBaseStyleKey}}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    
	<!-- editors:MonthCalendarItem -->
	<Style x:Key="{x:Type editors:MonthCalendarItem}" TargetType="editors:MonthCalendarItem">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListRowBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Content" Value="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="IsTabStop" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsInactive, Converter={StaticResource BooleanNotConverter}}" />
		<Setter Property="MinHeight" Value="40" />
		<Setter Property="MinWidth" Value="40" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:MonthCalendarItem">
					<Border x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
						<Grid>
							<Border x:Name="ContainsTodayBorder" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderNormalBrushKey}}" Visibility="Collapsed" />
							<ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}"
												Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
												/>
						</Grid>
					</Border>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsInactive" Value="True">
							<Setter TargetName="ContentPresenter" Property="Opacity" Value="0.5" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedFocusedBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedFocusedBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedFocusedBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsHeader" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundHoverBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderHoverBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsHeader" Value="False" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundPressedBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderPressedBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="ContainsToday" Value="True">
							<Setter TargetName="ContainsTodayBorder" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="ContentPresenter" Property="Opacity" Value="0.3" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- MonthCalendarButtonStyle -->
	<Style x:Key="MonthCalendarButtonStyle" TargetType="ButtonBase">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ButtonBase">
					<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter x:Name="ContentPresenter"
                                        Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        />
					</Border>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="ContentPresenter" Property="Opacity" Value="0.35" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundHoverBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderHoverBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundPressedBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderPressedBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- MonthCalendarTitleButtonStyle -->
	<Style x:Key="MonthCalendarTitleButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource MonthCalendarButtonStyle}">
		<Setter Property="FontSize" Value="18" />
		<Setter Property="FontWeight" Value="Light" />
		<Setter Property="MinHeight" Value="35" />
		<Setter Property="MinWidth" Value="40" />
	</Style>

	<!-- MonthCalendarNavigationButtonStyle -->
	<Style x:Key="MonthCalendarNavigationButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource MonthCalendarTitleButtonStyle}">
	</Style>

	<!-- MonthCalendarTodayButtonStyle -->
	<Style x:Key="MonthCalendarTodayButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource MonthCalendarButtonStyle}">
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="Padding" Value="10,5" />
	</Style>

	<!-- MonthCalendarClearButtonStyle -->
	<Style x:Key="MonthCalendarClearButtonStyle" TargetType="ButtonBase" BasedOn="{StaticResource MonthCalendarButtonStyle}">
		<Setter Property="HorizontalContentAlignment" Value="Right" />
		<Setter Property="Padding" Value="10,5" />
	</Style>

	<!-- editors:MonthCalendar -->
	<Style x:Key="{x:Type editors:MonthCalendar}" TargetType="editors:MonthCalendar">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerMediumBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="ClearButtonStyle" Value="{StaticResource MonthCalendarClearButtonStyle}" />
		<Setter Property="DayItemsPanelTemplate">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Rows="6" Columns="7" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="DayItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock Margin="5,3" Text="{Binding Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:%d}'}" HorizontalAlignment="Left" VerticalAlignment="Top" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="DayNameItemContainerStyle">
			<Setter.Value>
				<Style TargetType="editors:MonthCalendarItem">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderBrush" Value="Transparent" />
					<Setter Property="BorderThickness" Value="0" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
					<Setter Property="MinHeight" Value="25" />
					<Setter Property="Padding" Value="5,1" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="DayNameItemsPanelTemplate">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Columns="7" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="DayNameItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock Text="{Binding}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="DecadeItemsPanelTemplate">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Rows="5" Columns="2" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="DecadeItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock Margin="5,3" Text="{Binding Converter={StaticResource DateToDecadeStringConverter}}"
							   HorizontalAlignment="Center" VerticalAlignment="Center" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontSize" Value="11" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="MonthItemsPanelTemplate">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Rows="6" Columns="2" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="MonthItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock Margin="5,3" Text="{Binding Date, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:MMMM}'}"
							   HorizontalAlignment="Center" VerticalAlignment="Center" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="NavigationButtonStyle" Value="{StaticResource MonthCalendarNavigationButtonStyle}" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="TitleButtonStyle" Value="{StaticResource MonthCalendarTitleButtonStyle}" />
		<Setter Property="TodayButtonStyle" Value="{StaticResource MonthCalendarTodayButtonStyle}" />
		<Setter Property="WeekNumberItemContainerStyle">
			<Setter.Value>
				<Style TargetType="editors:MonthCalendarItem">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderBrush" Value="Transparent" />
					<Setter Property="BorderThickness" Value="0" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
					<Setter Property="MinWidth" Value="24" />
					<Setter Property="Padding" Value="5,1" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="WeekNumberItemsPanelTemplate">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Rows="6" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="WeekNumberItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock Text="{Binding}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="YearItemsPanelTemplate">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Rows="5" Columns="2" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="YearItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock Margin="5,3" Text="{Binding Date, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:yyyy}'}"
							   HorizontalAlignment="Center" VerticalAlignment="Center" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:MonthCalendar">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<shared:TransitionPresenter x:Name="PART_Presenter" Grid.Row="1" Grid.ColumnSpan="4" DefaultDuration="0:0:0.25" />

							<editorsPrimitives:MonthCalendarRepeatButton Grid.Column="0" ContentTemplate="{StaticResource ChevronLeftIconTemplate}" 
																		 Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=GoToPreviousViewCommand}"
																		 Style="{TemplateBinding NavigationButtonStyle}" />
							<editorsPrimitives:MonthCalendarButton Grid.Column="1" Grid.ColumnSpan="2" Content="{TemplateBinding Title}" Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomOutCommand}"
									Style="{TemplateBinding TitleButtonStyle}" />
							<editorsPrimitives:MonthCalendarRepeatButton Grid.Column="3" ContentTemplate="{StaticResource ChevronRightIconTemplate}" 
																		 Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=GoToNextViewCommand}"
																		 Style="{TemplateBinding NavigationButtonStyle}" />
							
							<editorsPrimitives:MonthCalendarButton Grid.Row="2" Grid.ColumnSpan="2" Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectTodayCommand}"
									Style="{TemplateBinding TodayButtonStyle}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsTodayButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
								<StackPanel Orientation="Horizontal">
									<Border Width="15" Height="10" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderNormalBrushKey}}" 
											CornerRadius="2" VerticalAlignment="Center" />
									<shared:PixelSnapper VerticalRoundMode="CeilingToEven">
										<TextBlock Margin="5,0,0,0" Text="{TemplateBinding TodayButtonText}" VerticalAlignment="Center" />
									</shared:PixelSnapper>
								</StackPanel>
							</editorsPrimitives:MonthCalendarButton>
							<editorsPrimitives:MonthCalendarButton Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ClearSelectionCommand}"
									Style="{TemplateBinding ClearButtonStyle}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsClearButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
								<TextBlock Text="{TemplateBinding ClearButtonText}" />
							</editorsPrimitives:MonthCalendarButton>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:PointEditBox -->
	<Style x:Key="{x:Type editors:PointEditBox}" TargetType="editors:PointEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:PointEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:PointPicker Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
															 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															 Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:PointPicker -->
	<Style x:Key="{x:Type editors:PointPicker}" TargetType="editors:PointPicker">
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:PointPicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<shared:HorizontalListBox x:Name="PART_PartSelector" BorderThickness="0,0,0,1">
								<ListBoxItem x:Name="XPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="X" />
								<ListBoxItem x:Name="YPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="Y" />
							</shared:HorizontalListBox>
							
							<editors:DoublePicker Grid.Row="1" x:Name="PART_ValuePicker" />
						</Grid>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- RadialHuePickerThumbStyle -->
	<Style x:Key="RadialHuePickerThumbStyle" TargetType="shared:CircularThumb">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Height" Value="29" />
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="Padding" Value="6" />
		<Setter Property="Width" Value="29" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="shared:CircularThumb">
					<Grid Background="Transparent">
						<Grid x:Name="Circle" Margin="{TemplateBinding Padding}">
							<Ellipse x:Name="Background" Margin="1" Fill="{TemplateBinding Background}" Opacity="0.05" />
							<Ellipse x:Name="InnerBorder" Margin="1" StrokeThickness="1" Stroke="#80000000" />
							<Ellipse x:Name="OuterBorder" StrokeThickness="1" Stroke="#ffffff" />
						</Grid>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Circle" Property="Opacity" Value="0.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:RadialHuePicker -->
	<Style x:Key="{x:Type editors:RadialHuePicker}" TargetType="editors:RadialHuePicker">
        <Setter Property="BorderBrush" Value="#40ffffff" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Radius" Value="101" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:RadialHuePicker">
					<Grid>
						<editorsPrimitives:HueRing x:Name="PART_HueRing" Margin="1" Background="{TemplateBinding Background}" Length="21" />
						<Ellipse Margin="21" Stroke="#40ffffff" StrokeThickness="1" />
						<Ellipse Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.BulletBorderDisabledBrushKey}}" StrokeThickness="1" />
						<shared:RadialSlider x:Name="PART_Slider" Radius="{TemplateBinding SliderRadius}" 
											   Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Hue, Mode=TwoWay}" 
											   ThumbStyle="{StaticResource RadialHuePickerThumbStyle}"
											   HorizontalAlignment="Center" VerticalAlignment="Center" />
						<Border Margin="51" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter />
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:Rating -->
	<Style x:Key="{x:Type editors:Rating}" TargetType="editors:Rating">
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle StrokeThickness="1" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" 
										   StrokeDashArray="1 2" SnapsToDevicePixels="true" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<editorsPrimitives:RatingPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:Rating">
					<Border Background="{TemplateBinding Background}" 
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Padding="{TemplateBinding Padding}">
						<ItemsPresenter />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:RatingItem -->
	<Style x:Key="{x:Type editors:RatingItem}" TargetType="editors:RatingItem">
		<Setter Property="Background" Value="Green" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Padding" Value="0,0,1,0" />
		<Setter Property="NormalGlyphTemplate">
			<Setter.Value>
				<DataTemplate>
					<Path Width="16" Height="16" StrokeLineJoin="Round" StrokeThickness="0.85" 
						  Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.RatingItemBorderNormalBrushKey}}"
						  Fill="{DynamicResource {x:Static themes:AssetResourceKeys.RatingItemBackgroundNormalBrushKey}}"
						  Data="M8,0.5L10.796,5.182L15.608,5.5L12,10L13.5,15.5L8,12.5L2.5,15.5L4,10.035L0.392,5.5L5.204,5.182L8,0.5Z">
					</Path>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ActiveGlyphTemplate">
			<Setter.Value>
				<DataTemplate>
					<Path Width="16" Height="16" StrokeLineJoin="Round" StrokeThickness="0.85" 
						  Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.RatingItemBorderActiveBrushKey}}"
						  Fill="{DynamicResource {x:Static themes:AssetResourceKeys.RatingItemBackgroundActiveBrushKey}}"
						  Data="M8,0.5L10.796,5.182L15.608,5.5L12,10L13.5,15.5L8,12.5L2.5,15.5L4,10.035L0.392,5.5L5.204,5.182L8,0.5Z">
					</Path>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="AverageGlyphTemplate">
			<Setter.Value>
				<DataTemplate>
					<Path Width="16" Height="16" StrokeLineJoin="Round" StrokeThickness="0.85" 
						  Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.RatingItemBorderAverageBrushKey}}"
						  Fill="{DynamicResource {x:Static themes:AssetResourceKeys.RatingItemBackgroundAverageBrushKey}}"
						  Data="M8,0.5L10.796,5.182L15.608,5.5L12,10L13.5,15.5L8,12.5L2.5,15.5L4,10.035L0.392,5.5L5.204,5.182L8,0.5Z">
					</Path>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="SelectedGlyphTemplate">
			<Setter.Value>
				<DataTemplate>
					<Path Width="16" Height="16" StrokeLineJoin="Round" StrokeThickness="0.85" 
						  Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.RatingItemBorderSelectedBrushKey}}"
						  Fill="{DynamicResource {x:Static themes:AssetResourceKeys.RatingItemBackgroundSelectedBrushKey}}"
						  Data="M8,0.5L10.796,5.182L15.608,5.5L12,10L13.5,15.5L8,12.5L2.5,15.5L4,10.035L0.392,5.5L5.204,5.182L8,0.5Z">
					</Path>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:RatingItem">
					<Border Background="Transparent" Padding="{TemplateBinding Padding}">
						<StackPanel>
							<Grid>
								<ContentPresenter x:Name="PART_BackgroundGlyphContentPresenter" ContentTemplate="{TemplateBinding NormalGlyphTemplate}" Content="{x:Null}" />
								<ContentPresenter x:Name="PART_ForegroundGlyphContentPresenter" ContentTemplate="{TemplateBinding SelectedGlyphTemplate}" Content="{x:Null}" Opacity="0" />
							</Grid>
							<ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" 
											  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" HorizontalAlignment="Center" />
						</StackPanel>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="State" Value="Average">
							<Setter TargetName="PART_ForegroundGlyphContentPresenter" Property="Opacity" Value="1" />
							<Setter TargetName="PART_ForegroundGlyphContentPresenter" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AverageGlyphTemplate}" />
						</Trigger>
						<Trigger Property="State" Value="Selected">
							<Setter TargetName="PART_ForegroundGlyphContentPresenter" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="State" Value="Active">
							<Setter TargetName="PART_ForegroundGlyphContentPresenter" Property="Opacity" Value="1" />
							<Setter TargetName="PART_ForegroundGlyphContentPresenter" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActiveGlyphTemplate}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:RectEditBox -->
	<Style x:Key="{x:Type editors:RectEditBox}" TargetType="editors:RectEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:RectEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:RectPicker Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
															Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:RectPicker -->
	<Style x:Key="{x:Type editors:RectPicker}" TargetType="editors:RectPicker">
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:RectPicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<shared:HorizontalListBox x:Name="PART_PartSelector" BorderThickness="0,0,0,1">
								<ListBoxItem x:Name="XPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="X" />
								<ListBoxItem x:Name="YPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="Y" />
								<ListBoxItem x:Name="WidthPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource WidthIconTemplate}" />
								<ListBoxItem x:Name="HeightPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource HeightIconTemplate}" />
							</shared:HorizontalListBox>
							
							<editors:DoublePicker Grid.Row="1" x:Name="PART_ValuePicker" />
						</Grid>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:SaturationBrightnessPicker -->
	<Style x:Key="{x:Type editors:SaturationBrightnessPicker}" TargetType="editors:SaturationBrightnessPicker">
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:SaturationBrightnessPicker">
					<Grid>
						<editorsPrimitives:SaturationBrightnessSquare Hue="{TemplateBinding Hue}" />
						<shared:CircularThumb x:Name="PART_Thumb" Style="{StaticResource RadialHuePickerThumbStyle}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editorsPrimitives:SaturationBrightnessSquare -->
	<Style x:Key="{x:Type editorsPrimitives:SaturationBrightnessSquare}" TargetType="editorsPrimitives:SaturationBrightnessSquare">
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="MinHeight" Value="20" />
		<Setter Property="MinWidth" Value="20" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editorsPrimitives:SaturationBrightnessSquare">
					<Grid>
						<Rectangle Fill="{TemplateBinding SaturationBrush}" />
						<Rectangle Fill="{TemplateBinding BrightnessBrush}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:SingleEditBox -->
	<Style x:Key="{x:Type editors:SingleEditBox}" TargetType="editors:SingleEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="CalculatorPopupPickerStyle">
			<Setter.Value>
				<Style TargetType="editors:SinglePicker">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="editors:SinglePicker">

								<editors:Calculator BorderThickness="0" AcceptsEscape="False" 
													Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Minimum}" 
													Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Maximum}" 
													Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" />
					
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="IsArrowKeyPartNavigationEnabled" Value="False" />
		<Setter Property="PickerKind" Value="Calculator" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:SingleEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:SinglePicker x:Name="picker" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
															  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															  Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="PickerKind" Value="Calculator" />
								<Condition Property="PopupPickerStyle" Value="{x:Null}" />
							</MultiTrigger.Conditions>
							<Setter TargetName="picker" Property="Style" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CalculatorPopupPickerStyle}" />
						</MultiTrigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:SinglePicker -->
	<Style x:Key="{x:Type editors:SinglePicker}" TargetType="editors:SinglePicker">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:SinglePicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<editorsPrimitives:EmbeddedRadialSlider Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeMinimum}" 
																Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeMaximum}"
																Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeValue, Mode=TwoWay}"
																SmallChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeSmallChange}"
																LargeChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DegreeLargeChange}"
																/>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:SizeEditBox -->
	<Style x:Key="{x:Type editors:SizeEditBox}" TargetType="editors:SizeEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:SizeEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:SizePicker Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
															Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:SizePicker -->
	<Style x:Key="{x:Type editors:SizePicker}" TargetType="editors:SizePicker">
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:SizePicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<shared:HorizontalListBox x:Name="PART_PartSelector" BorderThickness="0,0,0,1">
								<ListBoxItem x:Name="WidthPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource WidthIconTemplate}" />
								<ListBoxItem x:Name="HeightPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource HeightIconTemplate}" />
							</shared:HorizontalListBox>
							
							<editors:DoublePicker Grid.Row="1" x:Name="PART_ValuePicker" />
						</Grid>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:ThicknessEditBox -->
	<Style x:Key="{x:Type editors:ThicknessEditBox}" TargetType="editors:ThicknessEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:ThicknessEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:ThicknessPicker Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
																 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
																 Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:ThicknessPicker -->
	<Style x:Key="{x:Type editors:ThicknessPicker}" TargetType="editors:ThicknessPicker">
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:ThicknessPicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<shared:HorizontalListBox x:Name="PART_PartSelector" BorderThickness="0,0,0,1">
								<ListBoxItem x:Name="LeftPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource LeftIconTemplate}" />
								<ListBoxItem x:Name="TopPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource TopIconTemplate}" />
								<ListBoxItem x:Name="RightPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource RightIconTemplate}" />
								<ListBoxItem x:Name="BottomPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" ContentTemplate="{StaticResource BottomIconTemplate}" />
							</shared:HorizontalListBox>
							
							<editors:DoublePicker Grid.Row="1" x:Name="PART_ValuePicker" />
						</Grid>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:TimeEditBox -->
	<Style x:Key="{x:Type editors:TimeEditBox}" TargetType="editors:TimeEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="Format" Value="t" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinWrapping" Value="Wrap" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:TimeEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:TimePicker Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}"
															Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly, Converter={StaticResource BooleanNotConverter}}"
															Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:TimePicker -->
	<Style x:Key="{x:Type editors:TimePicker}" TargetType="editors:TimePicker">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:TimePicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.Resources>
								<Style TargetType="TextBlock">
									<Setter Property="FontSize" Value="14" />
									<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
									<Setter Property="HorizontalAlignment" Value="Center" />
									<Setter Property="VerticalAlignment" Value="Center" />
								</Style>
							</Grid.Resources>
							
							<TextBlock Text="1"><TextBlock.RenderTransform><TranslateTransform X="42.5" Y="-73.6" /></TextBlock.RenderTransform></TextBlock>
							<TextBlock Text="2"><TextBlock.RenderTransform><TranslateTransform X="73.6" Y="-42.5" /></TextBlock.RenderTransform></TextBlock>
							<TextBlock Text="3"><TextBlock.RenderTransform><TranslateTransform X="85" /></TextBlock.RenderTransform></TextBlock>
							<TextBlock Text="4"><TextBlock.RenderTransform><TranslateTransform X="73.6" Y="42.5" /></TextBlock.RenderTransform></TextBlock>
							<TextBlock Text="5"><TextBlock.RenderTransform><TranslateTransform X="42.5" Y="73.6" /></TextBlock.RenderTransform></TextBlock>
							<TextBlock Text="6"><TextBlock.RenderTransform><TranslateTransform Y="85" /></TextBlock.RenderTransform></TextBlock>
							<TextBlock Text="7"><TextBlock.RenderTransform><TranslateTransform X="-42.5" Y="73.6" /></TextBlock.RenderTransform></TextBlock>
							<TextBlock Text="8"><TextBlock.RenderTransform><TranslateTransform X="-73.6" Y="42.5" /></TextBlock.RenderTransform></TextBlock>
							<TextBlock Text="9"><TextBlock.RenderTransform><TranslateTransform X="-85" /></TextBlock.RenderTransform></TextBlock>
							<TextBlock Text="10"><TextBlock.RenderTransform><TranslateTransform X="-73.6" Y="-42.5" /></TextBlock.RenderTransform></TextBlock>
							<TextBlock Text="11"><TextBlock.RenderTransform><TranslateTransform X="-42.5" Y="-73.6" /></TextBlock.RenderTransform></TextBlock>
							<TextBlock Text="12"><TextBlock.RenderTransform><TranslateTransform Y="-85" /></TextBlock.RenderTransform></TextBlock>
							
							<Ellipse Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerDarkEndBackgroundNormalBrushKey}}" StrokeThickness="2" />
							<Rectangle Margin="0,0,0,26" Width="2" Height="26" RenderTransformOrigin="0.5,1" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerDarkEndBackgroundNormalBrushKey}}">
								<Rectangle.RenderTransform>
									<TransformGroup>
										<RotateTransform x:Name="hourRotateTransform" CenterY="4" Angle="{Binding ElementName=hourSlider, Path=IntermediateValue}" />
										<TranslateTransform Y="-4" />
									</TransformGroup>
								</Rectangle.RenderTransform>
							</Rectangle>
							<Rectangle Margin="0,0,0,46" Width="2" Height="46" RenderTransformOrigin="0.5,1" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerDarkEndBackgroundNormalBrushKey}}">
								<Rectangle.RenderTransform>
									<TransformGroup>
										<RotateTransform x:Name="minuteRotateTransform" CenterY="4" Angle="{Binding ElementName=minuteSlider, Path=IntermediateValue}" />
										<TranslateTransform Y="-4" />
									</TransformGroup>
								</Rectangle.RenderTransform>
							</Rectangle>
							
							<shared:RingSlice Radius="110" StrokeThickness="10" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerDarkEndBackgroundNormalBrushKey}}" />
							<shared:RingSlice Radius="70" StrokeThickness="10" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerDarkEndBackgroundNormalBrushKey}}" />
							<shared:RingSlice Radius="70" StrokeThickness="10" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.AccentBackgroundActiveNormalBrushKey}}" Opacity="0.15"
												Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPM, Converter={StaticResource BooleanToVisibilityConverter}}" />
							
							<shared:RingSlice Radius="110" StrokeThickness="10" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.AccentBackgroundActiveNormalBrushKey}}"
												EndAngle="{Binding ElementName=minuteSlider, Path=IntermediateValue}" />
							<shared:RingSlice Radius="70" StrokeThickness="10" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.AccentBackgroundActiveNormalBrushKey}}"
												EndAngle="{Binding ElementName=hourSlider, Path=IntermediateValue}" />
							
							<shared:RadialSlider x:Name="minuteSlider" Radius="130" SmallChange="6" LargeChange="30"
												   Minimum="{TemplateBinding MinuteDegreeMinimum}" Maximum="{TemplateBinding MinuteDegreeMaximum}"
												   Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinuteDegreeValue, Mode=TwoWay}" />
							<shared:RadialSlider x:Name="hourSlider" Radius="40" SmallChange="30" LargeChange="30" ThumbArrowAngle="0"
												   Minimum="{TemplateBinding HourDegreeMinimum}" Maximum="{TemplateBinding HourDegreeMaximum}"
												   Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HourDegreeValue, Mode=TwoWay}" />
						</Grid>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:TimeSpanEditBox -->
	<Style x:Key="{x:Type editors:TimeSpanEditBox}" TargetType="editors:TimeSpanEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="SpinWrapping" Value="Wrap" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:TimeSpanEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:TimeSpanPicker Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
																Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
																IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly, Converter={StaticResource BooleanNotConverter}}"
																EditableParts="{TemplateBinding PickerEditableParts}"
																Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:TimeSpanPicker -->
	<Style x:Key="{x:Type editors:TimeSpanPicker}" TargetType="editors:TimeSpanPicker">
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:TimeSpanPicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<shared:HorizontalListBox x:Name="PART_PartSelector" BorderThickness="0,0,0,1">
								<ListBoxItem x:Name="DaysPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Days, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:D}'}" FontSize="18" />
								<ListBoxItem x:Name="HoursPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Hours, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:D}'}" FontSize="18" />
								<ListBoxItem x:Name="MinutesPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Minutes, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}:{0:D2}'}" FontSize="18" />
								<ListBoxItem x:Name="SecondsPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Seconds, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}:{0:D2}'}" FontSize="18" />
								<ListBoxItem x:Name="MillisecondsPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Milliseconds, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}.{0:D3}'}" FontSize="18" />
							</shared:HorizontalListBox>
							
							<editors:Int32Picker Grid.Row="1" x:Name="PART_ValuePicker" />
						</Grid>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- editors:VectorEditBox -->
	<Style x:Key="{x:Type editors:VectorEditBox}" TargetType="editors:VectorEditBox" BasedOn="{StaticResource PartEditBoxBaseStyle}">
		<Setter Property="HasPopup" Value="False" />
		<Setter Property="InputScopeNameValue" Value="Number" />
		<Setter Property="PopupBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}" />
		<Setter Property="PopupBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}" />
		<Setter Property="SpinnerVisibility" Value="Visible" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:VectorEditBox">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<shared:ElementChrome x:Name="chrome" Grid.ColumnSpan="2" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true" />

						<shared:EmbeddedTextBox x:Name="PART_TextBox" 
														   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" 
														   Padding="{TemplateBinding Padding}"
														   shared:HintProperties.Hint="{TemplateBinding PlaceholderText}" TextAlignment="{TemplateBinding TextAlignment}"
														   IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}"
														   InputScope="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InputScopeNameValue, Converter={StaticResource InputScopeConverter}}" />
						
						<editorsPrimitives:PartEditBoxInlinePanel x:Name="PART_InlinePanel" Grid.Column="1" 
									Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}">
							<editorsPrimitives:Spinner x:Name="spinner" IncrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallIncrementValueCommand}" 
													   DecrementCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SmallDecrementValueCommand}" 
													   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
							<editorsPrimitives:DropDownButton x:Name="PopupButton" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}" 
															  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</editorsPrimitives:PartEditBoxInlinePanel>
						
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="True"
							   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
							   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
							<shared:DropShadowChrome x:Name="dropShadow" Color="Transparent">
								<Border Background="{TemplateBinding PopupBackground}" 
										BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
									<Viewbox Stretch="Uniform" StretchDirection="DownOnly">
										<editors:VectorPicker Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" SmallChange="{TemplateBinding SmallChange}"
															  Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, Converter={StaticResource DefaultValueConverter}}"
															  Style="{TemplateBinding PopupPickerStyle}" RenderOptions.ClearTypeHint="Enabled" />
									</Viewbox>
								</Border>
							</shared:DropShadowChrome>
						</Popup>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="UsageContext" Value="ToolBar">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="UsageContext" Value="Menu">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalBrushKey}}" />
							<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalThicknessKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditForegroundNormalBrushKey}}" />
							<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderNormalCornerRadiusKey}}" />
							<Setter TargetName="chrome" Property="BackgroundDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarEditBorderDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuEditBackgroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
							<Setter TargetName="spinner" Property="Style" Value="{StaticResource ToolBarEmbeddedSpinnerStyle}" />
							<Setter TargetName="PopupButton" Property="Style" Value="{StaticResource ToolBarEmbeddedDropDownButtonStyle}" />
							<Setter TargetName="PopupButton" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarDropDownGlyphBackgroundNormalBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNonDefaultUsageContext" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="PopupButton" Property="Margin" Value="0" />
						</Trigger>
						<Trigger Property="IsPopupButtonVisible" Value="True">
							<Setter Property="FocusVisualStyle" Value="{StaticResource PartEditBoxWithPopupFocusVisualStyle}" />
						</Trigger>
						<Trigger Property="IsEditable" Value="False">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PopupButton" Property="IsPointerOverParent" Value="True" />
						</MultiTrigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
							<Setter TargetName="dropShadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="dropShadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- editors:VectorPicker -->
	<Style x:Key="{x:Type editors:VectorPicker}" TargetType="editors:VectorPicker">
        <Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editors:VectorPicker">

					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<shared:HorizontalListBox x:Name="PART_PartSelector" BorderThickness="0,0,0,1">
								<ListBoxItem x:Name="XPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="X" />
								<ListBoxItem x:Name="YPartItem" Padding="{StaticResource HorizontalListBoxItemPadding}" Content="Y" />
							</shared:HorizontalListBox>
							
							<editors:DoublePicker Grid.Row="1" x:Name="PART_ValuePicker" />
						</Grid>
					</Border>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
</ResourceDictionary>