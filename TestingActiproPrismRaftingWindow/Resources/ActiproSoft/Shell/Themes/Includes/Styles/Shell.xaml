<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:grids="http://schemas.actiprosoftware.com/winfx/xaml/grids"
					xmlns:gridsPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Grids.Primitives;assembly=ActiproSoftware.Grids.Wpf"
					xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
					xmlns:shell="clr-namespace:ActiproSoftware.Windows.Controls.Shell;assembly=ActiproSoftware.Shell.Wpf"
					xmlns:shellPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Shell.Primitives;assembly=ActiproSoftware.Shell.Wpf"
					xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
					>

	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
	<shared:ThicknessConverter x:Key="ThicknessConverter" />
	
	
	<!-- MultiLineShellEditableContentControlStyle -->
	<Style x:Key="MultiLineShellEditableContentControlStyle" TargetType="shellPrimitives:ShellEditableContentControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="shellPrimitives:ShellEditableContentControl">
					<Grid Background="{TemplateBinding Background}">
						<ContentPresenter x:Name="presenter" Margin="2,0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" 
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}">
							<ContentPresenter.Resources>
								<Style TargetType="TextBlock">
									<Setter Property="MaxHeight" Value="60" />
									<Setter Property="TextAlignment" Value="Center" />
									<Setter Property="TextTrimming" Value="CharacterEllipsis" />
									<Setter Property="TextWrapping" Value="Wrap" />
								</Style>
							</ContentPresenter.Resources>
						</ContentPresenter>
						<TextBox x:Name="textBox" MinWidth="30" MinHeight="0" Padding="0" BorderThickness="0" FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}" 
								 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EditableContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
								 TextWrapping="Wrap" HorizontalAlignment="Stretch" TextAlignment="Center" Visibility="Collapsed" />
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsEditing" Value="True">
							<Setter TargetName="presenter" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="textBox" Property="Visibility" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ShellControlDefaultItemTemplate -->
	<DataTemplate x:Key="ShellControlDefaultItemTemplate">
		<shared:PixelSnapper VerticalRoundMode="RoundToEven">
			<Grid Margin="2,1" Background="Transparent" ToolTip="{Binding ToolTip, Mode=OneWay, IsAsync=True}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Image Width="16" Height="16" VerticalAlignment="Center" Source="{Binding SmallIcon, Mode=OneWay}" />
				<Image Width="16" Height="16" VerticalAlignment="Center" Source="{Binding SmallIconOverlay, Mode=OneWay}" />
				<shellPrimitives:ShellEditableContentControl Grid.Column="1" Margin="2,0,0,0" Content="{Binding Name, Mode=TwoWay}" IsEditing="{Binding IsEditing, Mode=TwoWay}" />
			</Grid>
		</shared:PixelSnapper>
	</DataTemplate>
	
	<!-- ShellControlExtraLargeIconsItemTemplate -->
	<DataTemplate x:Key="ShellControlExtraLargeIconsItemTemplate">
		<shared:PixelSnapper VerticalRoundMode="RoundToEven">
			<Grid Width="266" Margin="2,1" Background="Transparent" ToolTip="{Binding ToolTip, Mode=OneWay, IsAsync=True}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<Image x:Name="image" Width="256" Height="256" HorizontalAlignment="Center" Source="{Binding ExtraLargeIcon, Mode=OneWay}" StretchDirection="DownOnly" />
				<Image x:Name="overlayImage" Margin="0,128,128,0" Width="128" Height="128" HorizontalAlignment="Center" Source="{Binding ExtraLargeIconOverlay, Mode=OneWay}" />
				<shellPrimitives:ShellEditableContentControl Grid.Row="1" Content="{Binding Name, Mode=TwoWay}" IsEditing="{Binding IsEditing, Mode=TwoWay}" 
															 Style="{StaticResource MultiLineShellEditableContentControlStyle}" />
			</Grid>
		</shared:PixelSnapper>
		
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding HasExtraLargeThumbnail}" Value="True">
				<Setter TargetName="image" Property="Source" Value="{Binding ExtraLargeThumbnail, Mode=OneWay}" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>
	
	<!-- ShellControlLargeIconsItemTemplate -->
	<DataTemplate x:Key="ShellControlLargeIconsItemTemplate">
		<shared:PixelSnapper VerticalRoundMode="RoundToEven">
			<Grid Width="100" Margin="2,1" Background="Transparent" ToolTip="{Binding ToolTip, Mode=OneWay, IsAsync=True}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<Image x:Name="image" Width="96" Height="96" HorizontalAlignment="Center" Source="{Binding LargeIcon, Mode=OneWay}" StretchDirection="DownOnly" />
				<Image x:Name="overlayImage" Margin="0,48,48,0" Width="48" Height="48" HorizontalAlignment="Center" Source="{Binding LargeIconOverlay, Mode=OneWay}" />
				<shellPrimitives:ShellEditableContentControl Grid.Row="1" Content="{Binding Name, Mode=TwoWay}" IsEditing="{Binding IsEditing, Mode=TwoWay}" 
															 Style="{StaticResource MultiLineShellEditableContentControlStyle}" />
			</Grid>
		</shared:PixelSnapper>
		
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding HasLargeThumbnail}" Value="True">
				<Setter TargetName="image" Property="Source" Value="{Binding LargeThumbnail, Mode=OneWay}" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>
	
	<!-- ShellControlListItemTemplate -->
	<DataTemplate x:Key="ShellControlListItemTemplate">
		<shared:PixelSnapper VerticalRoundMode="RoundToEven">
			<Grid Margin="2,1,60,1" Background="Transparent" ToolTip="{Binding ToolTip, Mode=OneWay, IsAsync=True}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Image x:Name="image" Width="16" Height="16" VerticalAlignment="Center" Source="{Binding SmallIcon, Mode=OneWay}" />
				<Image x:Name="overlayImage" Width="16" Height="16" VerticalAlignment="Center" Source="{Binding SmallIconOverlay, Mode=OneWay}" />
				<shellPrimitives:ShellEditableContentControl Grid.Column="1" Margin="2,0,0,0" Content="{Binding Name, Mode=TwoWay}" IsEditing="{Binding IsEditing, Mode=TwoWay}" />
			</Grid>
		</shared:PixelSnapper>
	</DataTemplate>
	
	<!-- ShellControlMediumIconsItemTemplate -->
	<DataTemplate x:Key="ShellControlMediumIconsItemTemplate">
		<shared:PixelSnapper VerticalRoundMode="RoundToEven">
			<Grid Width="70" Margin="2,1" Background="Transparent" ToolTip="{Binding ToolTip, Mode=OneWay, IsAsync=True}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<Image x:Name="image" Width="48" Height="48" HorizontalAlignment="Center" Source="{Binding MediumIcon, Mode=OneWay}" StretchDirection="DownOnly" />
				<Image x:Name="overlayImage" Margin="0,16,16,0" Width="32" Height="32" HorizontalAlignment="Center" Source="{Binding MediumIconOverlay, Mode=OneWay}" />
				<shellPrimitives:ShellEditableContentControl Grid.Row="1" Content="{Binding Name, Mode=TwoWay}" IsEditing="{Binding IsEditing, Mode=TwoWay}" 
															 Style="{StaticResource MultiLineShellEditableContentControlStyle}" />
			</Grid>
		</shared:PixelSnapper>
		
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding HasMediumThumbnail}" Value="True">
				<Setter TargetName="image" Property="Source" Value="{Binding MediumThumbnail, Mode=OneWay}" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>
	
	<!-- ShellControlSmallIconsItemTemplate -->
	<DataTemplate x:Key="ShellControlSmallIconsItemTemplate">
		<shared:PixelSnapper VerticalRoundMode="RoundToEven">
			<Grid Width="300" Margin="2,1" Background="Transparent" ToolTip="{Binding ToolTip, Mode=OneWay, IsAsync=True}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Image x:Name="image" Width="16" Height="16" VerticalAlignment="Center" Source="{Binding SmallIcon, Mode=OneWay}" />
				<Image x:Name="overlayImage" Width="16" Height="16" VerticalAlignment="Center" Source="{Binding SmallIconOverlay, Mode=OneWay}" />
				<shellPrimitives:ShellEditableContentControl Grid.Column="1" Margin="2,0,0,0" Content="{Binding Name, Mode=TwoWay}" IsEditing="{Binding IsEditing, Mode=TwoWay}" />
			</Grid>
		</shared:PixelSnapper>
	</DataTemplate>
	
	<!-- shell:ShellTreeListBox -->
	<Style x:Key="{x:Type shell:ShellTreeListBox}" TargetType="shell:ShellTreeListBox">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Contained" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
		<Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
		
		<Setter Property="IndentIncrement" Value="8" />
		
		<Setter Property="ItemAdapter">
			<Setter.Value>
				<shell:ShellObjectItemAdapter />
			</Setter.Value>
		</Setter>

		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="ItemTemplate" Value="{StaticResource ShellControlDefaultItemTemplate}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="shell:ShellTreeListBox">
					<shared:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundDisabledBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderDisabledBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}" 
							BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.ListElementChromeBorderStyleKey}}" SnapsToDevicePixels="true">
						<Grid>
							<ScrollViewer x:Name="PART_ScrollViewer" Padding="{TemplateBinding Padding}" Focusable="False"
										  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										  >
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
							<ContentPresenter x:Name="emptyContentPresenter" ContentTemplate="{TemplateBinding EmptyContentTemplate}" Content="{TemplateBinding EmptyContent}" Visibility="Collapsed" />
						</Grid>
					</shared:ElementChrome>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEmpty" Value="True">
							<Setter TargetName="emptyContentPresenter" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- TreeListViewScrollViewerStyle -->
	<Style x:Key="TreeListViewScrollViewerStyle" TargetType="ScrollViewer">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(grids:TreeListView.FrozenColumnsWidth)}" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<Rectangle Grid.Row="2" Grid.ColumnSpan="3" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.ScrollViewerSpacerBackgroundNormalBrushKey}}" />
						
						<Border Grid.ColumnSpan="2" Background="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderBackgroundNormalBrushKey}}" ClipToBounds="True"
								Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(grids:TreeListView.ColumnHeaderVisibility)}">
							<gridsPrimitives:TreeListViewHeaderRowPanel>
								<grids:TreeListViewColumnHeader x:Name="PART_PaddingColumnHeader" Role="Padding" />
							</gridsPrimitives:TreeListViewHeaderRowPanel>
						</Border>
						
						<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2"
                                                KeyboardNavigation.DirectionalNavigation="Local"
                                                Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						
						<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="2" Grid.Column="1" Orientation="Horizontal"
                                   Minimum="0.0" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" />
						
						<ScrollBar Name="PART_VerticalScrollBar" Grid.RowSpan="2" Grid.Column="2" Orientation="Vertical"
                                   Minimum="0.0" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- shell:ShellListView -->
	<Style x:Key="{x:Type shell:ShellListView}" TargetType="shell:ShellListView">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Contained" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
		<Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />

		<Setter Property="ColumnHeaderTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" />
				</DataTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="SelectionMode" Value="Extended" />
		<Setter Property="TopLevelIndent" Value="0" />
		
		<Setter Property="ItemAdapter">
			<Setter.Value>
				<shell:ShellObjectItemAdapter />
			</Setter.Value>
		</Setter>

		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="ItemTemplateSelector">
			<Setter.Value>
				<shell:ShellListViewItemTemplateSelector />
			</Setter.Value>
		</Setter>

		<Setter Property="DetailsLayoutModeItemTemplate" Value="{StaticResource ShellControlDefaultItemTemplate}" />
		<Setter Property="ExtraLargeIconsLayoutModeItemTemplate" Value="{StaticResource ShellControlExtraLargeIconsItemTemplate}" />
		<Setter Property="LargeIconsLayoutModeItemTemplate" Value="{StaticResource ShellControlLargeIconsItemTemplate}" />
		<Setter Property="ListLayoutModeItemTemplate" Value="{StaticResource ShellControlListItemTemplate}" />
		<Setter Property="MediumIconsLayoutModeItemTemplate" Value="{StaticResource ShellControlMediumIconsItemTemplate}" />
		<Setter Property="SmallIconsLayoutModeItemTemplate" Value="{StaticResource ShellControlSmallIconsItemTemplate}" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="shell:ShellListView">
					<shared:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundDisabledBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderDisabledBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}" 
							BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.ListElementChromeBorderStyleKey}}" SnapsToDevicePixels="true">
						<Grid>
							<ScrollViewer x:Name="PART_ScrollViewer" Padding="{TemplateBinding Padding}" Focusable="False" Style="{StaticResource TreeListViewScrollViewerStyle}"
										  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										  grids:TreeListView.ColumnHeaderVisibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AreColumnHeadersVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
										  >
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
							<ContentPresenter x:Name="emptyContentPresenter" ContentTemplate="{TemplateBinding EmptyContentTemplate}" Content="{TemplateBinding EmptyContent}" Visibility="Collapsed"
											  Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ColumnHeaderHeight, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top'}" />
						</Grid>
					</shared:ElementChrome>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEmpty" Value="True">
							<Setter TargetName="emptyContentPresenter" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>