<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:docking="clr-namespace:ActiproSoftware.Windows.Controls.Docking;assembly=ActiproSoftware.Docking.Wpf"
					xmlns:dockingPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Docking.Primitives;assembly=ActiproSoftware.Docking.Wpf"
					xmlns:productsDocking="clr-namespace:ActiproSoftware.Products.Docking;assembly=ActiproSoftware.Docking.Wpf" 
					xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
					xmlns:system="clr-namespace:System;assembly=mscorlib"
					xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
					>

	<shared:ConditionalConverter x:Key="BooleanToOpacityConverter">
		<shared:ConditionalConverter.TrueValue>
			<system:Double>1</system:Double>
		</shared:ConditionalConverter.TrueValue>
		<shared:ConditionalConverter.FalseValue>
			<system:Double>0</system:Double>
		</shared:ConditionalConverter.FalseValue>
	</shared:ConditionalConverter>
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
	<shared:CoalesceConverter x:Key="CoalesceConverter" />
	<shared:CornerRadiusConverter x:Key="CornerRadiusConverter" />
	<shared:ConditionalConverter x:Key="RotationConditionalConverter">
		<shared:ConditionalConverter.FalseValue>
			<RotateTransform Angle="90" />
		</shared:ConditionalConverter.FalseValue>
	</shared:ConditionalConverter>
	<dockingPrimitives:NonUIElementConverter x:Key="NonUIElementConverter" />
	<dockingPrimitives:SideToDockConverter x:Key="SideToDockConverter" />
	<shared:ThicknessConverter x:Key="ThicknessConverter" />
	<dockingPrimitives:TitleConverter x:Key="TitleConverter" />
	
	<SolidColorBrush x:Key="SplitterHighlightBrush" Color="#80808080" />

	<DrawingBrush x:Key="DockingWindowContainerTitleBarGripperInactiveBrush" Viewport="0,0,4,5" ViewportUnits="Absolute" TileMode="Tile" Viewbox="0,0,4,5" ViewboxUnits="Absolute">
		<DrawingBrush.Drawing>
			<GeometryDrawing Brush="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerTitleBarForegroundInactiveBrushKey}}">
				<GeometryDrawing.Geometry>
					<GeometryGroup>
						<RectangleGeometry Rect="0,0,1,1" />
						<RectangleGeometry Rect="2,2,1,1" />
						<RectangleGeometry Rect="0,4,1,1" />
					</GeometryGroup>
				</GeometryDrawing.Geometry>
			</GeometryDrawing>
		</DrawingBrush.Drawing>
	</DrawingBrush>
	
	<DrawingBrush x:Key="DockingWindowContainerTitleBarGripperActiveBrush" Viewport="0,0,4,5" ViewportUnits="Absolute" TileMode="Tile" Viewbox="0,0,4,5" ViewboxUnits="Absolute">
		<DrawingBrush.Drawing>
			<GeometryDrawing Brush="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerTitleBarForegroundActiveBrushKey}}">
				<GeometryDrawing.Geometry>
					<GeometryGroup>
						<RectangleGeometry Rect="0,0,1,1" />
						<RectangleGeometry Rect="2,2,1,1" />
						<RectangleGeometry Rect="0,4,1,1" />
					</GeometryGroup>
				</GeometryDrawing.Geometry>
			</GeometryDrawing>
		</DrawingBrush.Drawing>
	</DrawingBrush>
	
	
	<!-- NewTabButtonStyle -->
	<Style x:Key="NewTabButtonStyle" TargetType="dockingPrimitives:NewTabButton">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabControlNewTabButtonForegroundNormalBrushKey}}" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="MinWidth" Value="18" />
		<Setter Property="MinHeight" Value="18" />
		<Setter Property="Padding" Value="4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="dockingPrimitives:NewTabButton">
					<dockingPrimitives:TabItemBorder TabStripPlacement="{TemplateBinding TabStripPlacement}" 
													 BorderThickness="{TemplateBinding BorderThickness}" UntintedBorderBrush="{TemplateBinding BorderBrush}"
													 UntintedBackground="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
						<Canvas Margin="{TemplateBinding Padding}" Width="10" Height="10">
							<Rectangle Canvas.Left="4" Width="2" Height="10" Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />
							<Rectangle Canvas.Top="4" Width="10" Height="2" Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />
						</Canvas>
					</dockingPrimitives:TabItemBorder>
								
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundHoverBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundNormalBrushKey}}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundPressedBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundNormalBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- EmbeddedButtonStyleKey -->
	<Style x:Key="EmbeddedButtonStyleKey" TargetType="ButtonBase" BasedOn="{StaticResource {x:Static themes:SharedResourceKeys.EmbeddedButtonBaseOverrideStyleKey}}">
		<Setter Property="Padding" Value="2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Border x:Name="outerBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}" SnapsToDevicePixels="true">
						<Grid>
							<Border x:Name="innerBorder" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderNormalBrushKey}}"
									BorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderNormalThicknessKey}}"
									CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}" SnapsToDevicePixels="true" />
							<shared:PixelSnapper VerticalRoundMode="CeilingToEven">
								<ContentPresenter x:Name="presenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Opacity="0.75" />
							</shared:PixelSnapper>
						</Grid>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="ToggleButton.IsChecked" Value="true">
							<Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundCheckedNormalBrushKey}}" />
							<Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderCheckedNormalBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderCheckedNormalBrushKey}}" />
							<Setter TargetName="presenter" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundHoverBrushKey}}" />
							<Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderHoverBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderHoverBrushKey}}" />
							<Setter TargetName="presenter" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
							<Setter TargetName="presenter" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundHoverBrushKey}}" />
							<Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderHoverBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderHoverBrushKey}}" />
							<Setter TargetName="presenter" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
							<Setter TargetName="presenter" Property="Opacity" Value="1" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="ToggleButton.IsChecked" Value="true" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundCheckedHoverBrushKey}}" />
							<Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderCheckedHoverBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderCheckedHoverBrushKey}}" />
							<Setter TargetName="presenter" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
							<Setter TargetName="presenter" Property="Opacity" Value="1" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsKeyboardFocused" Value="true" />
								<Condition Property="ToggleButton.IsChecked" Value="true" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundCheckedHoverBrushKey}}" />
							<Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderCheckedHoverBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderCheckedHoverBrushKey}}" />
							<Setter TargetName="presenter" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
							<Setter TargetName="presenter" Property="Opacity" Value="1" />
						</MultiTrigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="outerBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBackgroundPressedBrushKey}}" />
							<Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderPressedBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderPressedBrushKey}}" />
							<Setter TargetName="presenter" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
							<Setter TargetName="presenter" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="presenter" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="presenter" Property="Opacity" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(themes:ThemeProperties.DisabledOpacity)}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- dockingPrimitives:NewTabButton -->
	<Style x:Key="{x:Type dockingPrimitives:NewTabButton}" TargetType="dockingPrimitives:NewTabButton" BasedOn="{StaticResource NewTabButtonStyle}" />
	
	<!-- AdvancedTabControlStyle -->
	<Style x:Key="AdvancedTabControlStyle" TargetType="docking:AdvancedTabControl">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabControlBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="IsActive" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" />
		<Setter Property="TabBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBackgroundNormalBrushKey}}" />
		<Setter Property="TabBackgroundActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBackgroundSelectedNormalBrushKey}}" />
		<Setter Property="TabBackgroundInactiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBackgroundSelectedNormalBrushKey}}" />
		<Setter Property="TabBackgroundPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBackgroundHoverBrushKey}}" />
		<Setter Property="TabBackgroundPreview" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBackgroundNormalBrushKey}}" />
		<Setter Property="TabBackgroundPreviewActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBackgroundSelectedNormalBrushKey}}" />
		<Setter Property="TabBackgroundPreviewPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBackgroundHoverBrushKey}}" />
		<Setter Property="TabBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBorderNormalBrushKey}}" />
		<Setter Property="TabBorderBrushActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBorderSelectedNormalBrushKey}}" />
		<Setter Property="TabBorderBrushInactiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBorderSelectedNormalBrushKey}}" />
		<Setter Property="TabBorderBrushPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBorderHoverBrushKey}}" />
		<Setter Property="TabBorderBrushPreview" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBorderNormalBrushKey}}" />
		<Setter Property="TabBorderBrushPreviewActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBorderSelectedNormalBrushKey}}" />
		<Setter Property="TabBorderBrushPreviewPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBorderHoverBrushKey}}" />
		<Setter Property="TabCornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabItemBorderNormalCornerRadiusKey}}" />
		<Setter Property="TabForeground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="TabForegroundActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="TabForegroundInactiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="TabForegroundPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="TabForegroundPreview" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="TabForegroundPreviewPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="TabForegroundPreviewActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		
		<Setter Property="EmbeddedButtonStyle" Value="{StaticResource EmbeddedButtonStyleKey}" />
        <Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<dockingPrimitives:AdvancedTabPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="MenuButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.DropDownArrowGlyphTemplateKey}}" />
		<Setter Property="OverflowMenuButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.OverflowDropDownArrowGlyphTemplateKey}}" />
		<Setter Property="ScrollBackwardButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.ScrollLeftGlyphTemplateKey}}" />
		<Setter Property="ScrollForwardButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.ScrollRightGlyphTemplateKey}}" />
		<Setter Property="TabEmbeddedButtonStyle">
			<Setter.Value>
				<Style TargetType="ButtonBase" BasedOn="{StaticResource EmbeddedButtonStyleKey}">
					<Setter Property="Margin" Value="0,2,2,2" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:AdvancedTabControl">
					<Grid KeyboardNavigation.TabNavigation="Local">
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDef0" Height="*" />
							<RowDefinition x:Name="RowDef1" Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColDef0" Width="*" />
							<ColumnDefinition x:Name="ColDef1" Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<Grid x:Name="HeaderPanel" Grid.Row="1" Panel.ZIndex="1" ClipToBounds="True" 
                              KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="1">
							<dockingPrimitives:NewTabButton x:Name="PART_NewTabButton" Panel.ZIndex="2" HorizontalAlignment="Left" Style="{TemplateBinding NewTabButtonStyle}"
								Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasNewTabButton, Converter={StaticResource BooleanToVisibilityConverter}}"
								TabStripPlacement="{TemplateBinding TabStripPlacement}" IsContentHorizontal="{TemplateBinding IsTabContentHorizontal}" Padding="{TemplateBinding TabPadding}"
								CornerRadius="{TemplateBinding TabCornerRadius}" Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RequestNewTabCommand}">
								<TextBlock Text="+" Opacity="0" />
							</dockingPrimitives:NewTabButton>
						
							<ItemsPresenter />
						</Grid>
														
						<StackPanel x:Name="ButtonsPanel" Grid.Row="1" Grid.Column="1" Panel.ZIndex="3" Orientation="Horizontal" KeyboardNavigation.TabIndex="2">
							<RepeatButton x:Name="ScrollBackwardButton" ContentTemplate="{TemplateBinding ScrollBackwardButtonContentTemplate}"
										  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AreScrollButtonsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
										  Style="{TemplateBinding EmbeddedButtonStyle}"
										  Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ScrollBackwardCommand}"
										  ToolTip="{productsDocking:SRExtension UIAdvancedTabControlScrollBackwardButtonToolTip}" AutomationProperties.Name="Scroll Backward" />
							<RepeatButton x:Name="ScrollForwardButton" ContentTemplate="{TemplateBinding ScrollForwardButtonContentTemplate}"
										  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AreScrollButtonsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
										  Style="{TemplateBinding EmbeddedButtonStyle}"
										  Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ScrollForwardCommand}"
										  ToolTip="{productsDocking:SRExtension UIAdvancedTabControlScrollForwardButtonToolTip}" AutomationProperties.Name="Scroll Forward" />
							<Button x:Name="PART_MenuButton" ContentTemplate="{TemplateBinding MenuButtonContentTemplate}"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMenuButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" 
									Style="{TemplateBinding EmbeddedButtonStyle}" ClickMode="Press" 
									Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OpenMenuCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" 
									AutomationProperties.Name="Menu" />
						</StackPanel>
						
						<Border x:Name="HighlightBorder" Grid.ColumnSpan="2" Margin="0,0,0,-1" BorderBrush="{TemplateBinding HighlightBrushInactive}" BorderThickness="{TemplateBinding RotatedHighlightThickness}"
								KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="3">
							<Border x:Name="ContentBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding RotatedBorderThickness}">
								<ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding RotatedPadding}" Content="{TemplateBinding SelectedContent}"
												  ContentTemplate="{TemplateBinding SelectedContentTemplate}" ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}" />
							</Border>
						</Border>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsActive" Value="True">
							<Setter TargetName="HighlightBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HighlightBrushActive}" />
						</Trigger>
						<Trigger Property="IsOverflowed" Value="True">
							<Setter TargetName="PART_MenuButton" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OverflowMenuButtonContentTemplate}" />
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Top">
							<Setter TargetName="RowDef0" Property="Height" Value="Auto" />
							<Setter TargetName="RowDef1" Property="Height" Value="*" />
							<Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="ButtonsPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="HighlightBorder" Property="Grid.Row" Value="1" />
							<Setter TargetName="HighlightBorder" Property="Margin" Value="0,-1,0,0" />
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter TargetName="ColDef0" Property="Width" Value="Auto" />
							<Setter TargetName="ColDef1" Property="Width" Value="*" />
							<Setter TargetName="PART_NewTabButton" Property="HorizontalAlignment" Value="Stretch" />
							<Setter TargetName="PART_NewTabButton" Property="VerticalAlignment" Value="Top" />
							<Setter TargetName="ButtonsPanel" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="ButtonsPanel" Property="Grid.Column" Value="0" />
							<Setter TargetName="HighlightBorder" Property="Grid.Column" Value="1" />
							<Setter TargetName="HighlightBorder" Property="Grid.ColumnSpan" Value="1" />
							<Setter TargetName="HighlightBorder" Property="Grid.RowSpan" Value="2" />
							<Setter TargetName="HighlightBorder" Property="Margin" Value="-1,0,0,0" />
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter TargetName="PART_NewTabButton" Property="HorizontalAlignment" Value="Stretch" />
							<Setter TargetName="PART_NewTabButton" Property="VerticalAlignment" Value="Top" />
							<Setter TargetName="ButtonsPanel" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
							<Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="HighlightBorder" Property="Grid.ColumnSpan" Value="1" />
							<Setter TargetName="HighlightBorder" Property="Grid.RowSpan" Value="2" />
							<Setter TargetName="HighlightBorder" Property="Margin" Value="0,0,-1,0" />
						</Trigger>
						<Trigger Property="IsTabStripVisible" Value="False">
							<Setter TargetName="HeaderPanel" Property="Opacity" Value="0" />
							<Setter TargetName="HeaderPanel" Property="Width" Value="1" />
							<Setter TargetName="HeaderPanel" Property="Height" Value="1" />
							<Setter TargetName="HeaderPanel" Property="Margin" Value="-1,-1,0,0" />
							<Setter TargetName="ButtonsPanel" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="HighlightBorder" Property="Margin" Value="0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- docking:AdvancedTabControl -->
	<Style x:Key="{x:Type docking:AdvancedTabControl}" TargetType="docking:AdvancedTabControl" BasedOn="{StaticResource AdvancedTabControlStyle}" />

	<!-- AdvancedTabItemStyle -->
	<Style x:Key="AdvancedTabItemStyle" TargetType="docking:AdvancedTabItem">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="CloseButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.CloseGlyphTemplateKey}}" />
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Margin="3" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeDashArray="1 2" SnapsToDevicePixels="true" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="PinButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.PinGlyphTemplateKey}}" />
		<Setter Property="PromoteButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.PromoteTabGlyphTemplateKey}}" />
		<Setter Property="ReadOnlyContextContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Canvas Margin="4,0,4,1" Width="7" Height="9" Opacity="0.75">
						<Path Width="7" Height="4" Canvas.Left="1" Stroke="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}" StrokeThickness="1.0" 
							  Data="M 0.5,4 L 0.5,2 A 0.75,1 90 0 1 4.5,2 L 4.5,4" />
						<Path Width="7" Height="5" Canvas.Top="4" Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}" 
							  Data="M 0,1 L 1,0 L 6,0 L 7,1 L 7,5 L 0,5 Z  M 3,1 L 4,1 L 4,3 L 3,3 Z" />
					</Canvas>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="RenderTransformOrigin" Value="0,0"/>
		<Setter Property="UnpinButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.UnpinGlyphTemplateKey}}" />
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:AdvancedTabItem">
					<Grid Background="Transparent">
						<dockingPrimitives:TabItemBorder x:Name="TabChrome" IsSelected="{TemplateBinding IsSelected}"
														 TabStripPlacement="{TemplateBinding TabStripPlacement}" 
														 NearSlantExtent="{TemplateBinding NearSlantExtent}" FarSlantExtent="{TemplateBinding FarSlantExtent}"
														 BorderThickness="{TemplateBinding BorderThickness}" UntintedBorderBrush="{TemplateBinding BorderBrush}" 
														 UntintedBackground="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"
														 TintColor="{TemplateBinding TintColor}" FlashColor="{TemplateBinding FlashColor}" FlashMode="{TemplateBinding FlashMode}">
							<Grid LayoutTransform="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsContentHorizontal, Converter={StaticResource RotationConditionalConverter}}">
								<Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

                                <Image AutomationProperties.Name="Image" Width="16" Height="16" Stretch="Uniform" Source="{TemplateBinding ImageSource}"
									   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Padding, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left'}"
									   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsImageVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
									   VerticalAlignment="Center" SnapsToDevicePixels="True" />

                                <shared:PixelSnapper Grid.Column="1" VerticalRoundMode="CeilingToEven">
									<ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" 
													  Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"
													  TextElement.Foreground="{TemplateBinding Foreground}"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
										<ContentPresenter.Resources>
											<Style TargetType="TextBlock">
												<Setter Property="TextTrimming" Value="CharacterEllipsis" />
												<Setter Property="TextWrapping" Value="NoWrap" />
											</Style>
										</ContentPresenter.Resources>
									</ContentPresenter>
								</shared:PixelSnapper>
								
								<shared:PixelSnapper Grid.Column="2" VerticalRoundMode="CeilingToEven">
									<ContentControl x:Name="ContextContentControl" IsTabStop="False"
													Content="{TemplateBinding ContextContent}" ContentTemplate="{TemplateBinding ContextContentTemplate}" 
													TextElement.Foreground="{Binding ElementName=ContentPresenter, Path=(TextElement.Foreground)}" VerticalAlignment="Center" />
								</shared:PixelSnapper>

								<shared:PixelSnapper Grid.Column="3" VerticalRoundMode="CeilingToEven">
									<ContentControl x:Name="ReadOnlyContextContentControl" IsTabStop="False"
													Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly, Converter={StaticResource BooleanToVisibilityConverter}}"
													Content="" ContentTemplate="{TemplateBinding ReadOnlyContextContentTemplate}" 
													TextElement.Foreground="{Binding ElementName=ContentPresenter, Path=(TextElement.Foreground)}" VerticalAlignment="Center" />
								</shared:PixelSnapper>

								<StackPanel x:Name="ButtonPanel" Grid.Column="4" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
									<Button x:Name="ToggleLayoutKindButton" ContentTemplate="{TemplateBinding PinButtonContentTemplate}" Style="{TemplateBinding EmbeddedButtonStyle}" 
											Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToggleLayoutKindCommand}"
											Foreground="{Binding ElementName=ContentPresenter, Path=(TextElement.Foreground)}" 
											Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasToggleLayoutKindButton, Converter={StaticResource BooleanToVisibilityConverter}}"
											Opacity="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsToggleLayoutKindButtonVisible, Converter={StaticResource BooleanToOpacityConverter}}"
											ToolTip="{productsDocking:SRExtension UIAdvancedTabItemToggleLayoutKindButtonToolTip}" AutomationProperties.Name="Toggle Layout Kind" />
									<Button x:Name="CloseButton" ContentTemplate="{TemplateBinding CloseButtonContentTemplate}" Style="{TemplateBinding EmbeddedButtonStyle}" 
											Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CloseCommand}"
											Foreground="{Binding ElementName=ContentPresenter, Path=(TextElement.Foreground)}" 
											Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasCloseButton, Converter={StaticResource BooleanToVisibilityConverter}}"
											Opacity="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCloseButtonVisible, Converter={StaticResource BooleanToOpacityConverter}}"
											ToolTip="{productsDocking:SRExtension UIAdvancedTabItemCloseButtonToolTip}" AutomationProperties.Name="Close" />
								</StackPanel>
							</Grid>
						</dockingPrimitives:TabItemBorder>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="LayoutKind" Value="Pinned">
							<Setter TargetName="ToggleLayoutKindButton" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UnpinButtonContentTemplate}" />
						</Trigger>
						<Trigger Property="LayoutKind" Value="Preview">
							<Setter TargetName="ToggleLayoutKindButton" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PromoteButtonContentTemplate}" />
							<Setter TargetName="ToggleLayoutKindButton" Property="ToolTip" Value="{productsDocking:SRExtension UIAdvancedTabItemKeepOpenButtonToolTip}" />
						</Trigger>
						<Trigger Property="HighlightKind" Value="Preview">
							<Setter TargetName="TabChrome" Property="UntintedBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundPreview}" />
							<Setter TargetName="TabChrome" Property="UntintedBorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrushPreview}" />
							<Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ForegroundPreview}" />
						</Trigger>
						<Trigger Property="HighlightKind" Value="PointerOver">
							<Setter TargetName="TabChrome" Property="UntintedBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundPointerOver}" />
							<Setter TargetName="TabChrome" Property="UntintedBorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrushPointerOver}" />
							<Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ForegroundPointerOver}" />
						</Trigger>
						<Trigger Property="HighlightKind" Value="PreviewPointerOver">
							<Setter TargetName="TabChrome" Property="UntintedBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundPreviewPointerOver}" />
							<Setter TargetName="TabChrome" Property="UntintedBorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrushPreviewPointerOver}" />
							<Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ForegroundPreviewPointerOver}" />
						</Trigger>
						<Trigger Property="HighlightKind" Value="ActiveSelected">
							<Setter TargetName="TabChrome" Property="UntintedBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundActiveSelected}" />
							<Setter TargetName="TabChrome" Property="UntintedBorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrushActiveSelected}" />
							<Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ForegroundActiveSelected}" />
						</Trigger>
						<Trigger Property="HighlightKind" Value="PreviewActiveSelected">
							<Setter TargetName="TabChrome" Property="UntintedBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundPreviewActiveSelected}" />
							<Setter TargetName="TabChrome" Property="UntintedBorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrushPreviewActiveSelected}" />
							<Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ForegroundPreviewActiveSelected}" />
						</Trigger>
						<Trigger Property="HighlightKind" Value="InactiveSelected">
							<Setter TargetName="TabChrome" Property="UntintedBackground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundInactiveSelected}" />
							<Setter TargetName="TabChrome" Property="UntintedBorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrushInactiveSelected}" />
							<Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ForegroundInactiveSelected}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- docking:AdvancedTabItem -->
	<Style x:Key="{x:Type docking:AdvancedTabItem}" TargetType="docking:AdvancedTabItem" BasedOn="{StaticResource AdvancedTabItemStyle}" />
	
	<!-- dockingPrimitives:DockingWindowContainerTabItem -->
	<Style x:Key="{x:Type dockingPrimitives:DockingWindowContainerTabItem}" TargetType="dockingPrimitives:DockingWindowContainerTabItem" BasedOn="{StaticResource AdvancedTabItemStyle}" />

	<!-- DockGuideBaseStyle -->
	<Style x:Key="DockGuideBaseStyle" TargetType="dockingPrimitives:DockGuideBase">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideBackgroundBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideBorderBrushKey}}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Height" Value="39" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Width" Value="39" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="dockingPrimitives:DockGuideBase">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<ContentPresenter x:Name="presenter" Opacity="0.75" />
					</Border>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="presenter" Property="Opacity" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- dockingPrimitives:DockGuideCenter -->
	<Style TargetType="dockingPrimitives:DockGuideCenter" BasedOn="{StaticResource DockGuideBaseStyle}">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
							Background="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphForegroundBrushKey}}">
						<Rectangle Height="2" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" VerticalAlignment="Top" />
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- dockingPrimitives:DockGuideCross -->
	<Style TargetType="dockingPrimitives:DockGuideCross">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideBackgroundBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideBorderBrushKey}}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="dockingPrimitives:DockGuideCross">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<Rectangle Grid.Row="2" Grid.ColumnSpan="5" Fill="{TemplateBinding Background}" />
						<Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Fill="{TemplateBinding Background}" />
						<Rectangle Grid.Row="3" Grid.RowSpan="2" Grid.Column="2" Fill="{TemplateBinding Background}" />
					
						<dockingPrimitives:DockGuideOuterTop x:Name="PART_OuterTopDockGuide" Grid.Row="0" Grid.Column="2" Margin="0" Padding="5,5,5,6" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Right'}" />

						<dockingPrimitives:DockGuideInnerTop x:Name="PART_InnerTopDockGuide" Grid.Row="1" Grid.Column="2" Margin="0" Padding="5,6,5,6" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Right'}" />

						<dockingPrimitives:DockGuideOuterLeft x:Name="PART_OuterLeftDockGuide" Grid.Row="2" Grid.Column="0" Margin="0" Padding="5,5,6,5" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" />
						
						<dockingPrimitives:DockGuideInnerLeft x:Name="PART_InnerLeftDockGuide" Grid.Row="2" Grid.Column="1" Margin="0" Padding="6,5,6,5" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Bottom'}" />
						
						<Grid Grid.Row="2" Grid.Column="2">
							<Rectangle Fill="{TemplateBinding BorderBrush}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
									   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Top}" HorizontalAlignment="Left" VerticalAlignment="Top" />
							<Rectangle Fill="{TemplateBinding BorderBrush}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}"
									   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Top}" HorizontalAlignment="Right" VerticalAlignment="Top" />
							<Rectangle Fill="{TemplateBinding BorderBrush}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}"
									   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
							<Rectangle Fill="{TemplateBinding BorderBrush}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
									   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
							<dockingPrimitives:DockGuideCenter x:Name="PART_CenterDockGuide" Margin="0" Background="Transparent" BorderBrush="Transparent" />
						</Grid>

						<dockingPrimitives:DockGuideInnerRight x:Name="PART_InnerRightDockGuide" Grid.Row="2" Grid.Column="3" Margin="0" Padding="6,5,6,5" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Bottom'}" />

						<dockingPrimitives:DockGuideOuterRight x:Name="PART_OuterRightDockGuide" Grid.Row="2" Grid.Column="4" Margin="0" Padding="6,5,5,5" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}" />

						<dockingPrimitives:DockGuideInnerBottom x:Name="PART_InnerBottomDockGuide" Grid.Row="3" Grid.Column="2" Margin="0" Padding="5,6,5,6" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Right'}" />

						<dockingPrimitives:DockGuideOuterBottom x:Name="PART_OuterBottomDockGuide" Grid.Row="4" Grid.Column="2" Margin="0" Padding="5,6,5,5" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Right,Bottom'}" />
						
						<Border Grid.Row="2" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Bottom'}" />
						<Border Grid.RowSpan="2" Grid.Column="2" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Right'}" />
						<Border Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Top,Right,Bottom'}" />
						<Border Grid.Row="3" Grid.RowSpan="2" Grid.Column="2" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Right,Bottom'}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- dockingPrimitives:DockGuideInnerBottom -->
	<Style TargetType="dockingPrimitives:DockGuideInnerBottom" BasedOn="{StaticResource DockGuideBaseStyle}">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
							Background="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBackgroundBrushKey}}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="2" />
								<RowDefinition Height="*" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							
							<Rectangle Grid.ColumnSpan="2" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" />
							<Rectangle Grid.Row="2" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphForegroundBrushKey}}" />
							<Line Grid.Row="2" X1="0" X2="22" Y1="0.5" Y2="0.5" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
								  StrokeThickness="1" StrokeDashArray="2,2" HorizontalAlignment="Center" VerticalAlignment="Top" />
						</Grid>
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Margin" Value="0,0,0,15" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
	</Style>

	<!-- dockingPrimitives:DockGuideInnerLeft -->
	<Style TargetType="dockingPrimitives:DockGuideInnerLeft" BasedOn="{StaticResource DockGuideBaseStyle}">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
							Background="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBackgroundBrushKey}}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="2" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							
							<Rectangle Grid.ColumnSpan="2" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" />
							<Rectangle Grid.Row="1" Grid.Column="0" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphForegroundBrushKey}}" />
							<Line Grid.Row="1" Grid.Column="0" X1="0.5" X2="0.5" Y1="0" Y2="20" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
								  StrokeThickness="1" StrokeDashArray="2,2" StrokeDashOffset="1" HorizontalAlignment="Right" VerticalAlignment="Center" />
						</Grid>
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Margin" Value="15,0,0,0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	
	<!-- dockingPrimitives:DockGuideInnerRight -->
	<Style TargetType="dockingPrimitives:DockGuideInnerRight" BasedOn="{StaticResource DockGuideBaseStyle}">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
							Background="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBackgroundBrushKey}}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="2" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							
							<Rectangle Grid.ColumnSpan="2" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" />
							<Rectangle Grid.Row="1" Grid.Column="1" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphForegroundBrushKey}}" />
							<Line Grid.Row="1" Grid.Column="2" X1="0.5" X2="0.5" Y1="0" Y2="20" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
								  StrokeThickness="1" StrokeDashArray="2,2" StrokeDashOffset="1" HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Grid>
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="Margin" Value="0,0,15,0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	
	<!-- dockingPrimitives:DockGuideInnerTop -->
	<Style TargetType="dockingPrimitives:DockGuideInnerTop" BasedOn="{StaticResource DockGuideBaseStyle}">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
							Background="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBackgroundBrushKey}}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="2" />
								<RowDefinition Height="*" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							
							<Rectangle Grid.ColumnSpan="2" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" />
							<Rectangle Grid.Row="1" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphForegroundBrushKey}}" />
							<Line Grid.Row="1" X1="0" X2="22" Y1="0.5" Y2="0.5" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
								  StrokeThickness="1" StrokeDashArray="2,2" HorizontalAlignment="Center" VerticalAlignment="Bottom" />
						</Grid>
					</Border>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Margin" Value="0,15,0,0" />
		<Setter Property="VerticalAlignment" Value="Top" />
	</Style>
	
	<!-- dockingPrimitives:DockGuideOuterBottom -->
	<Style TargetType="dockingPrimitives:DockGuideOuterBottom" BasedOn="{StaticResource DockGuideBaseStyle}">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
			
						<Path Width="9" Height="5" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideArrowBackgroundBrushKey}}" 
							  HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 4.5,5 L 0,0 L 9,0 Z" Margin="0,0,0,2" />
						<Border Grid.Row="1" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
								Background="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphForegroundBrushKey}}">
							<Rectangle Height="2" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" VerticalAlignment="Top" />
						</Border>
					</Grid>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Margin" Value="0,0,0,15" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
	</Style>

	<!-- dockingPrimitives:DockGuideOuterLeft -->
	<Style TargetType="dockingPrimitives:DockGuideOuterLeft" BasedOn="{StaticResource DockGuideBaseStyle}">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
			
						<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
								Background="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphForegroundBrushKey}}">
							<Rectangle Height="2" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" VerticalAlignment="Top" />
						</Border>
						<Path Grid.Column="1" Width="5" Height="9" Margin="2,0,0,0" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideArrowBackgroundBrushKey}}"
							  HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0,4.5 L 5,0 L 5,9 Z" />
					</Grid>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Margin" Value="15,0,0,0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	
	<!-- dockingPrimitives:DockGuideOuterRight -->
	<Style TargetType="dockingPrimitives:DockGuideOuterRight" BasedOn="{StaticResource DockGuideBaseStyle}">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
			
						<Path Width="5" Height="9" Margin="0,0,2,0" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideArrowBackgroundBrushKey}}" 
							  HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 5,4.5 L 0,0 L 0,9 Z" />
						<Border Grid.Column="1" BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
								Background="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphForegroundBrushKey}}">
							<Rectangle Height="2" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" VerticalAlignment="Top" />
						</Border>
					</Grid>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="Margin" Value="0,0,15,0" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	
	<!-- dockingPrimitives:DockGuideOuterTop -->
	<Style TargetType="dockingPrimitives:DockGuideOuterTop" BasedOn="{StaticResource DockGuideBaseStyle}">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
			
						<Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" 
								Background="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphForegroundBrushKey}}">
							<Rectangle Height="2" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideGlyphBorderBrushKey}}" VerticalAlignment="Top" />
						</Border>
						<Path Grid.Row="1" Width="9" Height="5" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DockGuideArrowBackgroundBrushKey}}" 
							  HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 4.5,0 L 0,5 L 9,5 Z" Margin="0,2,0,0" />
					</Grid>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Margin" Value="0,15,0,0" />
		<Setter Property="VerticalAlignment" Value="Top" />
	</Style>
	
	<!-- dockingPrimitives:DockPreview-->
	<Style TargetType="dockingPrimitives:DockPreview">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowPreviewBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowPreviewBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="5" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="dockingPrimitives:DockPreview">
					<Path Data="{TemplateBinding Geometry}" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" 
						  StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- dockingPrimitives:FloatPreview-->
	<Style TargetType="dockingPrimitives:FloatPreview">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowPreviewBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowPreviewBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="5" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="dockingPrimitives:FloatPreview">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- docking:DockSite -->
	<Style x:Key="{x:Type docking:DockSite}" TargetType="docking:DockSite">
		<Setter Property="AutoHidePopupOpensOnMouseHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockSiteAutoHidePopupOpensOnMouseHoverBooleanKey}}" />
		<Setter Property="AutoHideTabItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<Image AutomationProperties.Name="Image" Width="16" Height="16" Stretch="Uniform" Source="{Binding ImageSource}"
							   Visibility="{Binding RelativeSource={RelativeSource AncestorType=dockingPrimitives:AutoHideTabItem}, Path=IsImageVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
							   Margin="0,0,4,0" VerticalAlignment="Center" SnapsToDevicePixels="True" />
						
						<TextBlock Grid.Column="1" Text="{Binding TabTextResolved}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" VerticalAlignment="Center" />
						
						<ContentControl Grid.Column="2" IsTabStop="False" Content="{Binding DataContext, Converter={StaticResource NonUIElementConverter}}" 
										ContentTemplate="{Binding AutoHideTabContextContentTemplate}" VerticalAlignment="Center" />
					</Grid>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WorkspaceVeryDarkBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderNormalBrushKey}}" />
		<Setter Property="ClipToBounds" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Padding" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockSitePaddingThicknessKey}}" />
		<Setter Property="SplitterSize" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockSiteSplitterSizeDoubleKey}}" />
		<Setter Property="ToolWindowsHaveTabImages" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockSiteToolWindowsHaveImagesOnTabsBooleanKey}}" />
		<Setter Property="ToolWindowTabItemContainerStyle">
			<Setter.Value>
				<Style TargetType="docking:AdvancedTabItem">
					<Setter Property="Header" Value="{Binding TabTextResolved}" />
					<Setter Property="HeaderTemplate">
						<Setter.Value>
							<DataTemplate>
								<TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" VerticalAlignment="Center" />
							</DataTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:DockSite">
					<Grid>
						<docking:DockHost x:Name="PART_DockHost" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
										  Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" 
										  Child="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Child, Mode=TwoWay}" 
										  ClipToBounds="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Canvas x:Name="PART_AdornmentHost" themes:WindowChrome.ElementKind="ClientArea" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
	<!-- docking:DockHost -->
	<Style x:Key="{x:Type docking:DockHost}" TargetType="docking:DockHost">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WorkspaceVeryDarkBackgroundNormalBrushKey}}" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="themes:WindowChrome.ElementKind" Value="NonClientArea" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:DockHost">
					<Border themes:WindowChrome.ElementKind="NonClientArea" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<Grid themes:WindowChrome.ElementKind="NonClientArea">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<Rectangle Grid.Row="0" Grid.Column="0" themes:WindowChrome.ElementKind="ClientArea" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabControlBackgroundNormalBrushKey}}" />
							<Rectangle Grid.Row="0" Grid.Column="2" themes:WindowChrome.ElementKind="ClientArea" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabControlBackgroundNormalBrushKey}}" />
							<Rectangle Grid.Row="2" Grid.Column="0" themes:WindowChrome.ElementKind="ClientArea" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabControlBackgroundNormalBrushKey}}" />
							<Rectangle Grid.Row="2" Grid.Column="2" themes:WindowChrome.ElementKind="ClientArea" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabControlBackgroundNormalBrushKey}}" />

							<dockingPrimitives:AutoHideTabStrip x:Name="PART_AutoHideLeftTabStrip" Grid.Row="1" Grid.Column="0" Placement="Left" themes:WindowChrome.ElementKind="ClientArea"
																TabItemTemplateSelector="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoHideTabItemTemplateSelector}"
																TabItemTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoHideTabItemTemplate}"
																ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoHideLeftContainers}"
																Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SplitterSize, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Right'}" />
							<dockingPrimitives:AutoHideTabStrip x:Name="PART_AutoHideRightTabStrip" Grid.Row="1" Grid.Column="2" Placement="Right" themes:WindowChrome.ElementKind="ClientArea"
																TabItemTemplateSelector="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoHideTabItemTemplateSelector}"
																TabItemTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoHideTabItemTemplate}"
																ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoHideRightContainers}"
																Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SplitterSize, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Right'}" />																
							<dockingPrimitives:AutoHideTabStrip x:Name="PART_AutoHideTopTabStrip" Grid.Row="0" Grid.Column="1" Placement="Top" themes:WindowChrome.ElementKind="ClientArea"
																TabItemTemplateSelector="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoHideTabItemTemplateSelector}"
																TabItemTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoHideTabItemTemplate}"
																ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoHideTopContainers}"
																Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SplitterSize, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Right'}" />																
							<dockingPrimitives:AutoHideTabStrip x:Name="PART_AutoHideBottomTabStrip" Grid.Row="2" Grid.Column="1" Placement="Bottom" themes:WindowChrome.ElementKind="ClientArea"
																TabItemTemplateSelector="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoHideTabItemTemplateSelector}"
																TabItemTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoHideTabItemTemplate}"
																ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AutoHideBottomContainers}"
																Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SplitterSize, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Right'}" />																

							<Grid x:Name="PART_ContentHost" Grid.Row="1" Grid.Column="1" Margin="{TemplateBinding Padding}" themes:WindowChrome.ElementKind="NonClientArea" ClipToBounds="True"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
	<!-- dockingPrimitives:AutoHideTabStrip -->
	<Style x:Key="{x:Type dockingPrimitives:AutoHideTabStrip}" TargetType="dockingPrimitives:AutoHideTabStrip">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabControlBackgroundNormalBrushKey}}" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="dockingPrimitives:AutoHideTabStrip">
					<Border x:Name="RootBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" ClipToBounds="True">
						<ItemsPresenter />
					</Border>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsHorizontal" Value="False">
							<Setter TargetName="RootBorder" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="90" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
	<!-- dockingPrimitives:AutoHideTabGroup -->
	<Style x:Key="{x:Type dockingPrimitives:AutoHideTabGroup}" TargetType="dockingPrimitives:AutoHideTabGroup">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="dockingPrimitives:AutoHideTabGroup">
					<Border x:Name="RootBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<ItemsPresenter />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
	<!-- dockingPrimitives:AutoHideTabItem -->
	<Style x:Key="{x:Type dockingPrimitives:AutoHideTabItem}" TargetType="dockingPrimitives:AutoHideTabItem">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabItemBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabItemBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabItemBorderNormalThicknessKey}}" />
		<Setter Property="CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabItemBorderNormalCornerRadiusKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabItemForegroundNormalBrushKey}}" />

		<Setter Property="Margin" Value="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabItemMarginNormalThicknessKey}}" />
		<Setter Property="Padding" Value="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabItemPaddingNormalThicknessKey}}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="dockingPrimitives:AutoHideTabItem">
					<dockingPrimitives:TabItemBorder x:Name="RootBorder" IsSelected="True" BorderThickness="{TemplateBinding BorderThickness}" UntintedBorderBrush="{TemplateBinding BorderBrush}"
													 UntintedBackground="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" 
													 TintColor="{Binding TabTintColor}" FlashColor="{Binding TabFlashColor}" FlashMode="{Binding TabFlashMode}">
						<ContentPresenter Margin="{TemplateBinding Padding}" />
					</dockingPrimitives:TabItemBorder>
					
					<ControlTemplate.Triggers>
						<Trigger Property="Placement" Value="Top">
							<Setter TargetName="RootBorder" Property="TabStripPlacement" Value="Bottom" />
						</Trigger>
						<Trigger Property="Placement" Value="Right">
							<Setter TargetName="RootBorder" Property="TabStripPlacement" Value="Bottom" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabItemBackgroundHoverBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabItemBorderHoverBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.AutoHideTabItemForegroundHoverBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
	<!-- docking:Workspace -->
	<Style x:Key="{x:Type docking:Workspace}" TargetType="docking:Workspace">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="MinWidth" Value="30" />
		<Setter Property="MinHeight" Value="30" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:Workspace">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
						<ContentPresenter ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTemplate="{TemplateBinding ContentTemplate}"
										  Content="{TemplateBinding Content}" ClipToBounds="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- docking:SplitContainer -->
	<Style x:Key="{x:Type docking:SplitContainer}" TargetType="docking:SplitContainer">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:SplitContainer">
					<dockingPrimitives:SplitContainerPanel x:Name="PART_Panel" Orientation="{TemplateBinding Orientation}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- SplitterBaseStyle -->
	<Style x:Key="SplitterBaseStyle" TargetType="dockingPrimitives:SplitterBase">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="dockingPrimitives:SplitterBase">
                    <Rectangle x:Name="LayoutRoot" Fill="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitterHighlightBrush}" />
										</ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
							</VisualStateGroup>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal"/>
                                <VisualState x:Name="Vertical"/>
							</VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
					</Rectangle>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- dockingPrimitives:AutoHideContainerSplitter -->
	<Style x:Key="{x:Type dockingPrimitives:AutoHideContainerSplitter}" TargetType="dockingPrimitives:AutoHideContainerSplitter" BasedOn="{StaticResource SplitterBaseStyle}"></Style>

	<!-- dockingPrimitives:SplitContainerSplitter -->
	<Style x:Key="{x:Type dockingPrimitives:SplitContainerSplitter}" TargetType="dockingPrimitives:SplitContainerSplitter" BasedOn="{StaticResource SplitterBaseStyle}"></Style>

	<!-- docking:ToolWindowContainer -->
	<Style x:Key="{x:Type docking:ToolWindowContainer}" TargetType="docking:ToolWindowContainer">
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBorderSelectedBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabControlBorderNormalThicknessKey}}" />
		<Setter Property="CloseButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.CloseGlyphTemplateKey}}" />
		<Setter Property="EmbeddedButtonStyle">
			<Setter.Value>
				<Style TargetType="ButtonBase" BasedOn="{StaticResource EmbeddedButtonStyleKey}">
					<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowTitleBarButtonBorderNormalCornerRadiusKey}}" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="HasTitleBarGripper" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerTitleBarHasGripperBooleanKey}}" />
		<Setter Property="MaximizeButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.MaximizeGlyphTemplateKey}}" />
		<Setter Property="MenuButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.DropDownArrowGlyphTemplateKey}}" />
		<Setter Property="MinimizeButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.MinimizeGlyphTemplateKey}}" />
		<Setter Property="PinButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.PinGlyphTemplateKey}}" />
		<Setter Property="RestoreButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.RestoreGlyphTemplateKey}}" />
		<Setter Property="TitleFontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
		<Setter Property="TitleFontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
		<Setter Property="UnpinButtonContentTemplate" Value="{DynamicResource {x:Static themes:SharedResourceKeys.UnpinGlyphTemplateKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:ToolWindowContainer">
					<Grid themes:WindowChrome.ElementKind="NonClientArea">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						
						<Border x:Name="titleBarBorder" themes:WindowChrome.ElementKind="NonClientArea" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
								Background="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerTitleBarBackgroundInactiveBrushKey}}"
								CornerRadius="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerTitleBarBorderNormalCornerRadiusKey}}"
								TextElement.Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerTitleBarGlyphBackgroundInactiveBrushKey}}"
								Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedWindow.HasTitleBarResolved, Converter={StaticResource BooleanToVisibilityConverter}}"
								SnapsToDevicePixels="True">
							<Grid>
								<Rectangle x:Name="nonClientTitleBarGripper" themes:WindowChrome.ElementKind="TitleBar" Fill="Transparent" />
								<dockingPrimitives:TitleBarPanel x:Name="PART_TitleBar" Margin="2,0" themes:WindowChrome.ElementKind="NonClientArea" ClipToBounds="True"
																 ContextContentAlignment="{TemplateBinding TitleBarContextContentAlignment}">
									<Image x:Name="PART_Icon" Margin="2,0,0,0" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedWindow.ImageSource}" 
										   Height="16" Width="16" VerticalAlignment="Center" SnapsToDevicePixels="True" dockingPrimitives:TitleBarPanel.IsIcon="True" 
										   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasTitleBarIcon,Converter={StaticResource BooleanToVisibilityConverter}}" />
															
									<TextBlock x:Name="title" Margin="3,3,5,3" themes:WindowChrome.ElementKind="TitleBar" dockingPrimitives:TitleBarPanel.IsHeader="True"
											   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedWindow.Title}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap"
											   FontFamily="{TemplateBinding TitleFontFamily}" FontSize="{TemplateBinding TitleFontSize}" FontWeight="{TemplateBinding TitleFontWeight}"
											   Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerTitleBarForegroundInactiveBrushKey}}"  VerticalAlignment="Center" />
									
									<Rectangle x:Name="titleBarGripper" Margin="4,1,4,0" Height="5" themes:WindowChrome.ElementKind="TitleBar" dockingPrimitives:TitleBarPanel.IsFiller="True"
											   Opacity="0.5" VerticalAlignment="Center" UseLayoutRounding="True" SnapsToDevicePixels="True"
											   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasTitleBarGripper, Converter={StaticResource BooleanToVisibilityConverter}}"
											   Fill="{StaticResource DockingWindowContainerTitleBarGripperInactiveBrush}" />

									<ContentPresenter themes:WindowChrome.ElementKind="ClientArea" dockingPrimitives:TitleBarPanel.IsContextContent="True"
													  Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedWindow.DataContext}"
													  ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedWindow.ToolWindowContainerTitleBarContextContentTemplate}" VerticalAlignment="Center" />

									<Button x:Name="PART_OptionsButton" themes:WindowChrome.ElementKind="ClientArea" 
											AutomationProperties.Name="Options" ContentTemplate="{TemplateBinding MenuButtonContentTemplate}"
											Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsOptionsButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
											Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OpenOptionsMenuCommand}"
											Style="{TemplateBinding EmbeddedButtonStyle}" ClickMode="Press" VerticalAlignment="Center"
											ToolTip="{productsDocking:SRExtension UIToolWindowContainerOptionsButtonToolTip}" />
									<Button x:Name="toggleAutoHideButton" themes:WindowChrome.ElementKind="ClientArea" 
											AutomationProperties.Name="ToggleAutoHide" ContentTemplate="{TemplateBinding UnpinButtonContentTemplate}"
											Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsToggleAutoHideButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
											Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ToggleAutoHideCommand}"
											Style="{TemplateBinding EmbeddedButtonStyle}" VerticalAlignment="Center"
											ToolTip="{productsDocking:SRExtension UIToolWindowContainerToggleAutoHideButtonToolTip}" />
									<Button x:Name="minimizeButton" themes:WindowChrome.ElementKind="ClientArea" 
											AutomationProperties.Name="Minimize" ContentTemplate="{TemplateBinding MinimizeButtonContentTemplate}"
											Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMinimizeButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
											Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinimizeCommand}"
											Style="{TemplateBinding EmbeddedButtonStyle}" VerticalAlignment="Center"
											ToolTip="{productsDocking:SRExtension UIToolWindowContainerMinimizeButtonToolTip}" />
									<Button x:Name="restoreButton" themes:WindowChrome.ElementKind="ClientArea" 
											AutomationProperties.Name="Restore" ContentTemplate="{TemplateBinding RestoreButtonContentTemplate}"
											Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsRestoreButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
											Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RestoreCommand}"
											Style="{TemplateBinding EmbeddedButtonStyle}" VerticalAlignment="Center"
											ToolTip="{productsDocking:SRExtension UIToolWindowContainerRestoreButtonToolTip}" />
									<Button x:Name="maximizeButton" themes:WindowChrome.ElementKind="ClientArea" 
											AutomationProperties.Name="Maximize" ContentTemplate="{TemplateBinding MaximizeButtonContentTemplate}"
											Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMaximizeButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
											Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaximizeCommand}"
											Style="{TemplateBinding EmbeddedButtonStyle}" VerticalAlignment="Center"
											ToolTip="{productsDocking:SRExtension UIToolWindowContainerMaximizeButtonToolTip}" />
									<Button x:Name="closeButton" themes:WindowChrome.ElementKind="ClientArea" 
											AutomationProperties.Name="Close" ContentTemplate="{TemplateBinding CloseButtonContentTemplate}"
											Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCloseButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
											Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CloseCommand}"
											Style="{TemplateBinding EmbeddedButtonStyle}" VerticalAlignment="Center"
											ToolTip="{productsDocking:SRExtension UIToolWindowContainerCloseButtonToolTip}" />
								</dockingPrimitives:TitleBarPanel>
							</Grid>
						</Border>
						
						<dockingPrimitives:ToolWindowContainerTabControl x:Name="PART_TabControl" Grid.Row="1" themes:WindowChrome.ElementKind="ClientArea" 
							Style="{TemplateBinding TabControlStyle}"
							ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Windows}" 
							SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedWindow, Mode=TwoWay}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" 
							CanTabsCloseOnMiddleClick="{TemplateBinding CanTabsCloseOnMiddleClick}"
							CanTabsDrag="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedWindow.CanDragTabResolved}" 
							HasTabImages="{TemplateBinding HasTabImages}"
							IsActive="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsActive, Mode=OneWay}"
							IsLayoutAnimationEnabled="{TemplateBinding IsTabLayoutAnimationEnabledResolved}"
							IsTabKeyboardSwitchingEnabled="False"
							IsTabStripVisible="{TemplateBinding IsTabStripVisible}" 
							ItemContainerStyle="{TemplateBinding TabItemContainerStyle}"
							MaxTabExtent="{TemplateBinding MaxTabExtent}" 
							MinTabExtent="{TemplateBinding MinTabExtent}"
							TabOverflowBehavior="{TemplateBinding TabOverflowBehavior}" 
							TabStripPlacement="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TabStripPlacement, Converter={StaticResource SideToDockConverter}}"
							UseDefaultFocusHandling="False"
							/>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Top">
							<Setter TargetName="titleBarBorder" Property="Margin" Value="0,0,0,-1" />
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter TargetName="titleBarBorder" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Right'}" />
							<Setter TargetName="PART_TabControl" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessConverter}, ConverterParameter='Left,Top,Right'}" />
						</Trigger>
						<Trigger SourceName="titleBarBorder" Property="Visibility" Value="Collapsed">
							<Setter TargetName="PART_TabControl" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}" />
						</Trigger>
						<Trigger Property="State" Value="AutoHide">
							<Setter TargetName="toggleAutoHideButton" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PinButtonContentTemplate}" />
						</Trigger>
						<Trigger Property="IsActive" Value="True">
							<Setter TargetName="titleBarBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerTitleBarBackgroundActiveBrushKey}}" />
							<Setter TargetName="titleBarBorder" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerTitleBarGlyphBackgroundActiveBrushKey}}" />
							<Setter TargetName="title" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerTitleBarForegroundActiveBrushKey}}" />
							<Setter TargetName="titleBarGripper" Property="Fill" Value="{StaticResource DockingWindowContainerTitleBarGripperActiveBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- dockingPrimitives:ToolWindowContainerTabControl -->
	<Style x:Key="{x:Type dockingPrimitives:ToolWindowContainerTabControl}" TargetType="dockingPrimitives:ToolWindowContainerTabControl" BasedOn="{StaticResource AdvancedTabControlStyle}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBorderSelectedBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabControlBorderNormalThicknessKey}}" />
		<Setter Property="TabBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBackgroundNormalBrushKey}}" />
		<Setter Property="TabBackgroundActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBackgroundSelectedBrushKey}}" />
		<Setter Property="TabBackgroundInactiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBackgroundSelectedBrushKey}}" />
		<Setter Property="TabBackgroundPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBackgroundHoverBrushKey}}" />
		<Setter Property="TabBackgroundPreview" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBackgroundNormalBrushKey}}" />
		<Setter Property="TabBackgroundPreviewActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBackgroundSelectedBrushKey}}" />
		<Setter Property="TabBackgroundPreviewPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBackgroundHoverBrushKey}}" />
		<Setter Property="TabBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBorderNormalBrushKey}}" />
		<Setter Property="TabBorderBrushActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBorderSelectedBrushKey}}" />
		<Setter Property="TabBorderBrushInactiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBorderSelectedBrushKey}}" />
		<Setter Property="TabBorderBrushPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBorderHoverBrushKey}}" />
		<Setter Property="TabBorderBrushPreview" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBorderNormalBrushKey}}" />
		<Setter Property="TabBorderBrushPreviewActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBorderSelectedBrushKey}}" />
		<Setter Property="TabBorderBrushPreviewPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBorderHoverBrushKey}}" />
		<Setter Property="TabCornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemBorderNormalCornerRadiusKey}}" />
		<Setter Property="TabForeground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemForegroundNormalBrushKey}}" />
		<Setter Property="TabForegroundActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemForegroundSelectedBrushKey}}" />
		<Setter Property="TabForegroundInactiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemForegroundSelectedBrushKey}}" />
		<Setter Property="TabForegroundPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemForegroundHoverBrushKey}}" />
		<Setter Property="TabForegroundPreview" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemForegroundNormalBrushKey}}" />
		<Setter Property="TabForegroundPreviewActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemForegroundSelectedBrushKey}}" />
		<Setter Property="TabForegroundPreviewPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolWindowContainerTabItemForegroundHoverBrushKey}}" />
	</Style>
	
	<!-- dockingPrimitives:TabbedMdiContainerTabControl -->
	<Style x:Key="{x:Type dockingPrimitives:TabbedMdiContainerTabControl}" TargetType="dockingPrimitives:TabbedMdiContainerTabControl" BasedOn="{StaticResource AdvancedTabControlStyle}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBorderInactiveSelectedBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabControlBorderNormalThicknessKey}}" />
		<Setter Property="CanTabsHighlightOnPointerOverWhenInactive" Value="True" />
		<Setter Property="HasTabCloseButtons" Value="True" />
		<Setter Property="HighlightBrushActive" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabControlBackgroundActiveFocusedBrushKey}}" />
		<Setter Property="HighlightBrushInactive" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabControlBackgroundInactiveNormalBrushKey}}" />
		<Setter Property="HighlightThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabControlPaddingNormalThicknessKey}}" />
		<Setter Property="TabBackground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBackgroundNormalBrushKey}}" />
		<Setter Property="TabBackgroundActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBackgroundActiveFocusedBrushKey}}" />
		<Setter Property="TabBackgroundInactiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBackgroundInactiveSelectedBrushKey}}" />
		<Setter Property="TabBackgroundPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBackgroundHoverBrushKey}}" />
		<Setter Property="TabBackgroundPreview" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBackgroundPreviewBrushKey}}" />
		<Setter Property="TabBackgroundPreviewActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBackgroundPreviewActiveFocusedBrushKey}}" />
		<Setter Property="TabBackgroundPreviewPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBackgroundPreviewHoverBrushKey}}" />
		<Setter Property="TabBorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBorderNormalBrushKey}}" />
		<Setter Property="TabBorderBrushActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBorderActiveFocusedBrushKey}}" />
		<Setter Property="TabBorderBrushInactiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBorderInactiveSelectedBrushKey}}" />
		<Setter Property="TabBorderBrushPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBorderHoverBrushKey}}" />
		<Setter Property="TabBorderBrushPreview" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBorderPreviewBrushKey}}" />
		<Setter Property="TabBorderBrushPreviewActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBorderPreviewActiveFocusedBrushKey}}" />
		<Setter Property="TabBorderBrushPreviewPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBorderPreviewHoverBrushKey}}" />
		<Setter Property="TabCornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemBorderNormalCornerRadiusKey}}" />
		<Setter Property="TabForeground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemForegroundNormalBrushKey}}" />
		<Setter Property="TabForegroundActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemForegroundActiveFocusedBrushKey}}" />
		<Setter Property="TabForegroundInactiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemForegroundInactiveSelectedBrushKey}}" />
		<Setter Property="TabForegroundPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemForegroundHoverBrushKey}}" />
		<Setter Property="TabForegroundPreview" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemForegroundPreviewBrushKey}}" />
		<Setter Property="TabForegroundPreviewActiveSelected" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemForegroundPreviewActiveFocusedBrushKey}}" />
		<Setter Property="TabForegroundPreviewPointerOver" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabItemForegroundPreviewHoverBrushKey}}" />
	</Style>
	
	<!-- DockingWindowStyle -->
	<Style x:Key="DockingWindowStyle" TargetType="docking:DockingWindow">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DockingWindowContainerBackgroundNormalBrushKey}}" />
		<Setter Property="ClipToBounds" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:DockingWindow">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<ContentPresenter ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTemplate="{TemplateBinding ContentTemplate}"
										  Content="{TemplateBinding Content}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- docking:ToolWindow -->
	<Style x:Key="{x:Type docking:ToolWindow}" TargetType="docking:ToolWindow" BasedOn="{StaticResource DockingWindowStyle}">
		<Setter Property="TabToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Title, Mode=OneWay}" />
	</Style>
	
	<!-- docking:DocumentWindow -->
	<Style x:Key="{x:Type docking:DocumentWindow}" TargetType="docking:DocumentWindow" BasedOn="{StaticResource DockingWindowStyle}">
		<Setter Property="TabToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=FileName, Mode=OneWay}" />
	</Style>
	
	<!-- docking:TabbedMdiHost -->
	<Style x:Key="{x:Type docking:TabbedMdiHost}" TargetType="docking:TabbedMdiHost">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="TabItemContainerStyle">
			<Setter.Value>
				<Style TargetType="docking:AdvancedTabItem">
					<Setter Property="Header" Value="{Binding TabTextResolved}" />
					<Setter Property="HeaderTemplate">
						<Setter.Value>
							<DataTemplate>
								<TextBlock Text="{Binding Converter={StaticResource TitleConverter}}" TextTrimming="None" TextWrapping="NoWrap" VerticalAlignment="Center" />
							</DataTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:TabbedMdiHost">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<Grid>
							<ContentPresenter x:Name="emptyContentPresenter" ContentTemplate="{TemplateBinding EmptyContentTemplate}" Content="{TemplateBinding EmptyContent}" Visibility="Collapsed" />
							<ContentPresenter x:Name="childContentPresenter" Content="{TemplateBinding Child}" />
						</Grid>
					</Border>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsEmpty" Value="True">
							<Setter TargetName="emptyContentPresenter" Property="Visibility" Value="Visible" />
							<Setter TargetName="childContentPresenter" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- docking:TabbedMdiContainer -->
	<Style x:Key="{x:Type docking:TabbedMdiContainer}" TargetType="docking:TabbedMdiContainer">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="MaxTabExtent" Value="500" />
		<Setter Property="TabOverflowBehavior" Value="Menu" />
		<Setter Property="TabStripPlacement" Value="Top" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:TabbedMdiContainer">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
						<dockingPrimitives:TabbedMdiContainerTabControl x:Name="PART_TabControl"
							Style="{TemplateBinding TabControlStyle}"
							ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Windows}" 
							SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedWindow, Mode=TwoWay}"
							CanTabsCloseOnMiddleClick="{TemplateBinding CanTabsCloseOnMiddleClick}"
							CanTabsDrag="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedWindow.CanDragTabResolved}" 
							CanTabsPin="{TemplateBinding HasTabPinButtons}"
							CanTabsPromote="{TemplateBinding HasTabPromoteButtons}"
							HasNewTabButton="{TemplateBinding HasNewTabButton}"
							HasTabCloseButtons="{TemplateBinding HasTabCloseButtons}"
							HasTabImages="{TemplateBinding HasTabImages}"
							IsActive="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsActive, Mode=OneWay}"
							IsLayoutAnimationEnabled="{TemplateBinding IsTabLayoutAnimationEnabledResolved}"
							IsTabKeyboardSwitchingEnabled="False"
							IsTabStripVisible="{TemplateBinding IsTabStripVisible}"
							ItemContainerStyle="{TemplateBinding TabItemContainerStyle}"
							MaxTabExtent="{TemplateBinding MaxTabExtent}" 
							MinTabExtent="{TemplateBinding MinTabExtent}"
							TabOverflowBehavior="{TemplateBinding TabOverflowBehavior}" 
							TabStripPlacement="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TabStripPlacement, Converter={StaticResource SideToDockConverter}}"
							UseDefaultFocusHandling="False"
							>
							<dockingPrimitives:TabbedMdiContainerTabControl.EmbeddedButtonStyle>
								<Style TargetType="ButtonBase" BasedOn="{StaticResource EmbeddedButtonStyleKey}">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.TabbedMdiContainerTabControlForegroundNormalBrushKey}}" />
								</Style>
							</dockingPrimitives:TabbedMdiContainerTabControl.EmbeddedButtonStyle>
						</dockingPrimitives:TabbedMdiContainerTabControl>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- docking:StandardMdiHost -->
	<Style x:Key="{x:Type docking:StandardMdiHost}" TargetType="docking:StandardMdiHost">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.StandardMdiBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.StandardMdiBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.StandardMdiBorderNormalThicknessKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:StandardMdiHost">
					<shared:ElementChrome Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.StandardMdiElementChromeBorderStyleKey}}"
							Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
						<dockingPrimitives:StandardMdiItemsControl x:Name="PART_ItemsControl" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Windows}" />
					</shared:ElementChrome>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsScrollingEnabled" Value="True" />
								<Condition Property="AreWindowsMaximized" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_ItemsControl" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
							<Setter TargetName="PART_ItemsControl" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- dockingPrimitives:StandardMdiItemsControl -->
	<Style x:Key="{x:Type dockingPrimitives:StandardMdiItemsControl}" TargetType="dockingPrimitives:StandardMdiItemsControl">
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<dockingPrimitives:StandardMdiPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="dockingPrimitives:StandardMdiItemsControl">
					<ScrollViewer>
						<ItemsPresenter />
					</ScrollViewer>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- WindowControlStyle -->
	<Style x:Key="WindowControlStyle" TargetType="docking:WindowControl">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderInactiveBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderNormalThicknessKey}}" />
		<Setter Property="CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowControlBorderNormalCornerRadiusKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowForegroundNormalBrushKey}}" />
		<Setter Property="Focusable" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="30" />
		<Setter Property="MinWidth" Value="123" />
		<Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Cycle" />
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
		<Setter Property="ReadOnlyContextContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Canvas Margin="10,1,10,0" Width="7" Height="9" Opacity="0.75">
						<Path Width="7" Height="4" Canvas.Left="1" Stroke="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}" StrokeThickness="1.0" 
							  Data="M 0.5,4 L 0.5,2 A 0.75,1 90 0 1 4.5,2 L 4.5,4" />
						<Path Width="7" Height="5" Canvas.Top="4" Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}" 
							  Data="M 0,1 L 1,0 L 6,0 L 7,1 L 7,5 L 0,5 Z  M 3,1 L 4,1 L 4,3 L 3,3 Z" />
					</Canvas>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="TitleBarFontWeight" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowTitleBarFontWeightKey}}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:WindowControl">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition x:Name="titleBarRowDefinition" Height="Auto" />
							<RowDefinition x:Name="titleBarInnerBorderRowDefinition" Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
				
						<shared:DropShadowChrome x:Name="dropShadow" Grid.RowSpan="5" Grid.ColumnSpan="3" XOffset="0" YOffset="0" IsHitTestVisible="False" 
												 ZOffset="{TemplateBinding DropShadowZOffset}" Color="{TemplateBinding DropShadowColor}"
												 BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DropShadowZOffset, Converter={StaticResource ThicknessConverter}}" 
												 Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasDropShadow, Converter={StaticResource BooleanToVisibilityConverter}}" />
						
						<Border x:Name="innerBorderTop" Grid.Row="0" Grid.ColumnSpan="3" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Top}"
								Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowInnerBorderTopInactiveBrushKey}}"
								CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Converter={StaticResource CornerRadiusConverter}, ConverterParameter=Top}" />
						<Border x:Name="titleBarBackground" Grid.Row="1" Grid.ColumnSpan="3" Margin="0,0,0,-1"
								Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}"
								Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowTitleBarBackgroundInactiveBrushKey}}" />
						<Rectangle x:Name="titleBarInnerBorder" Grid.Row="2" Grid.Column="1" Height="3" 
								   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}"
								   Fill="{DynamicResource {x:Static themes:AssetResourceKeys.WindowTitleBarInnerBorderInactiveBrushKey}}" />
						<Rectangle x:Name="innerBorderLeft" Grid.Row="2" Grid.RowSpan="2" Grid.Column="0" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}" 
								   Fill="{DynamicResource {x:Static themes:AssetResourceKeys.WindowInnerBorderLeftInactiveBrushKey}}" />
						<Rectangle x:Name="innerBorderRight" Grid.Row="2" Grid.RowSpan="2" Grid.Column="2" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}" 
								   Fill="{DynamicResource {x:Static themes:AssetResourceKeys.WindowInnerBorderRightInactiveBrushKey}}" />
						<Border x:Name="innerBorderBottom" Grid.Row="4" Grid.ColumnSpan="3" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Bottom}"
								Background="{DynamicResource {x:Static themes:AssetResourceKeys.WindowInnerBorderBottomInactiveBrushKey}}"
								CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Converter={StaticResource CornerRadiusConverter}, ConverterParameter=Bottom}" />
				
						<Border x:Name="outerBorder" Grid.RowSpan="5" Grid.ColumnSpan="3" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" />
					
						<Border x:Name="PART_TitleBar" Grid.Row="1" Grid.Column="1" Panel.ZIndex="1" ClipToBounds="True"
								Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}"
								Background="Transparent" SnapsToDevicePixels="True">
							<dockingPrimitives:TitleBarPanel>
                                <Grid dockingPrimitives:TitleBarPanel.IsHeader="True">
                                    <TextBlock x:Name="titleBarTextShadow" Margin="4" Text="{TemplateBinding Title}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" VerticalAlignment="Center"
											FontFamily="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}" FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}"
											FontStyle="{DynamicResource {x:Static SystemFonts.CaptionFontStyleKey}}" FontWeight="{TemplateBinding TitleBarFontWeight}"
											Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.WindowTitleBarForegroundShadowActiveBrushKey}}" Visibility="Collapsed">
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform X="1" Y="1" />
                                        </TextBlock.RenderTransform>
                                    </TextBlock>

                                    <TextBlock x:Name="titleBarText" Margin="4" Text="{TemplateBinding Title}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" VerticalAlignment="Center"
											FontFamily="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}" FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}"
											FontStyle="{DynamicResource {x:Static SystemFonts.CaptionFontStyleKey}}" FontWeight="{TemplateBinding TitleBarFontWeight}"
											Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.WindowTitleBarForegroundInactiveBrushKey}}" />
                                </Grid>

                                <Image x:Name="PART_Icon" Margin="2,0,0,0" Source="{TemplateBinding Icon}" Height="16" Width="16" VerticalAlignment="Center" dockingPrimitives:TitleBarPanel.IsIcon="True" 
									   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasIcon,Converter={StaticResource BooleanToVisibilityConverter}}" />

								<shared:PixelSnapper VerticalRoundMode="CeilingToEven" dockingPrimitives:TitleBarPanel.IsContextContent="True">
									<ContentControl x:Name="ContextContentControl" IsTabStop="False"
													Content="{TemplateBinding ContextContent}" ContentTemplate="{TemplateBinding ContextContentTemplate}" 
													ContentTemplateSelector="{TemplateBinding ContextContentTemplateSelector}" VerticalAlignment="Center" />
								</shared:PixelSnapper>

								<shared:PixelSnapper VerticalRoundMode="CeilingToEven" dockingPrimitives:TitleBarPanel.IsReadOnlyContextContent="True">
									<ContentControl x:Name="ReadOnlyContextContentControl" IsTabStop="False"
													Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly, Converter={StaticResource BooleanToVisibilityConverter}}"
													Content="" ContentTemplate="{TemplateBinding ReadOnlyContextContentTemplate}" 
													ContentTemplateSelector="{TemplateBinding ContextContentTemplateSelector}" VerticalAlignment="Center" />
								</shared:PixelSnapper>

								<Button x:Name="minimizeButton" AutomationProperties.Name="Minimize"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMinimizeButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
										Style="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonBaseStyleKey}}"
										ContentTemplate="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonMinimizeGlyphTemplateKey}}"
										Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinimizeCommand}"
										themes:ThemeProperties.IsActive="{TemplateBinding IsActive}"
										ToolTip="{productsDocking:SRExtension UIWindowControlMinimizeButtonToolTip}" 
										/>
								<Button x:Name="restoreButton" AutomationProperties.Name="Restore"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsRestoreButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
										Style="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonBaseStyleKey}}"
										ContentTemplate="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonRestoreGlyphTemplateKey}}"
										Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RestoreCommand}"
										themes:ThemeProperties.IsActive="{TemplateBinding IsActive}"
										ToolTip="{productsDocking:SRExtension UIWindowControlRestoreButtonToolTip}" 
										/>
								<Button x:Name="maximizeButton" AutomationProperties.Name="Maximize"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMaximizeButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
										Style="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonBaseStyleKey}}"
										ContentTemplate="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonMaximizeGlyphTemplateKey}}"
										Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaximizeCommand}"
										themes:ThemeProperties.IsActive="{TemplateBinding IsActive}"
										ToolTip="{productsDocking:SRExtension UIWindowControlMaximizeButtonToolTip}" 
										/>
								<Button x:Name="closeButton" AutomationProperties.Name="Close"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCloseButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
										Style="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonBaseAlternateStyleKey}}"
										ContentTemplate="{DynamicResource {x:Static themes:SharedResourceKeys.WindowTitleBarButtonCloseGlyphTemplateKey}}"
										Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CloseCommand}"
										themes:ThemeProperties.IsActive="{TemplateBinding IsActive}"
										ToolTip="{productsDocking:SRExtension UIWindowControlCloseButtonToolTip}" 
										/>
							</dockingPrimitives:TitleBarPanel>
						</Border>
						
						<Border x:Name="contentBorder" Grid.Row="3" Grid.Column="1" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" ClipToBounds="True">
							<ContentPresenter ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentTemplate="{TemplateBinding ContentTemplate}"
											  Content="{TemplateBinding Content}" />
						</Border>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Minimized">
							<Setter TargetName="titleBarInnerBorder" Property="Height" Value="0" />
                            <Setter TargetName="contentBorder" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter TargetName="outerBorder" Property="BorderThickness" Value="0" />
							<Setter TargetName="innerBorderTop" Property="Height" Value="0" />
							<Setter TargetName="innerBorderLeft" Property="Width" Value="0" />
							<Setter TargetName="innerBorderRight" Property="Width" Value="0" />
							<Setter TargetName="innerBorderBottom" Property="Height" Value="0" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMaximizedFrameVisible" Value="False" />
								<Condition Property="WindowState" Value="Maximized" />
							</MultiTrigger.Conditions>
							<Setter TargetName="dropShadow" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="titleBarBackground" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="titleBarInnerBorder" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_TitleBar" Property="Visibility" Value="Collapsed" />
						</MultiTrigger>
						<Trigger Property="BorderThickness" Value="0">
							<Setter TargetName="outerBorder" Property="BorderThickness" Value="0" />
						</Trigger>
						<Trigger Property="IsActive" Value="True">
                            <Setter Property="DropShadowColor" Value="#24000000" />
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowBorderActiveBrushKey}}" />
                            <Setter TargetName="innerBorderTop" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowInnerBorderTopActiveBrushKey}}" />
                            <Setter TargetName="titleBarBackground" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowTitleBarBackgroundActiveBrushKey}}" />
                            <Setter TargetName="titleBarText" Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowTitleBarForegroundActiveBrushKey}}" />
                            <Setter TargetName="titleBarInnerBorder" Property="Fill" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowTitleBarInnerBorderActiveBrushKey}}" />
                            <Setter TargetName="innerBorderLeft" Property="Fill" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowInnerBorderLeftActiveBrushKey}}" />
                            <Setter TargetName="innerBorderRight" Property="Fill" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowInnerBorderRightActiveBrushKey}}" />
                            <Setter TargetName="innerBorderBottom" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WindowInnerBorderBottomActiveBrushKey}}" />
						</Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True" />
                                <Condition Property="IsTitleBarTextShadowEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="titleBarTextShadow" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- docking:WindowControl -->
	<Style x:Key="{x:Type docking:WindowControl}" TargetType="docking:WindowControl" BasedOn="{StaticResource WindowControlStyle}" />
		
	<!-- dockingPrimitives:FloatingWindowControl -->
	<Style x:Key="{x:Type dockingPrimitives:FloatingWindowControl}" TargetType="dockingPrimitives:FloatingWindowControl" BasedOn="{StaticResource WindowControlStyle}">
		<Setter Property="HasDropShadow" Value="True" />
	</Style>
		
	<!-- dockingPrimitives:StandardMdiWindowControl -->
	<Style x:Key="{x:Type dockingPrimitives:StandardMdiWindowControl}" TargetType="dockingPrimitives:StandardMdiWindowControl" BasedOn="{StaticResource WindowControlStyle}" />
	
	<!-- docking:StandardSwitcher -->
	<Style x:Key="{x:Type docking:StandardSwitcher}" TargetType="docking:StandardSwitcher">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarBorderNormalCornerRadiusKey}}" />
		
		<Setter Property="MinHeight" Value="100" />
		<Setter Property="MinWidth" Value="300" />
		<Setter Property="Padding" Value="15,7" />

		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="RenderTransform">
			<Setter.Value>
				<ScaleTransform />
			</Setter.Value>
		</Setter>
		<Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		
		<Setter Property="HeaderTemplate">
			<Setter.Value>
				<DataTemplate DataType="docking:DockingWindow">
					<StackPanel Margin="15,10,15,0">
						<Grid MinHeight="16">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Image Margin="0,0,7,0" Stretch="None" Source="{Binding ImageSource}" />
							<shared:PixelSnapper Grid.Column="1" VerticalRoundMode="CeilingToEven">
								<TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" FontSize="14" FontWeight="Bold" VerticalAlignment="Center" />
							</shared:PixelSnapper>
						</Grid>
						<shared:PixelSnapper Margin="0,3,0,7">
							<TextBlock Text="{Binding Description}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Opacity="0.75" />
						</shared:PixelSnapper>
					</StackPanel>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		
		<Setter Property="FooterTemplate">
			<Setter.Value>
				<DataTemplate DataType="docking:DockingWindow">
					<TextBlock Margin="15,0,15,10" Text="{Binding Path=(docking:DocumentWindow.FileName)}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Opacity="0.75" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		
		<Setter Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate DataType="docking:DockingWindow">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<Image Margin="0,0,7,0" Width="16" Height="16" Stretch="Uniform" Source="{Binding ImageSource}" VerticalAlignment="Center" />
						<shared:PixelSnapper Grid.Column="1" VerticalAlignment="Center">
							<TextBlock Text="{Binding TabTextResolved}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" />
						</shared:PixelSnapper>
					</Grid>
				</DataTemplate>
			</Setter.Value>
		</Setter>
					
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="dockingPrimitives:StandardSwitcherItem">
					<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundNormalBrushKey}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalBrushKey}}" />
					<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalThicknessKey}}" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

					<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalCornerRadiusKey}}" />
					<Setter Property="themes:ThemeProperties.IsGlassEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListIsGlassEnabledBooleanKey}}" />

					<Setter Property="HorizontalContentAlignment" Value="Left" />
					<Setter Property="VerticalContentAlignment" Value="Center" />

					<Setter Property="Margin" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemMarginNormalThicknessKey}}" />
					<Setter Property="Padding" Value="2,0,0,0" />
					<Setter Property="HorizontalAlignment" Value="Left" />
					<Setter Property="Width" Value="180" />

					<Setter Property="Cursor" Value="{x:Static Cursors.Hand}" />
					<Setter Property="FocusVisualStyle" Value="{x:Null}" />

					<!-- 6/2/2010 - Items should use Title for their automation name (316-139856EB-0CC1) -->
					<Setter Property="AutomationProperties.Name"
							Value="{Binding Content.Title, RelativeSource={RelativeSource Self}, Converter={StaticResource CoalesceConverter}, ConverterParameter=''}" />
					
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="dockingPrimitives:StandardSwitcherItem">
								<shared:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
										BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedFocusedBrushKey}}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedFocusedBrushKey}}"
										BorderThickness="{TemplateBinding BorderThickness}"
										InnerBorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalBrushKey}}"
										InnerBorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedFocusedBrushKey}}"
										InnerBorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalThicknessKey}}"
										CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
										SnapsToDevicePixels="true">
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition MaxHeight="11" />
											<RowDefinition />
										</Grid.RowDefinitions>
										<Rectangle x:Name="highlight"
												Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(themes:ThemeProperties.IsGlassEnabled), Converter={StaticResource BooleanToVisibilityConverter}}" />
										<ContentPresenter Grid.RowSpan="2" Margin="{TemplateBinding Padding}"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</Grid>
								</shared:ElementChrome>

								<ControlTemplate.Triggers>
									<Trigger Property="IsSelected" Value="True">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedFocusedBrushKey}}" />
										<Setter TargetName="chrome" Property="State" Value="Focused" />
										<Setter TargetName="highlight" Property="Fill" Value="#40FFFFFF" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
					
		<Setter Property="ScrollButtonStyle">
			<Setter.Value>
				<Style TargetType="ButtonBase">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderThickness" Value="0" />
					<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

					<Setter Property="Width" Value="180" />

					<Setter Property="Cursor" Value="{x:Static Cursors.Hand}" />
					<Setter Property="FocusVisualStyle" Value="{x:Null}" />

					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ButtonBase">
								<Border Background="{TemplateBinding Background}">
									<ContentPresenter x:Name="presenter" Margin="{TemplateBinding Padding}"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</Border>

								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="False">
										<Setter TargetName="presenter" Property="Opacity" Value="0.4" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="ScrollDownButtonContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Canvas Width="16" Height="16">
						<Path Width="8" Height="4" Canvas.Left="4" Canvas.Top="6" Stretch="Fill" Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}"
								Data="M 0,0 L 8,0 L 4,4 Z"/>
					</Canvas>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ScrollUpButtonContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Canvas Width="16" Height="16">
						<Path Width="8" Height="4" Canvas.Left="4" Canvas.Top="6" Stretch="Fill" Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}"
								Data="M 0,4 L 8,4 L 4,0 Z"/>
					</Canvas>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="docking:StandardSwitcher">
					<Grid>
						<shared:DropShadowChrome x:Name="dropShadow" XOffset="0" YOffset="0" ZOffset="{TemplateBinding DropShadowZOffset}" IsHitTestVisible="False"
												 Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DropShadowZOffset, Converter={StaticResource ThicknessConverter}}" 
												 BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DropShadowZOffset, Converter={StaticResource ThicknessConverter}}" 
												 Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush.Color}" Opacity="0.2" />
						<Border x:Name="outerBorder" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DropShadowZOffset, Converter={StaticResource ThicknessConverter}}" 
								Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<shared:PixelSnapper>
									<shared:ZeroSizeContentControl MaxWidth="{Binding ElementName=panelBorder, Path=ActualWidth}" HorizontalContentAlignment="Stretch" HasWidth="False">
										<ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedWindow}" />
									</shared:ZeroSizeContentControl>
								</shared:PixelSnapper>

								<Border x:Name="panelBorder" Grid.Row="1">
									<Grid x:Name="PART_ItemsPanel" Margin="{TemplateBinding Padding}" />
								</Border>

								<shared:PixelSnapper Grid.Row="2">
									<shared:ZeroSizeContentControl MaxWidth="{Binding ElementName=panelBorder, Path=ActualWidth}" HorizontalContentAlignment="Stretch" HasWidth="False">
										<ContentPresenter ContentTemplate="{TemplateBinding FooterTemplate}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedWindow}" />
									</shared:ZeroSizeContentControl>
								</shared:PixelSnapper>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>