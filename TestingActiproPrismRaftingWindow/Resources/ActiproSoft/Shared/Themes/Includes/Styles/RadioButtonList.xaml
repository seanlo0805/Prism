<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:controls="clr-namespace:ActiproSoftware.Windows.Controls;assembly=ActiproSoftware.Shared.Wpf"
    >

	<!-- controls:RadioButtonList -->
	<Style x:Key="{x:Type controls:RadioButtonList}" TargetType="{x:Type controls:RadioButtonList}">
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:RadioButtonList">
					<ControlTemplate.Resources>
						
						<Style TargetType="ListBoxItem" >
							<Setter Property="Margin" Value="2, 2, 2, 0" />
							<Setter Property="controls:RadioButtonList.BulletMargin" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadioButtonList}}, Path=BulletMargin}" />
							<Setter Property="controls:RadioButtonList.BulletVerticalAlignment" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadioButtonList}}, Path=BulletVerticalAlignment}" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="ListBoxItem" >
										<DockPanel Background="Transparent">
											<RadioButton DockPanel.Dock="Left"
												IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected}" 
												IsTabStop="False" Focusable="False" 
												Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:RadioButtonList.BulletMargin)}"
												VerticalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:RadioButtonList.BulletVerticalAlignment)}" 
												/>
											<ContentPresenter x:Name="presenter"
												Content="{TemplateBinding ContentPresenter.Content}"
												ContentTemplate="{TemplateBinding ContentPresenter.ContentTemplate}"
												ContentTemplateSelector="{TemplateBinding ContentPresenter.ContentTemplateSelector}"
												RecognizesAccessKey="True"
												/>
										</DockPanel>
										
										<ControlTemplate.Triggers>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:RadioButtonList}}, Path=AutoDisableNonSelectedItemContent}" Value="True" />
													<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
												</MultiDataTrigger.Conditions>
												<Setter TargetName="presenter" Property="IsEnabled" Value="False" />
											</MultiDataTrigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>

					</ControlTemplate.Resources>

					<Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" x:Name="Bd" 
						Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True" Padding="1,1,1,1">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<StackPanel Orientation="Horizontal" IsItemsHost="True" />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>


</ResourceDictionary>