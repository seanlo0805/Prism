<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:editors="clr-namespace:ActiproSoftware.Windows.Controls.Editors;assembly=ActiproSoftware.Editors.Wpf"
		xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
		xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
		xmlns:system="clr-namespace:System;assembly=mscorlib">

	<!-- Converters -->
	<shared:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />

	<!-- CheckBoxControlTemplate for editors:EnumListBoxItem -->
	<ControlTemplate x:Key="CheckBoxControlTemplate" TargetType="{x:Type editors:EnumListBoxItem}">
		<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
				Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
			<DockPanel>
				<CheckBox x:Name="checkBox" DockPanel.Dock="Left" Margin="0,0,2,0"
						IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected}" IsHitTestVisible="False" IsTabStop="False"
						Focusable="False" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						Style="{DynamicResource {x:Static themes:SharedResourceKeys.CheckBoxStyleKey}}" />
				<shared:PixelSnapper>
					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				</shared:PixelSnapper>
			</DockPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsPartiallySelected" Value="True">
				<Setter TargetName="checkBox" Property="IsChecked" Value="{x:Null}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- RadioButtonControlTemplate for editors:EnumListBoxItem -->
	<ControlTemplate x:Key="RadioButtonControlTemplate" TargetType="{x:Type editors:EnumListBoxItem}">
		<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
				Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
			<DockPanel>
				<RadioButton x:Name="radioButton" DockPanel.Dock="Left" Margin="0,0,2,0"
						IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected}" IsHitTestVisible="False" IsTabStop="False"
						Focusable="False" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						Style="{DynamicResource {x:Static themes:SharedResourceKeys.RadioButtonStyleKey}}" />
				<shared:PixelSnapper>
					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				</shared:PixelSnapper>
			</DockPanel>
		</Border>
		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding Converter={x:Static shared:IsTypeConverter.Instance}, ConverterParameter={x:Type Separator}}" Value="True">
				<Setter TargetName="radioButton" Property="Visibility" Value="Collapsed" />
			</DataTrigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- editors:EnumListBoxItem -->
	<Style x:Key="{x:Type editors:EnumListBoxItem}" TargetType="{x:Type editors:EnumListBoxItem}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="HorizontalContentAlignment"
				Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment"
				Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

		<Setter Property="Margin" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemMarginNormalThicknessKey}}" />
		<Setter Property="Padding" Value="2,0,0,0" />

		<Setter Property="themes:ThemeProperties.IsGlassEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListIsGlassEnabledBooleanKey}}" />

		<Setter Property="Template" Value="{StaticResource RadioButtonControlTemplate}" />

		<Style.Triggers>

			<!-- Modify the Template to show check boxes, but not for Separators. -->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding DisplayMode, RelativeSource={RelativeSource Self}}" Value="CheckBox" />
					<Condition Binding="{Binding Converter={x:Static shared:IsTypeConverter.Instance}, ConverterParameter={x:Type Separator}}" Value="False" />
				</MultiDataTrigger.Conditions>
				<Setter Property="Template" Value="{StaticResource CheckBoxControlTemplate}" />
			</MultiDataTrigger>

			<!-- Modify the ContentTemplate to show descriptions associated with enumeration values. -->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding UseDescriptionAttributes, RelativeSource={RelativeSource Self}}" Value="True" />
					<Condition Binding="{Binding Converter={x:Static shared:IsTypeConverter.Instance}, ConverterParameter={x:Type system:Enum}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<Setter Property="ContentTemplate">
					<Setter.Value>
						<DataTemplate>
							<TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
						</DataTemplate>
					</Setter.Value>
				</Setter>
			</MultiDataTrigger>
		</Style.Triggers>
	</Style>

	<!-- editors:EnumListBox -->
	<Style x:Key="{x:Type editors:EnumListBox}" TargetType="{x:Type editors:EnumListBox}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />

		<Setter Property="VerticalContentAlignment" Value="Center" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<shared:ElementChrome x:Name="chrome"
							Background="{TemplateBinding Background}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundDisabledBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderDisabledBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding="1" IsAnimationEnabled="False"
							BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.ListElementChromeBorderStyleKey}}"
							SnapsToDevicePixels="true">
						<ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</shared:ElementChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
