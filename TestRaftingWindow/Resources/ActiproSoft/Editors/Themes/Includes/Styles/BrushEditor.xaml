<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
		xmlns:editors="clr-namespace:ActiproSoftware.Windows.Controls.Editors;assembly=ActiproSoftware.Editors.Wpf"
		xmlns:editorsPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Editors.Primitives;assembly=ActiproSoftware.Editors.Wpf"
		xmlns:editorsThemes="clr-namespace:ActiproSoftware.Windows.Themes;assembly=ActiproSoftware.Editors.Wpf"
		xmlns:productsEditors="clr-namespace:ActiproSoftware.Products.Editors;assembly=ActiproSoftware.Editors.Wpf"
		xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
		mc:Ignorable="d" >

	<!-- Converters -->
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	<!-- Drawing Brushes -->
	<DrawingBrush x:Key="NoBrush" Stretch="Uniform">
		<DrawingBrush.Drawing>
			<DrawingGroup>
				<DrawingGroup.Children>
					<GeometryDrawing Geometry="F1 M 0,0 L 15,0 L 15,15 L 0,15 Z" Brush="White" />
					<GeometryDrawing Geometry="M 2,13 L 13,2">
						<GeometryDrawing.Pen>
							<Pen Thickness="1" Brush="Red" StartLineCap="Triangle" EndLineCap="Triangle" />
						</GeometryDrawing.Pen>
					</GeometryDrawing>
				</DrawingGroup.Children>
			</DrawingGroup>
		</DrawingBrush.Drawing>
	</DrawingBrush>

	<DrawingBrush x:Key="SolidBrush" Stretch="Uniform">
		<DrawingBrush.Drawing>
			<DrawingGroup>
				<DrawingGroup.Children>
					<GeometryDrawing Geometry="F1 M 0,0 L 15,0 L 15,15 L 0,15 Z" Brush="#AA888888">
						<GeometryDrawing.Pen>
							<Pen Thickness="2" Brush="#88000000" />
						</GeometryDrawing.Pen>
					</GeometryDrawing>
				</DrawingGroup.Children>
			</DrawingGroup>
		</DrawingBrush.Drawing>
	</DrawingBrush>

	<DrawingBrush x:Key="GradientBrush" Stretch="Uniform">
		<DrawingBrush.Drawing>
			<DrawingGroup>
				<DrawingGroup.Children>
					<GeometryDrawing Geometry="F1 M 0,0 L 15,0 L 15,15 L 0,15 Z">
						<GeometryDrawing.Brush>
							<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
								<GradientStop Color="Black" Offset="0" />
								<GradientStop Color="White" Offset="1" />
							</LinearGradientBrush>
						</GeometryDrawing.Brush>
						<GeometryDrawing.Pen>
							<Pen Thickness="2" Brush="#88000000" />
						</GeometryDrawing.Pen>
					</GeometryDrawing>
				</DrawingGroup.Children>
			</DrawingGroup>
		</DrawingBrush.Drawing>
	</DrawingBrush>

	<DrawingBrush x:Key="AddStopBrush" PresentationOptions:Freeze="True" Stretch="Uniform">
		<DrawingBrush.Drawing>
			<DrawingGroup>
				<DrawingGroup.Children>
					<GeometryDrawing Brush="Black"
							Geometry="F1 M 150,350L 150,250L 250,250L 250,150L 350,150L 350,250L 450,250L 450,350L 350,350L 350,450L 250,450L 250,350L 150,350 Z " />
				</DrawingGroup.Children>
			</DrawingGroup>
		</DrawingBrush.Drawing>
	</DrawingBrush>

	<!-- editorsPrimitives:BrushEditor -->
	<Style TargetType="editorsPrimitives:BrushEditor">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="editorsPrimitives:BrushEditor">
					<Grid Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<!-- Brush type toolbar -->
						<shared:AnimatedExpanderDecorator IsExpanded="{TemplateBinding AreEditModeButtonsVisible}">
							<Grid Margin="0,0,0,3">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>

								<RadioButton x:Name="PART_NoBrushRadioButton"
										Style="{DynamicResource {x:Static ToolBar.RadioButtonStyleKey}}" IsChecked="True"
										ToolTip="{productsEditors:SRExtension UIBrushEditorNoBrushToolTip}">
									<StackPanel Orientation="Horizontal">
										<Rectangle Width="16" Height="16" Fill="{StaticResource NoBrush}" />
										<TextBlock Margin="3,0,0,0" VerticalAlignment="Center"
												Text="{Binding ToolTip, ElementName=PART_NoBrushRadioButton}" />
									</StackPanel>
								</RadioButton>
								<RadioButton x:Name="PART_SolidColorBrushRadioButton" Grid.Column="1"
										Style="{DynamicResource {x:Static ToolBar.RadioButtonStyleKey}}" IsChecked="False"
										ToolTip="{productsEditors:SRExtension UIBrushEditorSolidColorBrushToolTip}">
									<StackPanel Orientation="Horizontal">
										<Rectangle Width="16" Height="16" Fill="{StaticResource SolidBrush}" />
										<TextBlock Margin="3,0,0,0" VerticalAlignment="Center"
												Text="{Binding ToolTip, ElementName=PART_SolidColorBrushRadioButton}" />
									</StackPanel>
								</RadioButton>
								<RadioButton x:Name="PART_GradientBrushRadioButton" Grid.Column="2"
										Style="{DynamicResource {x:Static ToolBar.RadioButtonStyleKey}}" IsChecked="False"
										ToolTip="{productsEditors:SRExtension UIBrushEditorGradientBrushToolTip}">
									<StackPanel Orientation="Horizontal">
										<Rectangle Width="16" Height="16" Fill="{StaticResource GradientBrush}" />
										<TextBlock Margin="3,0,0,0" VerticalAlignment="Center"
												Text="{Binding ToolTip, ElementName=PART_GradientBrushRadioButton}" />
									</StackPanel>
								</RadioButton>

								<Button Grid.Column="3" Margin="2" HorizontalAlignment="Right" VerticalAlignment="Top"
										Style="{DynamicResource {x:Static editorsThemes:EditorsResourceKeys.CloseButtonStyleKey}}"
										Visibility="{TemplateBinding IsCloseButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
							</Grid>
						</shared:AnimatedExpanderDecorator>

						<Grid x:Name="colorControlGrid" Grid.Row="1" Margin="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="6" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="3" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" MinWidth="60" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="3" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="3" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="3" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="3" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!-- 1/17/2012 - Updated to set SelectedColor directly instead of in trigger, as that seems to break when switching to NoBrush mode (30C-16A65877-0301) -->
							<shared:SpectrumColorPicker x:Name="colorPicker" Grid.RowSpan="9" Height="Auto" Width="Auto" IsColorSwatchRowVisible="False"
									MinWidth="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" DisabledOpacity="0.4"
									SelectedColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SolidColor, Mode=TwoWay}" />

							<!-- Red -->
							<TextBlock x:Name="redTextBlock" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" Text="R" />
							<shared:ColorComponentSlider x:Name="redSlider" Grid.Column="4" Margin="6,0" Component="Red" MinWidth="128"
									DisabledOpacity="0.4"
									SelectedColor="{Binding SelectedColor, ElementName=colorPicker, UpdateSourceTrigger=PropertyChanged}" />
							<editors:ColorEditBox x:Name="redEditBox" Grid.Column="5" ColorPreviewVisibility="Collapsed"
									DropDownButtonVisibility="Collapsed" SpinnerVisibility="Visible" EditableParts="Red" Format="r"
									Value="{Binding SelectedColor, ElementName=colorPicker, UpdateSourceTrigger=PropertyChanged}" />

							<!-- Green -->
							<TextBlock x:Name="greenTextBlock" Grid.Row="2" Grid.Column="2" HorizontalAlignment="Right"
									VerticalAlignment="Center" Text="G" />
							<shared:ColorComponentSlider x:Name="greenSlider" Grid.Row="2" Grid.Column="4" Margin="6,0" Component="Green"
									MinWidth="128" DisabledOpacity="0.4"
									SelectedColor="{Binding SelectedColor, ElementName=colorPicker, UpdateSourceTrigger=PropertyChanged}" />
							<editors:ColorEditBox x:Name="greenEditBox" Grid.Row="2" Grid.Column="5" ColorPreviewVisibility="Collapsed"
									DropDownButtonVisibility="Collapsed" SpinnerVisibility="Visible" EditableParts="Green" Format="g"
									Value="{Binding SelectedColor, ElementName=colorPicker, UpdateSourceTrigger=PropertyChanged}" />

							<!-- Blue -->
							<TextBlock x:Name="blueTextBlock" Grid.Row="4" Grid.Column="2" HorizontalAlignment="Right"
									VerticalAlignment="Center" Text="B" />
							<shared:ColorComponentSlider x:Name="blueSlider" Grid.Row="4" Grid.Column="4" Margin="6,0" Component="Blue"
									MinWidth="128" DisabledOpacity="0.4"
									SelectedColor="{Binding SelectedColor, ElementName=colorPicker, UpdateSourceTrigger=PropertyChanged}" />
							<editors:ColorEditBox x:Name="blueEditBox" Grid.Row="4" Grid.Column="5" ColorPreviewVisibility="Collapsed"
									DropDownButtonVisibility="Collapsed" SpinnerVisibility="Visible" EditableParts="Blue" Format="b"
									Value="{Binding SelectedColor, ElementName=colorPicker, UpdateSourceTrigger=PropertyChanged}" />

							<!-- Alpha -->
							<TextBlock x:Name="alphaTextBlock" Grid.Row="6" Grid.Column="2" HorizontalAlignment="Right"
									VerticalAlignment="Center" Text="A" />
							<shared:ColorComponentSlider x:Name="alphaSlider" Grid.Row="6" Grid.Column="4" Margin="6,0" Component="Alpha"
									MinWidth="128" DisabledOpacity="0.4"
									SelectedColor="{Binding SelectedColor, ElementName=colorPicker, UpdateSourceTrigger=PropertyChanged}" />
							<editors:ColorEditBox x:Name="alphaEditBox" Grid.Row="6" Grid.Column="5" ColorPreviewVisibility="Collapsed"
									DropDownButtonVisibility="Collapsed" SpinnerVisibility="Visible" EditableParts="Alpha" Format="ap"
									Value="{Binding SelectedColor, ElementName=colorPicker, UpdateSourceTrigger=PropertyChanged}" />

							<editors:ColorEditBox x:Name="colorEditBox" Grid.Row="9" VerticalAlignment="Bottom"
									DropDownButtonVisibility="Collapsed" EditableParts="All" Format="c"
									Value="{Binding SelectedColor, ElementName=colorPicker, UpdateSourceTrigger=PropertyChanged}" />

							<StackPanel x:Name="gradientTypeButtons" Grid.Row="10" Margin="0,3,3,0" Orientation="Horizontal"
									HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="Collapsed">
								<RadioButton x:Name="PART_HorizontalGradientBrushRadioButton" IsChecked="True"
										Style="{DynamicResource {x:Static ToolBar.RadioButtonStyleKey}}"
										ToolTip="{productsEditors:SRExtension UIBrushEditorHorizontalLinearGradientBrushToolTip}"
										GroupName="GradientBrushType">
									<Border Width="12" Height="12" BorderBrush="Black" BorderThickness="1">
										<Border.Background>
											<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
												<GradientStop Color="Black" Offset="0" />
												<GradientStop Color="White" Offset="1" />
											</LinearGradientBrush>
										</Border.Background>
									</Border>
								</RadioButton>
								<RadioButton x:Name="PART_VerticalGradientBrushRadioButton"
										Style="{DynamicResource {x:Static ToolBar.RadioButtonStyleKey}}" Margin="3,0,0,0"
										ToolTip="{productsEditors:SRExtension UIBrushEditorVerticalLinearGradientBrushToolTip}"
										GroupName="GradientBrushType">
									<Border Width="12" Height="12" BorderBrush="Black" BorderThickness="1">
										<Border.Background>
											<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
												<GradientStop Color="Black" Offset="0" />
												<GradientStop Color="White" Offset="1" />
											</LinearGradientBrush>
										</Border.Background>
									</Border>
								</RadioButton>
								<RadioButton x:Name="PART_RadialGradientBrushRadioButton"
										Style="{DynamicResource {x:Static ToolBar.RadioButtonStyleKey}}" Margin="3,0,0,0"
										ToolTip="{productsEditors:SRExtension UIBrushEditorRadialGradientBrushToolTip}"
										GroupName="GradientBrushType">
									<Border Width="12" Height="12" BorderBrush="Black" BorderThickness="1">
										<Border.Background>
											<RadialGradientBrush ColorInterpolationMode="ScRgbLinearInterpolation">
												<GradientStop Color="White" Offset="0" />
												<GradientStop Color="Black" Offset="1" />
											</RadialGradientBrush>
										</Border.Background>
									</Border>
								</RadioButton>
							</StackPanel>

							<shared:GradientBrushSlider x:Name="gradientBrushSlider" Grid.Row="10" Grid.Column="2" Grid.ColumnSpan="3"
									Margin="6,3,6,0" MinWidth="128" VerticalAlignment="Bottom" Visibility="Collapsed" />

							<StackPanel x:Name="gradientActionButtons" Grid.Row="10" Grid.Column="5" Margin="3,3,0,0"
									Orientation="Horizontal" VerticalAlignment="Center" Visibility="Collapsed">
								<Button Style="{DynamicResource {x:Static ToolBar.ButtonStyleKey}}"
										Command="{x:Static shared:GradientBrushSlider.AddStopCommand}"
										CommandTarget="{Binding ElementName=gradientBrushSlider}"
										ToolTip="{productsEditors:SRExtension UIBrushEditorAddGradientStopToolTip}">
									<Rectangle Height="12" Width="12" Fill="{StaticResource AddStopBrush}" />
								</Button>
							</StackPanel>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="EditMode" Value="NoBrush">
							<Setter TargetName="colorControlGrid" Property="IsEnabled" Value="False" />
						</Trigger>
						<Trigger Property="EditMode" Value="GradientBrush">
							<Setter TargetName="colorPicker" Property="SelectedColor"
									Value="{Binding ElementName=gradientBrushSlider, Path=SelectedStop.Color, Mode=TwoWay}" />
							<Setter TargetName="gradientBrushSlider" Property="SelectedBrush"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Brush, Mode=TwoWay}" />
							<Setter TargetName="gradientTypeButtons" Property="Visibility" Value="Visible" />
							<Setter TargetName="gradientBrushSlider" Property="Visibility" Value="Visible" />
							<Setter TargetName="gradientActionButtons" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="AllowGradientBrushes" Value="False">
							<Setter TargetName="PART_GradientBrushRadioButton" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsAlphaComponentEditable" Value="False">
							<Setter TargetName="alphaTextBlock" Property="IsEnabled" Value="False" />
							<Setter TargetName="alphaSlider" Property="IsEnabled" Value="False" />
							<Setter TargetName="alphaEditBox" Property="IsEnabled" Value="False" />
							<Setter TargetName="colorEditBox" Property="EditableParts" Value="ColorComponents" />
						</Trigger>
						<Trigger Property="IsAlphaComponentVisible" Value="False">
							<Setter TargetName="alphaTextBlock" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="alphaSlider" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="alphaEditBox" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="colorEditBox" Property="IsAlphaComponentVisible" Value="False" />
						</Trigger>
						<Trigger Property="AreColorComponentSlidersVisible" Value="False">
							<Setter TargetName="redSlider" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="greenSlider" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="blueSlider" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="alphaSlider" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="EditMode" Value="GradientBrush" />
								<Condition SourceName="gradientBrushSlider" Property="SelectedStop" Value="{x:Null}" />
							</MultiTrigger.Conditions>
							<Setter TargetName="colorPicker" Property="IsEnabled" Value="False" />
							<Setter TargetName="redTextBlock" Property="IsEnabled" Value="False" />
							<Setter TargetName="redSlider" Property="IsEnabled" Value="False" />
							<Setter TargetName="redEditBox" Property="IsEnabled" Value="False" />
							<Setter TargetName="greenTextBlock" Property="IsEnabled" Value="False" />
							<Setter TargetName="greenSlider" Property="IsEnabled" Value="False" />
							<Setter TargetName="greenEditBox" Property="IsEnabled" Value="False" />
							<Setter TargetName="blueTextBlock" Property="IsEnabled" Value="False" />
							<Setter TargetName="blueSlider" Property="IsEnabled" Value="False" />
							<Setter TargetName="blueEditBox" Property="IsEnabled" Value="False" />
							<Setter TargetName="alphaTextBlock" Property="IsEnabled" Value="False" />
							<Setter TargetName="alphaSlider" Property="IsEnabled" Value="False" />
							<Setter TargetName="alphaEditBox" Property="IsEnabled" Value="False" />
							<Setter TargetName="colorEditBox" Property="IsEnabled" Value="False" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
