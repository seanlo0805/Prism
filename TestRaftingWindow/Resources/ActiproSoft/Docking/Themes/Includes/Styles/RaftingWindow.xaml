<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:docking="clr-namespace:ActiproSoftware.Windows.Controls.Docking;assembly=ActiproSoftware.Docking.Wpf"
		xmlns:dockingPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Docking.Primitives;assembly=ActiproSoftware.Docking.Wpf"
		xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes">

	<!-- dockingPrimitives:RaftingWindow -->
	<Style x:Key="{x:Type dockingPrimitives:RaftingWindow}" TargetType="{x:Type dockingPrimitives:RaftingWindow}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.WorkspaceVeryDarkForegroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.RaftingWindowBorderInactiveBrushKey}}" />
		<Setter Property="BorderThickness" Value="4" />
		
		<Setter Property="MinHeight" Value="30" />
		<Setter Property="MinWidth" Value="123" />
		
		<!-- 4/2/2012 - Removed by default since allowing transparency will prevent ClearType from working by default
		<Setter Property="AllowsTransparency" Value="True" />
		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.RaftingWindowBorderNormalCornerRadiusKey}}" />
		-->
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type dockingPrimitives:RaftingWindow}">
					<docking:WindowControl x:Name="PART_WindowControl" WindowStyle="ToolWindow" HasTitleBar="False"
							themes:ThemeProperties.UseAlternateStyle="True"
							CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
							HasMaximizeButton="True" HasRestoreButton="True" Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
							Background="{DynamicResource {x:Static themes:AssetResourceKeys.WorkspaceVeryDarkBackgroundNormalBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" />
					
					<ControlTemplate.Triggers>
						<!-- 7/27/2010 - Added support for TitleBarVisibility -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="TitleBarVisibility" Value="Auto" />
								<Condition Property="HasSingleContainer" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_WindowControl" Property="HasTitleBar" Value="True" />
						</MultiTrigger>
						<Trigger Property="TitleBarVisibility" Value="Visible">
							<Setter TargetName="PART_WindowControl" Property="HasTitleBar" Value="True" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		
		<Style.Triggers>
			<Trigger Property="IsActive" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.RaftingWindowBorderActiveBrushKey}}" />
			</Trigger>
			<!-- 11/28/2011 - Need to ensure rafting windows support Interop content based on IsInteropCompatibilityEnabled (008-165FE776-BED5)
			     10/26/2012 - Commented out since the setter that set these on is no longer active and this setter causes an exception (related to AllowsTransparency) when system theme changes
			<Trigger Property="IsInteropCompatibilityEnabled" Value="True">
				<Setter Property="AllowsTransparency" Value="False" />
				<Setter Property="themes:ThemeProperties.CornerRadius" Value="0" />
			</Trigger>
			-->
		</Style.Triggers>
	</Style>

</ResourceDictionary>