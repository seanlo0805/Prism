<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:controls="clr-namespace:ActiproSoftware.Windows.Controls;assembly=ActiproSoftware.Shared.Wpf"
		xmlns:controlsPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Primitives;assembly=ActiproSoftware.Shared.Wpf"
		xmlns:themes="clr-namespace:ActiproSoftware.Windows.Themes;assembly=ActiproSoftware.Shared.Wpf"
		>
	
	<!-- Converters -->
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	<!-- HorizontalListBoxItemStyle -->
	<Style x:Key="HorizontalListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalCornerRadiusKey}}" />
		<Setter Property="themes:ThemeProperties.IsGlassEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListIsGlassEnabledBooleanKey}}" />

		<Setter Property="HorizontalContentAlignment"
				Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment"
				Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="2,0" />

		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Margin="1" StrokeThickness="1"
										Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" StrokeDashArray="1 2"
										SnapsToDevicePixels="true" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundHoverBrushKey}}"
							BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedFocusedBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderDisabledBrushKey}}"
							BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderHoverBrushKey}}"
							BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedFocusedBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}"
							InnerBorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalBrushKey}}"
							InnerBorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderDisabledBrushKey}}"
							InnerBorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderHoverBrushKey}}"
							InnerBorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedFocusedBrushKey}}"
							InnerBorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalThicknessKey}}"
							CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
							SnapsToDevicePixels="true">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="11" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<Rectangle x:Name="highlight"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(themes:ThemeProperties.IsGlassEnabled), Converter={StaticResource BooleanToVisibilityConverter}}" />
							<ContentPresenter Grid.RowSpan="2" Margin="{TemplateBinding Padding}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Grid>
					</controlsPrimitives:ElementChrome>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</MultiTrigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedFocusedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Focused" />
							<Setter TargetName="highlight" Property="Fill" Value="#40FFFFFF" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="InnerBorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsEnabled" Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
							<Setter TargetName="highlight" Property="Fill" Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- controls:HorizontalListBox -->
	<Style x:Key="{x:Type controls:HorizontalListBox}" TargetType="{x:Type controls:HorizontalListBox}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource HorizontalListBoxItemStyle}" />
		<Setter Property="Padding" Value="0" />

		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />

		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Rows="1" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:HorizontalListBox}">
					<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundDisabledBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderDisabledBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.ListElementChromeBorderStyleKey}}"
							Padding="{TemplateBinding Padding}"
							SnapsToDevicePixels="true">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</controlsPrimitives:ElementChrome>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>