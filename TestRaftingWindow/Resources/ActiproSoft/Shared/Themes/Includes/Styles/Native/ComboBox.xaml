<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:controls="clr-namespace:ActiproSoftware.Windows.Controls;assembly=ActiproSoftware.Shared.Wpf"
		xmlns:controlsPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Primitives;assembly=ActiproSoftware.Shared.Wpf"
		xmlns:themes="clr-namespace:ActiproSoftware.Windows.Themes;assembly=ActiproSoftware.Shared.Wpf"
		>

	<!-- Converters -->
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	<!-- Geometries -->
	<Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

	<!-- themes:SharedResourceKeys.ComboBoxItemStyleKey -->
	<Style x:Key="{x:Static themes:SharedResourceKeys.ComboBoxItemStyleKey}" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalCornerRadiusKey}}" />
		<Setter Property="themes:ThemeProperties.IsGlassEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListIsGlassEnabledBooleanKey}}" />

		<Setter Property="HorizontalContentAlignment"
				Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment"
				Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

		<Setter Property="Margin" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemMarginNormalThicknessKey}}" />
		<Setter Property="Padding" Value="3,0" />

		<Setter Property="FocusVisualStyle" Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundDisabledBrushKey}}"
							BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedFocusedBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderDisabledBrushKey}}"
							BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedFocusedBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}"
							InnerBorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalBrushKey}}"
							InnerBorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderDisabledBrushKey}}"
							InnerBorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedFocusedBrushKey}}"
							InnerBorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalThicknessKey}}"
							CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}" SnapsToDevicePixels="true">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="11" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<Rectangle x:Name="highlight"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(themes:ThemeProperties.IsGlassEnabled), Converter={StaticResource BooleanToVisibilityConverter}}" />
							<ContentPresenter Grid.RowSpan="2" Margin="{TemplateBinding Padding}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Grid>
					</controlsPrimitives:ElementChrome>

					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedFocusedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Focused" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
							<Setter TargetName="highlight" Property="Fill" Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ComboBoxFocusVisualKey -->
	<Style x:Key="ComboBoxFocusVisualKey">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="4,4,21,4" StrokeThickness="1"
							Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" StrokeDashArray="1 2"
							SnapsToDevicePixels="true" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ComboBoxEditableTextBoxKey -->
	<Style x:Key="ComboBoxEditableTextBoxKey" TargetType="{x:Type TextBox}">
		<Setter Property="CaretBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditCaretBackgroundNormalBrushKey}}" />
		
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="MinHeight" Value="0" />

		<Setter Property="AllowDrop" Value="true" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />

		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
							Background="Transparent" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ComboBoxTransparentButtonStyleKey -->
	<Style x:Key="ComboBoxTransparentButtonStyleKey" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true" />

		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBorderNormalThicknessKey}}" />

		<Setter Property="MinWidth" Value="0" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="Width" Value="Auto" />
		<Setter Property="Height" Value="Auto" />

		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="ClickMode" Value="Press" />

		<Setter Property="themes:ThemeProperties.IsAnimationEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonIsAnimationEnabledBooleanKey}}" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
						</Grid.ColumnDefinitions>
						<Decorator Grid.Column="1" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
								Margin="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownMarginNormalThicknessKey}}">
							<controlsPrimitives:ScrollChrome x:Name="chrome" Background="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBackgroundNormalBrushKey}}"
									BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBackgroundDisabledBrushKey}}"
									BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBackgroundHoverBrushKey}}"
									BackgroundPressed="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBackgroundPressedBrushKey}}" BorderBrush="{TemplateBinding BorderBrush}"
									BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBorderDisabledBrushKey}}"
									BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBorderHoverBrushKey}}"
									BorderBrushPressed="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBorderPressedBrushKey}}" BorderThickness="{TemplateBinding BorderThickness}"
									GlyphBackground="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphBackgroundNormalBrushKey}}"
									GlyphBackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphBackgroundDisabledBrushKey}}"
									GlyphBackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphBackgroundHoverBrushKey}}"
									GlyphBackgroundPressed="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphBackgroundPressedBrushKey}}"
									InnerBorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownInnerBorderNormalBrushKey}}"
									InnerBorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownInnerBorderDisabledBrushKey}}"
									InnerBorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownInnerBorderHoverBrushKey}}"
									InnerBorderBrushPressed="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownInnerBorderPressedBrushKey}}" InnerBorderThickness="1"
									IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
									BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownElementChromeBorderStyleKey}}"
									CornerRadius="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownBorderNormalCornerRadiusKey}}"
									UseAlternateGeometry="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphUseAlternateGeometryBooleanKey}}" Glyph="DropDownArrow"
									Margin="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownChromeMarginNormalThicknessKey}}" SnapsToDevicePixels="true" />
						</Decorator>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Pressed" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ComboBoxReadonlyToggleButtonKey -->
	<Style x:Key="ComboBoxReadonlyToggleButtonKey" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true" />

		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="ClickMode" Value="Press" />

		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderNormalCornerRadiusKey}}" />
		<Setter Property="themes:ThemeProperties.IsAnimationEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonIsAnimationEnabledBooleanKey}}" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundDefaulted="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBackgroundDefaultedBrushKey}}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBackgroundDisabledBrushKey}}"
							BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBackgroundHoverBrushKey}}"
							BackgroundPressed="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBackgroundPressedBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDefaulted="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderDefaultedBrushKey}}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderDisabledBrushKey}}"
							BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderHoverBrushKey}}"
							BorderBrushPressed="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderPressedBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Highlight="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonHighlightNormalBrushKey}}"
							HighlightDefaulted="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonHighlightDefaultedBrushKey}}"
							HighlightDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonHighlightDisabledBrushKey}}"
							HighlightHover="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonHighlightHoverBrushKey}}"
							HighlightPressed="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonHighlightPressedBrushKey}}"
							InnerBorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonInnerBorderNormalBrushKey}}"
							InnerBorderBrushDefaulted="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonInnerBorderDefaultedBrushKey}}"
							InnerBorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonInnerBorderDisabledBrushKey}}"
							InnerBorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonInnerBorderHoverBrushKey}}"
							InnerBorderBrushPressed="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonInnerBorderPressedBrushKey}}"
							InnerBorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonInnerBorderNormalThicknessKey}}"
							IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
							BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonElementChromeBorderStyleKey}}" 
							CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
							SnapsToDevicePixels="true">
						<Grid Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" HorizontalAlignment="Right">
							<Path x:Name="arrow" Margin="3,1,0,0" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphBackgroundNormalBrushKey}}"
								  Data="{StaticResource DownArrowGeometry}" HorizontalAlignment="Center" VerticalAlignment="Center" />
						</Grid>
					</controlsPrimitives:ElementChrome>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonForegroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonForegroundPressedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Pressed" />
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonForegroundPressedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Pressed" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="arrow" Property="Fill"
									Value="{DynamicResource {x:Static themes:AssetResourceKeys.DropDownGlyphBackgroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ComboBoxDefaultTemplateKey -->
	<ControlTemplate x:Key="ComboBoxDefaultTemplateKey" TargetType="{x:Type ComboBox}">
		<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
			</Grid.ColumnDefinitions>
			<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Placement="Bottom" Margin="1"
					IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
					PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<controls:DropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}"
						MaxHeight="{TemplateBinding MaxDropDownHeight}">
					<Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}"
							BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}"
							BorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalThicknessKey}}">
						<ScrollViewer x:Name="dropDownScrollViewer">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
									<Rectangle x:Name="OpaqueRect" Height="{Binding ElementName=dropDownBorder,Path=ActualHeight}"
											Width="{Binding ElementName=dropDownBorder,Path=ActualWidth}"
											Fill="{Binding ElementName=dropDownBorder,Path=Background}" />
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
					</Border>
				</controls:DropShadowChrome>
			</Popup>
			<ToggleButton Grid.ColumnSpan="2" Style="{StaticResource ComboBoxReadonlyToggleButtonKey}"
					IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
			<Grid Margin="{TemplateBinding Padding}">
				<ContentPresenter IsHitTestVisible="false" Margin="3,2,1,2" Content="{TemplateBinding SelectionBoxItem}"
						ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
						ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<ContentPresenter x:Name="hint" Margin="3,2,1,2" VerticalAlignment="Center" IsHitTestVisible="False"
						Content="{TemplateBinding controls:HintProperties.Hint}" ContentTemplate="{TemplateBinding controls:HintProperties.HintTemplate}"
						ContentTemplateSelector="{TemplateBinding controls:HintProperties.HintTemplateSelector}" Opacity="0.67" Visibility="Collapsed"
						TextBlock.Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
			</Grid>
		</Grid>

		<ControlTemplate.Triggers>
			<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
				<Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
				<Setter TargetName="shadow" Property="Color" Value="#71000000" />
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter TargetName="dropDownBorder" Property="Height" Value="95" />
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
			</Trigger>
			<Trigger SourceName="dropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
				<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=dropDownScrollViewer, Path=VerticalOffset}" />
				<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=dropDownScrollViewer, Path=HorizontalOffset}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
			</Trigger>

			<!-- Hint related triggers -->
			<Trigger Property="controls:HintProperties.HasHint" Value="True">
				<Setter TargetName="hint" Property="Visibility" Value="Visible" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="controls:HintProperties.HasContent" Value="False" />
					<Condition Property="IsKeyboardFocusWithin" Value="True" />
				</MultiTrigger.Conditions>
				<MultiTrigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" To=".33" Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</MultiTrigger.EnterActions>
				<MultiTrigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" />
						</Storyboard>
					</BeginStoryboard>
				</MultiTrigger.ExitActions>
			</MultiTrigger>
			<Trigger Property="controls:HintProperties.HasContent" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- ComboBoxDefaultAlternateTemplateKey -->
	<ControlTemplate x:Key="ComboBoxDefaultAlternateTemplateKey" TargetType="{x:Type ComboBox}">
		<Grid SnapsToDevicePixels="true">
			<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
					BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
					BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
					BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
					BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
					BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
					BorderThickness="{TemplateBinding BorderThickness}"
					IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
					BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
					CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
					SnapsToDevicePixels="true">
				<Grid Grid.IsSharedSizeScope="true">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
					</Grid.ColumnDefinitions>
					<Grid Margin="{TemplateBinding Padding}">
						<Border x:Name="selectedItemBorder" Margin="1" />
						<ContentPresenter Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
								ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
								ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" Margin="3,1,1,1"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<ContentPresenter x:Name="hint" Margin="3,1,1,1" VerticalAlignment="Center" IsHitTestVisible="False"
								Content="{TemplateBinding controls:HintProperties.Hint}"
								ContentTemplate="{TemplateBinding controls:HintProperties.HintTemplate}"
								ContentTemplateSelector="{TemplateBinding controls:HintProperties.HintTemplateSelector}" Opacity="0.67" Visibility="Collapsed"
								TextBlock.Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
					</Grid>
					<ToggleButton Grid.ColumnSpan="2" Style="{StaticResource ComboBoxTransparentButtonStyleKey}"
							IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
				</Grid>
			</controlsPrimitives:ElementChrome>
			<Popup x:Name="PART_Popup" AllowsTransparency="true" Placement="Bottom"
					IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}" Focusable="false"
					PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<controls:DropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{TemplateBinding ActualWidth}"
						MaxHeight="{TemplateBinding MaxDropDownHeight}">
					<Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}"
							BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}"
							BorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalThicknessKey}}">
						<ScrollViewer x:Name="dropDownScrollViewer">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
									<Rectangle x:Name="opaqueRect" Height="{Binding ElementName=dropDownBorder,Path=ActualHeight}"
											Width="{Binding ElementName=dropDownBorder,Path=ActualWidth}"
											Fill="{Binding ElementName=dropDownBorder,Path=Background}" />
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
					</Border>
				</controls:DropShadowChrome>
			</Popup>
		</Grid>

		<ControlTemplate.Triggers>
			<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
				<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
				<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
			</Trigger>
			<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
				<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
				<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
				<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
					<Condition Property="BorderBrush" Value="Transparent" />
				</MultiTrigger.Conditions>
				<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelectionBoxHighlighted" Value="true" />
					<Condition Property="IsDropDownOpen" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditSelectionForegroundFocusedBrushKey}}" />
			</MultiTrigger>
			<Trigger Property="IsSelectionBoxHighlighted" Value="true">
				<Setter TargetName="selectedItemBorder" Property="Background"
						Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditSelectionBackgroundFocusedBrushKey}}" />
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter TargetName="dropDownBorder" Property="MinHeight" Value="95" />
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
			</Trigger>
			<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
				<Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
				<Setter TargetName="shadow" Property="Color" Value="#71000000" />
			</Trigger>
			<Trigger SourceName="dropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
				<Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding ElementName=dropDownScrollViewer, Path=VerticalOffset}" />
				<Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding ElementName=dropDownScrollViewer, Path=HorizontalOffset}" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="chrome" Property="State" Value="Hover" />
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" Value="true">
				<Setter TargetName="chrome" Property="State" Value="Focused" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
				<Setter TargetName="chrome" Property="State" Value="Disabled" />
			</Trigger>
			
			<!-- Hint related triggers -->
			<Trigger Property="controls:HintProperties.HasHint" Value="True">
				<Setter TargetName="hint" Property="Visibility" Value="Visible" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="controls:HintProperties.HasContent" Value="False" />
					<Condition Property="IsKeyboardFocusWithin" Value="True" />
				</MultiTrigger.Conditions>
				<MultiTrigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" To=".33" Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</MultiTrigger.EnterActions>
				<MultiTrigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" />
						</Storyboard>
					</BeginStoryboard>
				</MultiTrigger.ExitActions>
			</MultiTrigger>
			<Trigger Property="controls:HintProperties.HasContent" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- ComboBoxEditableTemplateKey -->
	<ControlTemplate x:Key="ComboBoxEditableTemplateKey" TargetType="{x:Type ComboBox}">
		<Grid SnapsToDevicePixels="true">
			<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
					BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
					BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
					BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
					BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
					BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
					BorderThickness="{TemplateBinding BorderThickness}"
					IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
					BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
					CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
					SnapsToDevicePixels="true">
				<Grid Grid.IsSharedSizeScope="true">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
					</Grid.ColumnDefinitions>
					<Grid Margin="{TemplateBinding Padding}">
						<TextBox x:Name="PART_EditableTextBox" Style="{StaticResource ComboBoxEditableTextBoxKey}"
								IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}" Margin="1"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
						<ContentPresenter x:Name="hint" Margin="1" VerticalAlignment="Center" IsHitTestVisible="False"
								Content="{TemplateBinding controls:HintProperties.Hint}"
								ContentTemplate="{TemplateBinding controls:HintProperties.HintTemplate}"
								ContentTemplateSelector="{TemplateBinding controls:HintProperties.HintTemplateSelector}" Opacity="0.67" Visibility="Collapsed"
								TextBlock.Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
					</Grid>
					<ToggleButton Background="{x:Null}" Grid.ColumnSpan="2" Style="{StaticResource ComboBoxTransparentButtonStyleKey}"
							IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />
				</Grid>
			</controlsPrimitives:ElementChrome>
			<Popup x:Name="PART_Popup" AllowsTransparency="true" Placement="Bottom"
					IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}" Focusable="false"
					PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<controls:DropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{TemplateBinding ActualWidth}"
						MaxHeight="{TemplateBinding MaxDropDownHeight}">
					<Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}"
							BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}"
							BorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalThicknessKey}}">
						<ScrollViewer x:Name="dropDownScrollViewer">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
									<Rectangle x:Name="opaqueRect" Height="{Binding ElementName=dropDownBorder,Path=ActualHeight}"
											Width="{Binding ElementName=dropDownBorder,Path=ActualWidth}"
											Fill="{Binding ElementName=dropDownBorder,Path=Background}" />
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
					</Border>
				</controls:DropShadowChrome>
			</Popup>
		</Grid>

		<ControlTemplate.Triggers>
			<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
				<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
				<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
			</Trigger>
			<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
				<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
				<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
				<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
					<Condition Property="BorderBrush" Value="Transparent" />
				</MultiTrigger.Conditions>
				<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
			</MultiTrigger>
			<Trigger Property="HasItems" Value="false">
				<Setter TargetName="dropDownBorder" Property="MinHeight" Value="95" />
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
			</Trigger>
			<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
				<Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
				<Setter TargetName="shadow" Property="Color" Value="#71000000" />
			</Trigger>
			<Trigger SourceName="dropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
				<Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding ElementName=dropDownScrollViewer, Path=VerticalOffset}" />
				<Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding ElementName=dropDownScrollViewer, Path=HorizontalOffset}" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="chrome" Property="State" Value="Hover" />
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" Value="true">
				<Setter TargetName="chrome" Property="State" Value="Focused" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
				<Setter TargetName="chrome" Property="State" Value="Disabled" />
			</Trigger>

			<!-- Hint related triggers -->
			<Trigger Property="controls:HintProperties.HasHint" Value="True">
				<Setter TargetName="hint" Property="Visibility" Value="Visible" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="controls:HintProperties.HasContent" Value="False" />
					<Condition Property="IsKeyboardFocusWithin" Value="True" />
				</MultiTrigger.Conditions>
				<MultiTrigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" To=".33" Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</MultiTrigger.EnterActions>
				<MultiTrigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" />
						</Storyboard>
					</BeginStoryboard>
				</MultiTrigger.ExitActions>
			</MultiTrigger>
			<Trigger Property="controls:HintProperties.HasContent" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- themes:SharedResourceKeys.ComboBoxStyleKey -->
	<Style x:Key="{x:Static themes:SharedResourceKeys.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="Padding" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBoxEditPaddingNormalThicknessKey}}" />
		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalCornerRadiusKey}}" />

		<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisualKey}" />

		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		
		<Setter Property="VerticalContentAlignment" Value="Center" />
		
		<Setter Property="themes:ThemeProperties.IsAnimationEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditIsAnimationEnabledBooleanKey}}" />
		<Setter Property="themes:ThemeProperties.UseAlternateStyle" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ComboBoxUseAlternateStyleBooleanKey}}" />
		
		<Setter Property="Template" Value="{StaticResource ComboBoxDefaultTemplateKey}" />

		<Style.Triggers>
			<Trigger Property="themes:ThemeProperties.UseAlternateStyle" Value="true">
				<Setter Property="Template" Value="{StaticResource ComboBoxDefaultAlternateTemplateKey}" />
			</Trigger>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="IsTabStop" Value="false" />
				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplateKey}" />
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>
