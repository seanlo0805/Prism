<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:controls="clr-namespace:ActiproSoftware.Windows.Controls;assembly=ActiproSoftware.Shared.Wpf"
		xmlns:controlsPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Primitives;assembly=ActiproSoftware.Shared.Wpf"
		xmlns:themes="clr-namespace:ActiproSoftware.Windows.Themes;assembly=ActiproSoftware.Shared.Wpf"
		>

	<!-- Converters -->
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	<!--
	
	LISTBOX
	
	-->

	<!-- themes:SharedResourceKeys.ListBoxItemStyleKey -->
	<Style x:Key="{x:Static themes:SharedResourceKeys.ListBoxItemStyleKey}" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalCornerRadiusKey}}" />
		<Setter Property="themes:ThemeProperties.IsGlassEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListIsGlassEnabledBooleanKey}}" />

		<Setter Property="HorizontalContentAlignment"
				Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment"
				Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

		<Setter Property="Margin" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemMarginNormalThicknessKey}}" />
		<Setter Property="Padding" Value="2,0,0,0" />

		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Margin="1" StrokeThickness="1"
										Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" StrokeDashArray="1 2"
										SnapsToDevicePixels="true" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundHoverBrushKey}}"
							BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedFocusedBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderDisabledBrushKey}}"
							BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderHoverBrushKey}}"
							BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedFocusedBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}"
							InnerBorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalBrushKey}}"
							InnerBorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderDisabledBrushKey}}"
							InnerBorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderHoverBrushKey}}"
							InnerBorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedFocusedBrushKey}}"
							InnerBorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalThicknessKey}}"
							CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
							SnapsToDevicePixels="true">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="11" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<Rectangle x:Name="highlight"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(themes:ThemeProperties.IsGlassEnabled), Converter={StaticResource BooleanToVisibilityConverter}}" />
							<ContentPresenter Grid.RowSpan="2" Margin="{TemplateBinding Padding}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Grid>
					</controlsPrimitives:ElementChrome>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="InnerBorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="false" />
								<Condition Property="IsSelected" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedFocusedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Focused" />
							<Setter TargetName="highlight" Property="Fill" Value="#40FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="Selector.IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedNormalBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedNormalBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedNormalBrushKey}}" />
							<Setter TargetName="chrome" Property="InnerBorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedNormalBrushKey}}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsEnabled" Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundDisabledBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
							<Setter TargetName="highlight" Property="Fill" Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- themes:SharedResourceKeys.ListBoxStyleKey -->
	<Style x:Key="{x:Static themes:SharedResourceKeys.ListBoxStyleKey}" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />

		<Setter Property="VerticalContentAlignment" Value="Center" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundDisabledBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderDisabledBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}" Padding="1"
							BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.ListElementChromeBorderStyleKey}}"
							SnapsToDevicePixels="true">
						<ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</controlsPrimitives:ElementChrome>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--
	
	LISTVIEW
	
	-->

	<!-- GridViewColumnHeaderGripper -->
	<Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
		<Setter Property="Background" Value="Transparent" />

		<Setter Property="Canvas.Right" Value="-5" />
		<Setter Property="Width" Value="10" />
		<Setter Property="Height" Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}" Background="Transparent">
						<Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- themes:SharedResourceKeys.GridViewColumnHeaderStyleKey -->
	<Style x:Key="{x:Static themes:SharedResourceKeys.GridViewColumnHeaderStyleKey}" TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderForegroundNormalBrushKey}}" />

		<Setter Property="themes:ThemeProperties.IsGlassEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListIsGlassEnabledBooleanKey}}" />

		<Setter Property="Padding" Value="3,1" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="SnapsToDevicePixels" Value="True" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
					<Grid SnapsToDevicePixels="true">
						<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderBackgroundDisabledBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderBackgroundSelectedNormalBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderBackgroundHoverBrushKey}}"
								BackgroundPressed="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderBackgroundPressedBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderBorderDisabledBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderBorderSelectedNormalBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderBorderHoverBrushKey}}"
								BorderBrushPressed="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderBorderPressedBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}" 
								BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderElementChromeBorderStyleKey}}"
								SnapsToDevicePixels="true">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition MaxHeight="7" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Rectangle x:Name="highlight"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(themes:ThemeProperties.IsGlassEnabled), Converter={StaticResource BooleanToVisibilityConverter}}" />
								<Border Grid.RowSpan="2" Padding="{TemplateBinding Padding}">
									<ContentPresenter x:Name="headerContent" Margin="0,0,0,1"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</Border>
							</Grid>
						</controlsPrimitives:ElementChrome>
						<Canvas>
							<Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" />
						</Canvas>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
							<Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Pressed" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
							<Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden" />
							<Setter TargetName="headerContent" Property="Margin" Value="1,1,0,0" />
						</Trigger>
						<Trigger Property="Height" Value="Auto">
							<Setter Property="MinHeight" Value="20" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
							<Setter TargetName="highlight" Property="Fill" Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="Role" Value="Floating">
				<Setter Property="Opacity" Value="0.4082" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
							<Canvas x:Name="PART_FloatingHeaderCanvas">
								<Rectangle Opacity="0.4697" Fill="#FF000000" Width="{TemplateBinding ActualWidth}"
										Height="{TemplateBinding ActualHeight}" />
							</Canvas>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role" Value="Padding">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
							<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}" 
									BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.ListColumnHeaderElementChromeBorderStyleKey}}"
									SnapsToDevicePixels="true" />

							<ControlTemplate.Triggers>
								<Trigger Property="Height" Value="Auto">
									<Setter Property="MinHeight" Value="20" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- themes:SharedResourceKeys.GridViewEmbeddedScrollViewerStyleKey -->
	<Style x:Key="{x:Static themes:SharedResourceKeys.GridViewEmbeddedScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
		<Setter Property="Focusable" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<DockPanel Margin="{TemplateBinding Padding}">
							<ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="false">
								<GridViewHeaderRowPresenter
										Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
										ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
										ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
										ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
										ColumnHeaderStringFormat="{Binding Path=TemplatedParent.View.ColumnHeaderStringFormat,RelativeSource={RelativeSource TemplatedParent}}"
										AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
										ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
										ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
							<ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local"
									Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
									CanContentScroll="{TemplateBinding CanContentScroll}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</DockPanel>
						<ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Minimum="0.0"
								Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}"
								Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" />
						<ScrollBar Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Column="1" Minimum="0.0"
								Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}"
								Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
								Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" />

						<!-- Corner -->
						<Rectangle x:Name="corner" Grid.Column="1" Grid.Row="1"
								Fill="{DynamicResource {x:Static themes:AssetResourceKeys.ScrollViewerSpacerBackgroundNormalBrushKey}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- themes:SharedResourceKeys.ListViewItemStyleKey -->
	<Style x:Key="{x:Static themes:SharedResourceKeys.ListViewItemStyleKey}" TargetType="{x:Type ListViewItem}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalCornerRadiusKey}}" />
		<Setter Property="themes:ThemeProperties.IsGlassEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListIsGlassEnabledBooleanKey}}" />

		<Setter Property="HorizontalContentAlignment"
				Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment"
				Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

		<Setter Property="Margin" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemMarginNormalThicknessKey}}" />
		<Setter Property="Padding" Value="2,0,0,0" />

		<Setter Property="FocusVisualStyle" Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundDisabledBrushKey}}"
							BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundHoverBrushKey}}"
							BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedFocusedBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderDisabledBrushKey}}"
							BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderHoverBrushKey}}"
							BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedFocusedBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}"
							InnerBorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalBrushKey}}"
							InnerBorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderDisabledBrushKey}}"
							InnerBorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderHoverBrushKey}}"
							InnerBorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedFocusedBrushKey}}"
							InnerBorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalThicknessKey}}"
							CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
							SnapsToDevicePixels="true">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="11" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<Rectangle x:Name="highlight"
									Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(themes:ThemeProperties.IsGlassEnabled), Converter={StaticResource BooleanToVisibilityConverter}}" />
							<GridViewRowPresenter Grid.RowSpan="2" Margin="{TemplateBinding Padding}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Grid>
					</controlsPrimitives:ElementChrome>

					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="InnerBorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="false" />
								<Condition Property="IsSelected" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedFocusedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Focused" />
							<Setter TargetName="highlight" Property="Fill" Value="#40FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="Selector.IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedNormalBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedNormalBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedNormalBrushKey}}" />
							<Setter TargetName="chrome" Property="InnerBorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedNormalBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
							<Setter TargetName="highlight" Property="Fill" Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- themes:SharedResourceKeys.ListViewStyleKey -->
	<Style x:Key="{x:Static themes:SharedResourceKeys.ListViewStyleKey}" TargetType="{x:Type ListView}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />

		<Setter Property="VerticalContentAlignment" Value="Center" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
					<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundDisabledBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderDisabledBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}" 
							BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.ListElementChromeBorderStyleKey}}" SnapsToDevicePixels="true">
						<ScrollViewer Style="{DynamicResource {x:Static themes:SharedResourceKeys.GridViewEmbeddedScrollViewerStyleKey}}"
								Padding="{TemplateBinding Padding}" Focusable="False">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</controlsPrimitives:ElementChrome>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!--
	
	TREEVIEW
	
	-->

	<!-- themes:SharedResourceKeys.TreeViewItemStyleKey -->
	<Style x:Key="{x:Static themes:SharedResourceKeys.TreeViewItemStyleKey}" TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderNormalCornerRadiusKey}}" />
		<Setter Property="themes:ThemeProperties.IsGlassEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListIsGlassEnabledBooleanKey}}" />

		<Setter Property="HorizontalContentAlignment"
				Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment"
				Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

		<Setter Property="Margin" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemMarginNormalThicknessKey}}" />
		<Setter Property="Padding" Value="1,0" />

		<Setter Property="FocusVisualStyle" Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="19" Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>
						<ToggleButton x:Name="expander" Style="{DynamicResource {x:Static themes:SharedResourceKeys.ToggleButtonExpansionStyleKey}}"
								IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
						<controlsPrimitives:ElementChrome x:Name="chrome" Grid.Column="1" Background="{TemplateBinding Background}"
								BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundDisabledBrushKey}}"
								BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundHoverBrushKey}}"
								BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedFocusedBrushKey}}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderDisabledBrushKey}}"
								BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderHoverBrushKey}}"
								BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedFocusedBrushKey}}"
								BorderThickness="{TemplateBinding BorderThickness}"
								InnerBorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalBrushKey}}"
								InnerBorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderDisabledBrushKey}}"
								InnerBorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderHoverBrushKey}}"
								InnerBorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedFocusedBrushKey}}"
								InnerBorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderNormalThicknessKey}}"
								Padding="{TemplateBinding Padding}" CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
								SnapsToDevicePixels="true">
							<Grid x:Name="PART_Header" Background="Transparent">
								<Grid.RowDefinitions>
									<RowDefinition MaxHeight="11" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Rectangle x:Name="highlight"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(themes:ThemeProperties.IsGlassEnabled), Converter={StaticResource BooleanToVisibilityConverter}}" />
								<controls:PixelSnapper Grid.RowSpan="2">
									<ContentPresenter ContentSource="Header"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</controls:PixelSnapper>
							</Grid>
						</controlsPrimitives:ElementChrome>
						<ItemsPresenter x:Name="itemsPresenter" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" />
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="itemsPresenter" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="expander" Property="Visibility" Value="Hidden" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition SourceName="PART_Header" Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition SourceName="PART_Header" Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="InnerBorderBrushHover" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedHoverBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Hover" />
							<Setter TargetName="highlight" Property="Fill" Value="#75FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition SourceName="PART_Header" Property="IsMouseOver" Value="false" />
								<Condition Property="IsSelected" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedFocusedBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Focused" />
							<Setter TargetName="highlight" Property="Fill" Value="#40FFFFFF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition SourceName="PART_Header" Property="IsMouseOver" Value="false" />
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemForegroundSelectedNormalBrushKey}}" />
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBackgroundSelectedNormalBrushKey}}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemBorderSelectedNormalBrushKey}}" />
							<Setter TargetName="chrome" Property="InnerBorderBrushFocused" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListItemInnerBorderSelectedNormalBrushKey}}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
							<Setter TargetName="highlight" Property="Fill" Value="{x:Null}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- themes:SharedResourceKeys.TreeViewStyleKey -->
	<Style x:Key="{x:Static themes:SharedResourceKeys.TreeViewStyleKey}" TargetType="{x:Type TreeView}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />

		<Setter Property="Padding" Value="1" />
		<Setter Property="VerticalContentAlignment" Value="Center" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeView}">
					<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundDisabledBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.ListBorderDisabledBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}" 
							BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.ListElementChromeBorderStyleKey}}"
							SnapsToDevicePixels="true">
						<ScrollViewer x:Name="scrollViewer" Padding="{TemplateBinding Padding}" Focusable="false" CanContentScroll="false">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</controlsPrimitives:ElementChrome>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
							<Setter TargetName="scrollViewer" Property="CanContentScroll" Value="true" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>
