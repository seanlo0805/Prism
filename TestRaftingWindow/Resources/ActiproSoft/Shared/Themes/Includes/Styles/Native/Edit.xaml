<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:controls="clr-namespace:ActiproSoftware.Windows.Controls;assembly=ActiproSoftware.Shared.Wpf"
		xmlns:controlsPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Primitives;assembly=ActiproSoftware.Shared.Wpf"
		xmlns:data="clr-namespace:ActiproSoftware.Windows.Data;assembly=ActiproSoftware.Shared.Wpf"
		xmlns:themes="clr-namespace:ActiproSoftware.Windows.Themes;assembly=ActiproSoftware.Shared.Wpf">

	<!-- themes:SharedResourceKeys.TextBoxBaseStyleKey -->
	<Style x:Key="{x:Static themes:SharedResourceKeys.TextBoxBaseStyleKey}" TargetType="{x:Type TextBoxBase}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />
		<Setter Property="CaretBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditCaretBackgroundNormalBrushKey}}" />

		<Setter Property="Padding" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditPaddingNormalThicknessKey}}" />
		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalCornerRadiusKey}}" />

		<Setter Property="themes:ThemeProperties.IsAnimationEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditIsAnimationEnabledBooleanKey}}" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">
					<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
							BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
							BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
							BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
							BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
							BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.EditElementChromeBorderStyleKey}}" 
							CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
							SnapsToDevicePixels="true">
						<Grid>
							<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<ContentPresenter x:Name="hint" Margin="4,0" VerticalAlignment="Center" IsHitTestVisible="False"
									Content="{TemplateBinding controls:HintProperties.Hint}"
									ContentTemplate="{TemplateBinding controls:HintProperties.HintTemplate}"
									ContentTemplateSelector="{TemplateBinding controls:HintProperties.HintTemplateSelector}" Opacity="0.67"
									Visibility="Collapsed"
									TextBlock.Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
						</Grid>
					</controlsPrimitives:ElementChrome>

					<ControlTemplate.Triggers>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground"
									Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>
						
						<!-- Hint related triggers -->
						<Trigger Property="controls:HintProperties.HasHint" Value="True">
							<Setter TargetName="hint" Property="Visibility" Value="Visible" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="controls:HintProperties.HasContent" Value="False" />
								<Condition Property="IsKeyboardFocusWithin" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" To=".33" Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<Trigger Property="controls:HintProperties.HasContent" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- themes:SharedResourceKeys.PasswordBoxStyleKey -->
	<!-- NOTE: Style adapted from themes:SharedResourceKeys.TextBoxStyleKey (above) -->
	<Style x:Key="{x:Static themes:SharedResourceKeys.PasswordBoxStyleKey}" TargetType="{x:Type PasswordBox}">
		<Setter Property="OverridesDefaultStyle" Value="True" />

		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalBrushKey}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalThicknessKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="Padding" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditPaddingNormalThicknessKey}}" />
		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalCornerRadiusKey}}" />

		<Setter Property="themes:ThemeProperties.IsAnimationEnabled" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditIsAnimationEnabledBooleanKey}}" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<controlsPrimitives:ElementChrome x:Name="chrome" Background="{TemplateBinding Background}"
							BackgroundDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}"
							BackgroundFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundFocusedBrushKey}}"
							BackgroundHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundHoverBrushKey}}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderBrushDisabled="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderDisabledBrushKey}}"
							BorderBrushFocused="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderFocusedBrushKey}}"
							BorderBrushHover="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderHoverBrushKey}}"
							BorderThickness="{TemplateBinding BorderThickness}"
							IsAnimationEnabled="{TemplateBinding themes:ThemeProperties.IsAnimationEnabled}"
							BorderStyle="{DynamicResource {x:Static themes:AssetResourceKeys.ListElementChromeBorderStyleKey}}" 
							CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}"
						    SnapsToDevicePixels="true">
						<Grid>
							<TextBlock x:Name="heightRequirement" Text="Gg" Visibility="Hidden" />
							<ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.FontFamily="Times New Roman" />
							<ContentPresenter x:Name="hint" Margin="4,0" VerticalAlignment="Center" IsHitTestVisible="False"
									Content="{TemplateBinding controls:HintProperties.Hint}"
									ContentTemplate="{TemplateBinding controls:HintProperties.HintTemplate}"
									ContentTemplateSelector="{TemplateBinding controls:HintProperties.HintTemplateSelector}" Opacity="0.67"
									Visibility="Collapsed"
									TextBlock.Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
						</Grid>
					</controlsPrimitives:ElementChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="themes:ThemeProperties.UseBackgroundStates" Value="false">
							<Setter TargetName="chrome" Property="BackgroundFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BackgroundHover" Value="{x:Null}" />
						</Trigger>
						<Trigger Property="themes:ThemeProperties.UseBorderStates" Value="false">
							<Setter TargetName="chrome" Property="BorderBrushDisabled" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushFocused" Value="{x:Null}" />
							<Setter TargetName="chrome" Property="BorderBrushHover" Value="{x:Null}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="themes:ThemeProperties.UseBorderStates" Value="false" />
								<Condition Property="BorderBrush" Value="Transparent" />
							</MultiTrigger.Conditions>
							<Setter TargetName="chrome" Property="BorderStyle" Value="Default" />
						</MultiTrigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Hover" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter TargetName="chrome" Property="State" Value="Focused" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground"
									Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
							<Setter TargetName="chrome" Property="State" Value="Disabled" />
						</Trigger>

						<!-- Hint related triggers -->
						<Trigger Property="controls:HintProperties.HasHint" Value="True">
							<Setter TargetName="hint" Property="Visibility" Value="Visible" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="controls:HintProperties.HasContent" Value="False" />
								<Condition Property="IsKeyboardFocusWithin" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" To=".33" Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<Trigger Property="controls:HintProperties.HasContent" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="hint" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
