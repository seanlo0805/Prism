<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:ActiproSoftware.Windows.Controls.PropertyGrid.Interop.WinForms;assembly=ActiproSoftware.PropertyGrid.Interop.WinForms.Wpf"
		xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
		xmlns:propgrid="http://schemas.actiprosoftware.com/winfx/xaml/propgrid"
		xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
		xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
		>

	<!-- Converters -->
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	<!--
	
	STYLES
	
	-->
	
	<!-- ComboBoxFocusVisualKey -->
	<Style x:Key="ComboBoxFocusVisualKey">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="4,4,21,4" StrokeThickness="1"
							Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" StrokeDashArray="1 2"
							SnapsToDevicePixels="true" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ComboBoxEditableTextBoxKey -->
	<Style x:Key="ComboBoxEditableTextBoxKey" TargetType="{x:Type TextBox}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="AllowDrop" Value="true" />
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
							VerticalScrollBarVisibility="Hidden" Background="Transparent" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- local:UITypeEditorControl -->
	<Style x:Key="{x:Type local:UITypeEditorControl}" TargetType="{x:Type local:UITypeEditorControl}">
		<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundNormalBrushKey}}" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}" />

		<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisualKey}" />

		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:UITypeEditorControl}">
					<Grid x:Name="Placement" SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<!-- 10/7/2011 - Reset FontWeight/FontStyle so drop-down content doesn't inherit from property editor (0FD-1620D5DE-120E) -->
						<Popup x:Name="PART_Popup" Grid.ColumnSpan="3" AllowsTransparency="false" Placement="Bottom"
								IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" StaysOpen="False"
								TextBlock.FontWeight="Normal" TextBlock.FontStyle="Normal">
							<shared:DropShadowChrome x:Name="shadow" Color="Transparent"
									MinWidth="{Binding ElementName=Placement,Path=ActualWidth}">
								<Border Background="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBackgroundNormalBrushKey}}"
										BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalBrushKey}}"
										BorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.PopupBorderNormalThicknessKey}}" Padding="5,0,5,5">
									<WindowsFormsHost x:Name="PART_DropDownContentHost" />
								</Border>
							</shared:DropShadowChrome>
						</Popup>

						<Border x:Name="Border" Grid.ColumnSpan="3" BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
						<WindowsFormsHost x:Name="PART_CustomDrawHost" Width="22" Height="18" />
						<TextBox x:Name="PART_EditableTextBox" Grid.Column="1" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PropertyDataAccessor}"
								Margin="{TemplateBinding Padding}"
								Style="{StaticResource ComboBoxEditableTextBoxKey}"
								IsReadOnly="{Binding Path=IsLimitedToStandardValues}"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								Text="{Binding ValueAsString}"/>
						<editors:DropDownButton Grid.Column="2"
								IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="{TemplateBinding IsDropDownButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
						<Button Grid.Column="2" Style="{DynamicResource {x:Static themes:SharedResourceKeys.EmbeddedButtonBaseStyleKey}}"
								Padding="2,0" VerticalAlignment="Stretch" TextBlock.FontWeight="Normal" TextBlock.FontStyle="Normal"
								Content="..." Command="propgrid:PropertyGrid.ShowPropertyDialogCommand"
								Visibility="{TemplateBinding IsDialogButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocusWithin" Value="true">
							<Setter Property="Foreground" Value="Black" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundDisabledBrushKey}}" />
							<Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
							<Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
							<Setter TargetName="shadow" Property="Color" Value="#71000000" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>