<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
    xmlns:ribbon="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon;assembly=ActiproSoftware.Ribbon.Wpf"
    xmlns:ribbonControls="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Controls;assembly=ActiproSoftware.Ribbon.Wpf"
    xmlns:ribbonControlsPrimitives="clr-namespace:ActiproSoftware.Windows.Controls.Ribbon.Controls.Primitives;assembly=ActiproSoftware.Ribbon.Wpf"
	>

	<!-- ribbonControls:TaskTabItem -->
	<Style x:Key="{x:Type ribbonControls:TaskTabItem}" TargetType="{x:Type ribbonControls:TaskTabItem}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="themes:ThemeProperties.CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ButtonBorderNormalCornerRadiusKey}}" />

		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Margin" Value="0,1,0,1" />
		<Setter Property="Padding" Value="4,4,10,4" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ribbonControls:TaskTabItem}">

					<Grid ClipToBounds="True">
						<Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding themes:ThemeProperties.CornerRadius}" 
							BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
							<Border x:Name="innerBorder" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
								<shared:PixelSnapper Margin="{TemplateBinding Padding}">
									<ContentPresenter x:Name="label" ContentSource="Header" />
								</shared:PixelSnapper>
							</Border>
						</Border>
								
						<Path x:Name="arrow" Data="M 7,0 L 0,6.5 L 7,13 Z" Fill="{DynamicResource {x:Static themes:AssetResourceKeys.BackstageTabItemDecorationSelectedBrushKey}}" 
							  Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderCheckedNormalBrushKey}}"
								HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="Collapsed">
							<Path.RenderTransform>
								<TranslateTransform X="1" />
							</Path.RenderTransform>
						</Path>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonLargeBackgroundHoverBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderHoverBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderHoverBrushKey}}" />
							<Setter TargetName="label" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonLargeBackgroundCheckedNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderCheckedNormalBrushKey}}" />
							<Setter TargetName="innerBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonLargeBackgroundCheckedNormalBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderCheckedNormalBrushKey}}" />
							<Setter TargetName="label" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
							<Setter TargetName="arrow" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonLargeBackgroundCheckedNormalBrushKey}}" />
							<Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonBorderCheckedNormalBrushKey}}" />
							<Setter TargetName="innerBorder" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonLargeBackgroundCheckedNormalBrushKey}}" />
							<Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonInnerBorderCheckedNormalBrushKey}}" />
							<Setter TargetName="label" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolBarButtonForegroundHoverBrushKey}}" />
							<Setter TargetName="arrow" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="label" Property="TextElement.Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}"/>
						</Trigger>
						<Trigger Property="themes:ThemeProperties.CornerRadius" Value="0">
							<Setter TargetName="arrow" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
</ResourceDictionary>